
[TestProfileSuite/TestProfileColumns/duckdb_no_conditions_no_segmentation - 1]
select
  count(*) as num_rows, 
  count(workspace) as workspace$num_not_null, 
  count(distinct workspace) as workspace$num_unique, 
  COALESCE(SUM(CASE WHEN %s THEN 1 ELSE 0 END)(workspace = ''), 0) as workspace$num_empty, 
  CAST(COALESCE(min(length(workspace)), 0) AS FLOAT) as workspace$min_length, 
  CAST(COALESCE(max(length(workspace)), 0) AS FLOAT) as workspace$max_length, 
  CAST(COALESCE(avg(length(workspace)), 0) AS FLOAT) as workspace$mean_length, 
  count(meta) as meta$num_not_null, 
  count(distinct meta) as meta$num_unique, 
  COALESCE(SUM(CASE WHEN %s THEN 1 ELSE 0 END)(meta = ''), 0) as meta$num_empty, 
  CAST(COALESCE(min(length(meta)), 0) AS FLOAT) as meta$min_length, 
  CAST(COALESCE(max(length(meta)), 0) AS FLOAT) as meta$max_length, 
  CAST(COALESCE(avg(length(meta)), 0) AS FLOAT) as meta$mean_length, 
  count(run_status) as run_status$num_not_null, 
  count(distinct run_status) as run_status$num_unique, 
  COALESCE(SUM(CASE WHEN %s THEN 1 ELSE 0 END)(run_status = 0), 0) as run_status$num_empty, 
  CAST(COALESCE(avg(run_status), 0) AS FLOAT) as run_status$mean, 
  CAST(COALESCE(min(run_status), 0) AS FLOAT) as run_status$min, 
  CAST(COALESCE(max(run_status), 0) AS FLOAT) as run_status$max, 
  CAST(COALESCE(MEDIAN(run_status), 0) AS FLOAT) as run_status$median, 
  CAST(COALESCE(STDDEV(run_status), 0) AS FLOAT) as run_status$stddev, 
  count(created_at) as created_at$num_not_null, 
  min(created_at) as created_at$min, 
  max(created_at) as created_at$max
from default.runs 


order by num_rows desc limit 1000
---

[TestProfileSuite/TestProfileColumns/duckdb_no_conditions_single_segmentation_all - 1]
select
  SUBSTRING(CAST(run_type AS VARCHAR), 1, 100) as segment, 
  count(*) as num_rows, 
  count(workspace) as workspace$num_not_null, 
  count(distinct workspace) as workspace$num_unique, 
  COALESCE(SUM(CASE WHEN %s THEN 1 ELSE 0 END)(workspace = ''), 0) as workspace$num_empty, 
  CAST(COALESCE(min(length(workspace)), 0) AS FLOAT) as workspace$min_length, 
  CAST(COALESCE(max(length(workspace)), 0) AS FLOAT) as workspace$max_length, 
  CAST(COALESCE(avg(length(workspace)), 0) AS FLOAT) as workspace$mean_length, 
  count(meta) as meta$num_not_null, 
  count(distinct meta) as meta$num_unique, 
  COALESCE(SUM(CASE WHEN %s THEN 1 ELSE 0 END)(meta = ''), 0) as meta$num_empty, 
  CAST(COALESCE(min(length(meta)), 0) AS FLOAT) as meta$min_length, 
  CAST(COALESCE(max(length(meta)), 0) AS FLOAT) as meta$max_length, 
  CAST(COALESCE(avg(length(meta)), 0) AS FLOAT) as meta$mean_length, 
  count(run_status) as run_status$num_not_null, 
  count(distinct run_status) as run_status$num_unique, 
  COALESCE(SUM(CASE WHEN %s THEN 1 ELSE 0 END)(run_status = 0), 0) as run_status$num_empty, 
  CAST(COALESCE(avg(run_status), 0) AS FLOAT) as run_status$mean, 
  CAST(COALESCE(min(run_status), 0) AS FLOAT) as run_status$min, 
  CAST(COALESCE(max(run_status), 0) AS FLOAT) as run_status$max, 
  CAST(COALESCE(MEDIAN(run_status), 0) AS FLOAT) as run_status$median, 
  CAST(COALESCE(STDDEV(run_status), 0) AS FLOAT) as run_status$stddev, 
  count(created_at) as created_at$num_not_null, 
  min(created_at) as created_at$min, 
  max(created_at) as created_at$max
from default.runs 

group by segment
order by num_rows desc limit 1000
---

[TestProfileSuite/TestProfileColumns/duckdb_no_conditions_multi_segmentation - 1]
select
  SUBSTRING(CAST(workspace AS VARCHAR), 1, 100) as segment, 
  SUBSTRING(CAST(run_status AS VARCHAR), 1, 100) as segment2, 
  SUBSTRING(CAST(run_type AS VARCHAR), 1, 100) as segment3, 
  count(*) as num_rows, 
  count(workspace) as workspace$num_not_null, 
  count(distinct workspace) as workspace$num_unique, 
  COALESCE(SUM(CASE WHEN %s THEN 1 ELSE 0 END)(workspace = ''), 0) as workspace$num_empty, 
  CAST(COALESCE(min(length(workspace)), 0) AS FLOAT) as workspace$min_length, 
  CAST(COALESCE(max(length(workspace)), 0) AS FLOAT) as workspace$max_length, 
  CAST(COALESCE(avg(length(workspace)), 0) AS FLOAT) as workspace$mean_length, 
  count(meta) as meta$num_not_null, 
  count(distinct meta) as meta$num_unique, 
  COALESCE(SUM(CASE WHEN %s THEN 1 ELSE 0 END)(meta = ''), 0) as meta$num_empty, 
  CAST(COALESCE(min(length(meta)), 0) AS FLOAT) as meta$min_length, 
  CAST(COALESCE(max(length(meta)), 0) AS FLOAT) as meta$max_length, 
  CAST(COALESCE(avg(length(meta)), 0) AS FLOAT) as meta$mean_length, 
  count(run_status) as run_status$num_not_null, 
  count(distinct run_status) as run_status$num_unique, 
  COALESCE(SUM(CASE WHEN %s THEN 1 ELSE 0 END)(run_status = 0), 0) as run_status$num_empty, 
  CAST(COALESCE(avg(run_status), 0) AS FLOAT) as run_status$mean, 
  CAST(COALESCE(min(run_status), 0) AS FLOAT) as run_status$min, 
  CAST(COALESCE(max(run_status), 0) AS FLOAT) as run_status$max, 
  CAST(COALESCE(MEDIAN(run_status), 0) AS FLOAT) as run_status$median, 
  CAST(COALESCE(STDDEV(run_status), 0) AS FLOAT) as run_status$stddev, 
  count(created_at) as created_at$num_not_null, 
  min(created_at) as created_at$min, 
  max(created_at) as created_at$max
from default.runs 

group by
  segment, 
  segment2, 
  segment3
order by num_rows desc limit 1000
---

[TestProfileSuite/TestProfileColumns/duckdb_single_condition_no_segmentation - 1]
select
  count(*) as num_rows, 
  count(workspace) as workspace$num_not_null, 
  count(distinct workspace) as workspace$num_unique, 
  COALESCE(SUM(CASE WHEN %s THEN 1 ELSE 0 END)(workspace = ''), 0) as workspace$num_empty, 
  CAST(COALESCE(min(length(workspace)), 0) AS FLOAT) as workspace$min_length, 
  CAST(COALESCE(max(length(workspace)), 0) AS FLOAT) as workspace$max_length, 
  CAST(COALESCE(avg(length(workspace)), 0) AS FLOAT) as workspace$mean_length, 
  count(meta) as meta$num_not_null, 
  count(distinct meta) as meta$num_unique, 
  COALESCE(SUM(CASE WHEN %s THEN 1 ELSE 0 END)(meta = ''), 0) as meta$num_empty, 
  CAST(COALESCE(min(length(meta)), 0) AS FLOAT) as meta$min_length, 
  CAST(COALESCE(max(length(meta)), 0) AS FLOAT) as meta$max_length, 
  CAST(COALESCE(avg(length(meta)), 0) AS FLOAT) as meta$mean_length, 
  count(run_status) as run_status$num_not_null, 
  count(distinct run_status) as run_status$num_unique, 
  COALESCE(SUM(CASE WHEN %s THEN 1 ELSE 0 END)(run_status = 0), 0) as run_status$num_empty, 
  CAST(COALESCE(avg(run_status), 0) AS FLOAT) as run_status$mean, 
  CAST(COALESCE(min(run_status), 0) AS FLOAT) as run_status$min, 
  CAST(COALESCE(max(run_status), 0) AS FLOAT) as run_status$max, 
  CAST(COALESCE(MEDIAN(run_status), 0) AS FLOAT) as run_status$median, 
  CAST(COALESCE(STDDEV(run_status), 0) AS FLOAT) as run_status$stddev, 
  count(created_at) as created_at$num_not_null, 
  min(created_at) as created_at$min, 
  max(created_at) as created_at$max
from default.runs 
where 1=1

order by num_rows desc limit 1000
---

[TestProfileSuite/TestProfileColumns/duckdb_single_condition_single_segmentation_all - 1]
select
  SUBSTRING(CAST(run_type AS VARCHAR), 1, 100) as segment, 
  count(*) as num_rows, 
  count(workspace) as workspace$num_not_null, 
  count(distinct workspace) as workspace$num_unique, 
  COALESCE(SUM(CASE WHEN %s THEN 1 ELSE 0 END)(workspace = ''), 0) as workspace$num_empty, 
  CAST(COALESCE(min(length(workspace)), 0) AS FLOAT) as workspace$min_length, 
  CAST(COALESCE(max(length(workspace)), 0) AS FLOAT) as workspace$max_length, 
  CAST(COALESCE(avg(length(workspace)), 0) AS FLOAT) as workspace$mean_length, 
  count(meta) as meta$num_not_null, 
  count(distinct meta) as meta$num_unique, 
  COALESCE(SUM(CASE WHEN %s THEN 1 ELSE 0 END)(meta = ''), 0) as meta$num_empty, 
  CAST(COALESCE(min(length(meta)), 0) AS FLOAT) as meta$min_length, 
  CAST(COALESCE(max(length(meta)), 0) AS FLOAT) as meta$max_length, 
  CAST(COALESCE(avg(length(meta)), 0) AS FLOAT) as meta$mean_length, 
  count(run_status) as run_status$num_not_null, 
  count(distinct run_status) as run_status$num_unique, 
  COALESCE(SUM(CASE WHEN %s THEN 1 ELSE 0 END)(run_status = 0), 0) as run_status$num_empty, 
  CAST(COALESCE(avg(run_status), 0) AS FLOAT) as run_status$mean, 
  CAST(COALESCE(min(run_status), 0) AS FLOAT) as run_status$min, 
  CAST(COALESCE(max(run_status), 0) AS FLOAT) as run_status$max, 
  CAST(COALESCE(MEDIAN(run_status), 0) AS FLOAT) as run_status$median, 
  CAST(COALESCE(STDDEV(run_status), 0) AS FLOAT) as run_status$stddev, 
  count(created_at) as created_at$num_not_null, 
  min(created_at) as created_at$min, 
  max(created_at) as created_at$max
from default.runs 
where 1=1
group by segment
order by num_rows desc limit 1000
---

[TestProfileSuite/TestProfileColumns/duckdb_single_condition_multi_segmentation - 1]
select
  SUBSTRING(CAST(workspace AS VARCHAR), 1, 100) as segment, 
  SUBSTRING(CAST(run_status AS VARCHAR), 1, 100) as segment2, 
  SUBSTRING(CAST(run_type AS VARCHAR), 1, 100) as segment3, 
  count(*) as num_rows, 
  count(workspace) as workspace$num_not_null, 
  count(distinct workspace) as workspace$num_unique, 
  COALESCE(SUM(CASE WHEN %s THEN 1 ELSE 0 END)(workspace = ''), 0) as workspace$num_empty, 
  CAST(COALESCE(min(length(workspace)), 0) AS FLOAT) as workspace$min_length, 
  CAST(COALESCE(max(length(workspace)), 0) AS FLOAT) as workspace$max_length, 
  CAST(COALESCE(avg(length(workspace)), 0) AS FLOAT) as workspace$mean_length, 
  count(meta) as meta$num_not_null, 
  count(distinct meta) as meta$num_unique, 
  COALESCE(SUM(CASE WHEN %s THEN 1 ELSE 0 END)(meta = ''), 0) as meta$num_empty, 
  CAST(COALESCE(min(length(meta)), 0) AS FLOAT) as meta$min_length, 
  CAST(COALESCE(max(length(meta)), 0) AS FLOAT) as meta$max_length, 
  CAST(COALESCE(avg(length(meta)), 0) AS FLOAT) as meta$mean_length, 
  count(run_status) as run_status$num_not_null, 
  count(distinct run_status) as run_status$num_unique, 
  COALESCE(SUM(CASE WHEN %s THEN 1 ELSE 0 END)(run_status = 0), 0) as run_status$num_empty, 
  CAST(COALESCE(avg(run_status), 0) AS FLOAT) as run_status$mean, 
  CAST(COALESCE(min(run_status), 0) AS FLOAT) as run_status$min, 
  CAST(COALESCE(max(run_status), 0) AS FLOAT) as run_status$max, 
  CAST(COALESCE(MEDIAN(run_status), 0) AS FLOAT) as run_status$median, 
  CAST(COALESCE(STDDEV(run_status), 0) AS FLOAT) as run_status$stddev, 
  count(created_at) as created_at$num_not_null, 
  min(created_at) as created_at$min, 
  max(created_at) as created_at$max
from default.runs 
where 1=1
group by
  segment, 
  segment2, 
  segment3
order by num_rows desc limit 1000
---

[TestProfileSuite/TestProfileColumns/duckdb_multi_condition_no_segmentation - 1]
select
  count(*) as num_rows, 
  count(workspace) as workspace$num_not_null, 
  count(distinct workspace) as workspace$num_unique, 
  COALESCE(SUM(CASE WHEN %s THEN 1 ELSE 0 END)(workspace = ''), 0) as workspace$num_empty, 
  CAST(COALESCE(min(length(workspace)), 0) AS FLOAT) as workspace$min_length, 
  CAST(COALESCE(max(length(workspace)), 0) AS FLOAT) as workspace$max_length, 
  CAST(COALESCE(avg(length(workspace)), 0) AS FLOAT) as workspace$mean_length, 
  count(meta) as meta$num_not_null, 
  count(distinct meta) as meta$num_unique, 
  COALESCE(SUM(CASE WHEN %s THEN 1 ELSE 0 END)(meta = ''), 0) as meta$num_empty, 
  CAST(COALESCE(min(length(meta)), 0) AS FLOAT) as meta$min_length, 
  CAST(COALESCE(max(length(meta)), 0) AS FLOAT) as meta$max_length, 
  CAST(COALESCE(avg(length(meta)), 0) AS FLOAT) as meta$mean_length, 
  count(run_status) as run_status$num_not_null, 
  count(distinct run_status) as run_status$num_unique, 
  COALESCE(SUM(CASE WHEN %s THEN 1 ELSE 0 END)(run_status = 0), 0) as run_status$num_empty, 
  CAST(COALESCE(avg(run_status), 0) AS FLOAT) as run_status$mean, 
  CAST(COALESCE(min(run_status), 0) AS FLOAT) as run_status$min, 
  CAST(COALESCE(max(run_status), 0) AS FLOAT) as run_status$max, 
  CAST(COALESCE(MEDIAN(run_status), 0) AS FLOAT) as run_status$median, 
  CAST(COALESCE(STDDEV(run_status), 0) AS FLOAT) as run_status$stddev, 
  count(created_at) as created_at$num_not_null, 
  min(created_at) as created_at$min, 
  max(created_at) as created_at$max
from default.runs 
where
  run_status > 0 and 
  run_type > 0

order by num_rows desc limit 1000
---

[TestProfileSuite/TestProfileColumns/duckdb_multi_condition_single_segmentation_all - 1]
select
  SUBSTRING(CAST(run_type AS VARCHAR), 1, 100) as segment, 
  count(*) as num_rows, 
  count(workspace) as workspace$num_not_null, 
  count(distinct workspace) as workspace$num_unique, 
  COALESCE(SUM(CASE WHEN %s THEN 1 ELSE 0 END)(workspace = ''), 0) as workspace$num_empty, 
  CAST(COALESCE(min(length(workspace)), 0) AS FLOAT) as workspace$min_length, 
  CAST(COALESCE(max(length(workspace)), 0) AS FLOAT) as workspace$max_length, 
  CAST(COALESCE(avg(length(workspace)), 0) AS FLOAT) as workspace$mean_length, 
  count(meta) as meta$num_not_null, 
  count(distinct meta) as meta$num_unique, 
  COALESCE(SUM(CASE WHEN %s THEN 1 ELSE 0 END)(meta = ''), 0) as meta$num_empty, 
  CAST(COALESCE(min(length(meta)), 0) AS FLOAT) as meta$min_length, 
  CAST(COALESCE(max(length(meta)), 0) AS FLOAT) as meta$max_length, 
  CAST(COALESCE(avg(length(meta)), 0) AS FLOAT) as meta$mean_length, 
  count(run_status) as run_status$num_not_null, 
  count(distinct run_status) as run_status$num_unique, 
  COALESCE(SUM(CASE WHEN %s THEN 1 ELSE 0 END)(run_status = 0), 0) as run_status$num_empty, 
  CAST(COALESCE(avg(run_status), 0) AS FLOAT) as run_status$mean, 
  CAST(COALESCE(min(run_status), 0) AS FLOAT) as run_status$min, 
  CAST(COALESCE(max(run_status), 0) AS FLOAT) as run_status$max, 
  CAST(COALESCE(MEDIAN(run_status), 0) AS FLOAT) as run_status$median, 
  CAST(COALESCE(STDDEV(run_status), 0) AS FLOAT) as run_status$stddev, 
  count(created_at) as created_at$num_not_null, 
  min(created_at) as created_at$min, 
  max(created_at) as created_at$max
from default.runs 
where
  run_status > 0 and 
  run_type > 0
group by segment
order by num_rows desc limit 1000
---

[TestProfileSuite/TestProfileColumns/duckdb_multi_condition_multi_segmentation - 1]
select
  SUBSTRING(CAST(workspace AS VARCHAR), 1, 100) as segment, 
  SUBSTRING(CAST(run_status AS VARCHAR), 1, 100) as segment2, 
  SUBSTRING(CAST(run_type AS VARCHAR), 1, 100) as segment3, 
  count(*) as num_rows, 
  count(workspace) as workspace$num_not_null, 
  count(distinct workspace) as workspace$num_unique, 
  COALESCE(SUM(CASE WHEN %s THEN 1 ELSE 0 END)(workspace = ''), 0) as workspace$num_empty, 
  CAST(COALESCE(min(length(workspace)), 0) AS FLOAT) as workspace$min_length, 
  CAST(COALESCE(max(length(workspace)), 0) AS FLOAT) as workspace$max_length, 
  CAST(COALESCE(avg(length(workspace)), 0) AS FLOAT) as workspace$mean_length, 
  count(meta) as meta$num_not_null, 
  count(distinct meta) as meta$num_unique, 
  COALESCE(SUM(CASE WHEN %s THEN 1 ELSE 0 END)(meta = ''), 0) as meta$num_empty, 
  CAST(COALESCE(min(length(meta)), 0) AS FLOAT) as meta$min_length, 
  CAST(COALESCE(max(length(meta)), 0) AS FLOAT) as meta$max_length, 
  CAST(COALESCE(avg(length(meta)), 0) AS FLOAT) as meta$mean_length, 
  count(run_status) as run_status$num_not_null, 
  count(distinct run_status) as run_status$num_unique, 
  COALESCE(SUM(CASE WHEN %s THEN 1 ELSE 0 END)(run_status = 0), 0) as run_status$num_empty, 
  CAST(COALESCE(avg(run_status), 0) AS FLOAT) as run_status$mean, 
  CAST(COALESCE(min(run_status), 0) AS FLOAT) as run_status$min, 
  CAST(COALESCE(max(run_status), 0) AS FLOAT) as run_status$max, 
  CAST(COALESCE(MEDIAN(run_status), 0) AS FLOAT) as run_status$median, 
  CAST(COALESCE(STDDEV(run_status), 0) AS FLOAT) as run_status$stddev, 
  count(created_at) as created_at$num_not_null, 
  min(created_at) as created_at$min, 
  max(created_at) as created_at$max
from default.runs 
where
  run_status > 0 and 
  run_type > 0
group by
  segment, 
  segment2, 
  segment3
order by num_rows desc limit 1000
---
