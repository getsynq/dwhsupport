
[TestProfileSuite/TestProfileColumns/clickhouse_no_conditions_no_segmentation - 1]
select
  toInt64(count(*)) as num_rows, 
  toInt64(count(workspace)) as workspace$num_not_null, 
  toInt64(count(distinct workspace)) as workspace$num_unique, 
  toInt64(countIf(workspace = '')) as workspace$num_empty, 
  toFloat64(min(length(workspace))) as workspace$min_length, 
  toFloat64(max(length(workspace))) as workspace$max_length, 
  toFloat64(avg(length(workspace))) as workspace$mean_length, 
  toInt64(count(meta)) as meta$num_not_null, 
  toInt64(count(distinct meta)) as meta$num_unique, 
  toInt64(countIf(meta = '')) as meta$num_empty, 
  toFloat64(min(length(meta))) as meta$min_length, 
  toFloat64(max(length(meta))) as meta$max_length, 
  toFloat64(avg(length(meta))) as meta$mean_length, 
  toInt64(count(run_status)) as run_status$num_not_null, 
  toInt64(count(distinct run_status)) as run_status$num_unique, 
  toInt64(countIf(run_status = 0)) as run_status$num_empty, 
  toFloat64(avg(run_status)) as run_status$mean, 
  toFloat64(min(run_status)) as run_status$min, 
  toFloat64(max(run_status)) as run_status$max, 
  toFloat64(median(run_status)) as run_status$median, 
  toFloat64(stddevSamp(run_status)) as run_status$stddev, 
  toInt64(count(created_at)) as created_at$num_not_null, 
  min(created_at) as created_at$min, 
  max(created_at) as created_at$max
from default.runs 
order by num_rows desc limit 1000
---

[TestProfileSuite/TestProfileColumns/clickhouse_no_conditions_single_segmentation_all - 1]
select
  substring(toString(run_type), 1, 100) as segment, 
  toInt64(count(*)) as num_rows, 
  toInt64(count(workspace)) as workspace$num_not_null, 
  toInt64(count(distinct workspace)) as workspace$num_unique, 
  toInt64(countIf(workspace = '')) as workspace$num_empty, 
  toFloat64(min(length(workspace))) as workspace$min_length, 
  toFloat64(max(length(workspace))) as workspace$max_length, 
  toFloat64(avg(length(workspace))) as workspace$mean_length, 
  toInt64(count(meta)) as meta$num_not_null, 
  toInt64(count(distinct meta)) as meta$num_unique, 
  toInt64(countIf(meta = '')) as meta$num_empty, 
  toFloat64(min(length(meta))) as meta$min_length, 
  toFloat64(max(length(meta))) as meta$max_length, 
  toFloat64(avg(length(meta))) as meta$mean_length, 
  toInt64(count(run_status)) as run_status$num_not_null, 
  toInt64(count(distinct run_status)) as run_status$num_unique, 
  toInt64(countIf(run_status = 0)) as run_status$num_empty, 
  toFloat64(avg(run_status)) as run_status$mean, 
  toFloat64(min(run_status)) as run_status$min, 
  toFloat64(max(run_status)) as run_status$max, 
  toFloat64(median(run_status)) as run_status$median, 
  toFloat64(stddevSamp(run_status)) as run_status$stddev, 
  toInt64(count(created_at)) as created_at$num_not_null, 
  min(created_at) as created_at$min, 
  max(created_at) as created_at$max
from default.runs 
group by segment
order by num_rows desc limit 1000
---

[TestProfileSuite/TestProfileColumns/clickhouse_no_conditions_multi_segmentation - 1]
select
  substring(toString(workspace), 1, 100) as segment, 
  substring(toString(run_status), 1, 100) as segment2, 
  substring(toString(run_type), 1, 100) as segment3, 
  toInt64(count(*)) as num_rows, 
  toInt64(count(workspace)) as workspace$num_not_null, 
  toInt64(count(distinct workspace)) as workspace$num_unique, 
  toInt64(countIf(workspace = '')) as workspace$num_empty, 
  toFloat64(min(length(workspace))) as workspace$min_length, 
  toFloat64(max(length(workspace))) as workspace$max_length, 
  toFloat64(avg(length(workspace))) as workspace$mean_length, 
  toInt64(count(meta)) as meta$num_not_null, 
  toInt64(count(distinct meta)) as meta$num_unique, 
  toInt64(countIf(meta = '')) as meta$num_empty, 
  toFloat64(min(length(meta))) as meta$min_length, 
  toFloat64(max(length(meta))) as meta$max_length, 
  toFloat64(avg(length(meta))) as meta$mean_length, 
  toInt64(count(run_status)) as run_status$num_not_null, 
  toInt64(count(distinct run_status)) as run_status$num_unique, 
  toInt64(countIf(run_status = 0)) as run_status$num_empty, 
  toFloat64(avg(run_status)) as run_status$mean, 
  toFloat64(min(run_status)) as run_status$min, 
  toFloat64(max(run_status)) as run_status$max, 
  toFloat64(median(run_status)) as run_status$median, 
  toFloat64(stddevSamp(run_status)) as run_status$stddev, 
  toInt64(count(created_at)) as created_at$num_not_null, 
  min(created_at) as created_at$min, 
  max(created_at) as created_at$max
from default.runs 
group by
  segment, 
  segment2, 
  segment3
order by num_rows desc limit 1000
---

[TestProfileSuite/TestProfileColumns/clickhouse_single_condition_no_segmentation - 1]
select
  toInt64(count(*)) as num_rows, 
  toInt64(count(workspace)) as workspace$num_not_null, 
  toInt64(count(distinct workspace)) as workspace$num_unique, 
  toInt64(countIf(workspace = '')) as workspace$num_empty, 
  toFloat64(min(length(workspace))) as workspace$min_length, 
  toFloat64(max(length(workspace))) as workspace$max_length, 
  toFloat64(avg(length(workspace))) as workspace$mean_length, 
  toInt64(count(meta)) as meta$num_not_null, 
  toInt64(count(distinct meta)) as meta$num_unique, 
  toInt64(countIf(meta = '')) as meta$num_empty, 
  toFloat64(min(length(meta))) as meta$min_length, 
  toFloat64(max(length(meta))) as meta$max_length, 
  toFloat64(avg(length(meta))) as meta$mean_length, 
  toInt64(count(run_status)) as run_status$num_not_null, 
  toInt64(count(distinct run_status)) as run_status$num_unique, 
  toInt64(countIf(run_status = 0)) as run_status$num_empty, 
  toFloat64(avg(run_status)) as run_status$mean, 
  toFloat64(min(run_status)) as run_status$min, 
  toFloat64(max(run_status)) as run_status$max, 
  toFloat64(median(run_status)) as run_status$median, 
  toFloat64(stddevSamp(run_status)) as run_status$stddev, 
  toInt64(count(created_at)) as created_at$num_not_null, 
  min(created_at) as created_at$min, 
  max(created_at) as created_at$max
from default.runs 
where (1=1)
order by num_rows desc limit 1000
---

[TestProfileSuite/TestProfileColumns/clickhouse_single_condition_single_segmentation_all - 1]
select
  substring(toString(run_type), 1, 100) as segment, 
  toInt64(count(*)) as num_rows, 
  toInt64(count(workspace)) as workspace$num_not_null, 
  toInt64(count(distinct workspace)) as workspace$num_unique, 
  toInt64(countIf(workspace = '')) as workspace$num_empty, 
  toFloat64(min(length(workspace))) as workspace$min_length, 
  toFloat64(max(length(workspace))) as workspace$max_length, 
  toFloat64(avg(length(workspace))) as workspace$mean_length, 
  toInt64(count(meta)) as meta$num_not_null, 
  toInt64(count(distinct meta)) as meta$num_unique, 
  toInt64(countIf(meta = '')) as meta$num_empty, 
  toFloat64(min(length(meta))) as meta$min_length, 
  toFloat64(max(length(meta))) as meta$max_length, 
  toFloat64(avg(length(meta))) as meta$mean_length, 
  toInt64(count(run_status)) as run_status$num_not_null, 
  toInt64(count(distinct run_status)) as run_status$num_unique, 
  toInt64(countIf(run_status = 0)) as run_status$num_empty, 
  toFloat64(avg(run_status)) as run_status$mean, 
  toFloat64(min(run_status)) as run_status$min, 
  toFloat64(max(run_status)) as run_status$max, 
  toFloat64(median(run_status)) as run_status$median, 
  toFloat64(stddevSamp(run_status)) as run_status$stddev, 
  toInt64(count(created_at)) as created_at$num_not_null, 
  min(created_at) as created_at$min, 
  max(created_at) as created_at$max
from default.runs 
where (1=1)
group by segment
order by num_rows desc limit 1000
---

[TestProfileSuite/TestProfileColumns/clickhouse_single_condition_multi_segmentation - 1]
select
  substring(toString(workspace), 1, 100) as segment, 
  substring(toString(run_status), 1, 100) as segment2, 
  substring(toString(run_type), 1, 100) as segment3, 
  toInt64(count(*)) as num_rows, 
  toInt64(count(workspace)) as workspace$num_not_null, 
  toInt64(count(distinct workspace)) as workspace$num_unique, 
  toInt64(countIf(workspace = '')) as workspace$num_empty, 
  toFloat64(min(length(workspace))) as workspace$min_length, 
  toFloat64(max(length(workspace))) as workspace$max_length, 
  toFloat64(avg(length(workspace))) as workspace$mean_length, 
  toInt64(count(meta)) as meta$num_not_null, 
  toInt64(count(distinct meta)) as meta$num_unique, 
  toInt64(countIf(meta = '')) as meta$num_empty, 
  toFloat64(min(length(meta))) as meta$min_length, 
  toFloat64(max(length(meta))) as meta$max_length, 
  toFloat64(avg(length(meta))) as meta$mean_length, 
  toInt64(count(run_status)) as run_status$num_not_null, 
  toInt64(count(distinct run_status)) as run_status$num_unique, 
  toInt64(countIf(run_status = 0)) as run_status$num_empty, 
  toFloat64(avg(run_status)) as run_status$mean, 
  toFloat64(min(run_status)) as run_status$min, 
  toFloat64(max(run_status)) as run_status$max, 
  toFloat64(median(run_status)) as run_status$median, 
  toFloat64(stddevSamp(run_status)) as run_status$stddev, 
  toInt64(count(created_at)) as created_at$num_not_null, 
  min(created_at) as created_at$min, 
  max(created_at) as created_at$max
from default.runs 
where (1=1)
group by
  segment, 
  segment2, 
  segment3
order by num_rows desc limit 1000
---

[TestProfileSuite/TestProfileColumns/clickhouse_multi_condition_no_segmentation - 1]
select
  toInt64(count(*)) as num_rows, 
  toInt64(count(workspace)) as workspace$num_not_null, 
  toInt64(count(distinct workspace)) as workspace$num_unique, 
  toInt64(countIf(workspace = '')) as workspace$num_empty, 
  toFloat64(min(length(workspace))) as workspace$min_length, 
  toFloat64(max(length(workspace))) as workspace$max_length, 
  toFloat64(avg(length(workspace))) as workspace$mean_length, 
  toInt64(count(meta)) as meta$num_not_null, 
  toInt64(count(distinct meta)) as meta$num_unique, 
  toInt64(countIf(meta = '')) as meta$num_empty, 
  toFloat64(min(length(meta))) as meta$min_length, 
  toFloat64(max(length(meta))) as meta$max_length, 
  toFloat64(avg(length(meta))) as meta$mean_length, 
  toInt64(count(run_status)) as run_status$num_not_null, 
  toInt64(count(distinct run_status)) as run_status$num_unique, 
  toInt64(countIf(run_status = 0)) as run_status$num_empty, 
  toFloat64(avg(run_status)) as run_status$mean, 
  toFloat64(min(run_status)) as run_status$min, 
  toFloat64(max(run_status)) as run_status$max, 
  toFloat64(median(run_status)) as run_status$median, 
  toFloat64(stddevSamp(run_status)) as run_status$stddev, 
  toInt64(count(created_at)) as created_at$num_not_null, 
  min(created_at) as created_at$min, 
  max(created_at) as created_at$max
from default.runs 
where (run_status > 0) and (run_type > 0)
order by num_rows desc limit 1000
---

[TestProfileSuite/TestProfileColumns/clickhouse_multi_condition_single_segmentation_all - 1]
select
  substring(toString(run_type), 1, 100) as segment, 
  toInt64(count(*)) as num_rows, 
  toInt64(count(workspace)) as workspace$num_not_null, 
  toInt64(count(distinct workspace)) as workspace$num_unique, 
  toInt64(countIf(workspace = '')) as workspace$num_empty, 
  toFloat64(min(length(workspace))) as workspace$min_length, 
  toFloat64(max(length(workspace))) as workspace$max_length, 
  toFloat64(avg(length(workspace))) as workspace$mean_length, 
  toInt64(count(meta)) as meta$num_not_null, 
  toInt64(count(distinct meta)) as meta$num_unique, 
  toInt64(countIf(meta = '')) as meta$num_empty, 
  toFloat64(min(length(meta))) as meta$min_length, 
  toFloat64(max(length(meta))) as meta$max_length, 
  toFloat64(avg(length(meta))) as meta$mean_length, 
  toInt64(count(run_status)) as run_status$num_not_null, 
  toInt64(count(distinct run_status)) as run_status$num_unique, 
  toInt64(countIf(run_status = 0)) as run_status$num_empty, 
  toFloat64(avg(run_status)) as run_status$mean, 
  toFloat64(min(run_status)) as run_status$min, 
  toFloat64(max(run_status)) as run_status$max, 
  toFloat64(median(run_status)) as run_status$median, 
  toFloat64(stddevSamp(run_status)) as run_status$stddev, 
  toInt64(count(created_at)) as created_at$num_not_null, 
  min(created_at) as created_at$min, 
  max(created_at) as created_at$max
from default.runs 
where (run_status > 0) and (run_type > 0)
group by segment
order by num_rows desc limit 1000
---

[TestProfileSuite/TestProfileColumns/clickhouse_multi_condition_multi_segmentation - 1]
select
  substring(toString(workspace), 1, 100) as segment, 
  substring(toString(run_status), 1, 100) as segment2, 
  substring(toString(run_type), 1, 100) as segment3, 
  toInt64(count(*)) as num_rows, 
  toInt64(count(workspace)) as workspace$num_not_null, 
  toInt64(count(distinct workspace)) as workspace$num_unique, 
  toInt64(countIf(workspace = '')) as workspace$num_empty, 
  toFloat64(min(length(workspace))) as workspace$min_length, 
  toFloat64(max(length(workspace))) as workspace$max_length, 
  toFloat64(avg(length(workspace))) as workspace$mean_length, 
  toInt64(count(meta)) as meta$num_not_null, 
  toInt64(count(distinct meta)) as meta$num_unique, 
  toInt64(countIf(meta = '')) as meta$num_empty, 
  toFloat64(min(length(meta))) as meta$min_length, 
  toFloat64(max(length(meta))) as meta$max_length, 
  toFloat64(avg(length(meta))) as meta$mean_length, 
  toInt64(count(run_status)) as run_status$num_not_null, 
  toInt64(count(distinct run_status)) as run_status$num_unique, 
  toInt64(countIf(run_status = 0)) as run_status$num_empty, 
  toFloat64(avg(run_status)) as run_status$mean, 
  toFloat64(min(run_status)) as run_status$min, 
  toFloat64(max(run_status)) as run_status$max, 
  toFloat64(median(run_status)) as run_status$median, 
  toFloat64(stddevSamp(run_status)) as run_status$stddev, 
  toInt64(count(created_at)) as created_at$num_not_null, 
  min(created_at) as created_at$min, 
  max(created_at) as created_at$max
from default.runs 
where (run_status > 0) and (run_type > 0)
group by
  segment, 
  segment2, 
  segment3
order by num_rows desc limit 1000
---
