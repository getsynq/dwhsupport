// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        (unknown)
// source: synq/entities/status/v1/entity_incidents_service.proto

package v1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	v1 "github.com/getsynq/api/entities/v1"
	_ "github.com/getsynq/api/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// GetIncidentsRequest is the request message for the GetEntity method.
type GetIncidentsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Identifier of the entity to get incidents for.
	Id *v1.Identifier `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Retrieve incidents of upstream entities.
	FetchUpstreamIncidents bool `protobuf:"varint,2,opt,name=fetch_upstream_incidents,json=fetchUpstreamIncidents,proto3" json:"fetch_upstream_incidents,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *GetIncidentsRequest) Reset() {
	*x = GetIncidentsRequest{}
	mi := &file_synq_entities_status_v1_entity_incidents_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetIncidentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIncidentsRequest) ProtoMessage() {}

func (x *GetIncidentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_synq_entities_status_v1_entity_incidents_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIncidentsRequest.ProtoReflect.Descriptor instead.
func (*GetIncidentsRequest) Descriptor() ([]byte, []int) {
	return file_synq_entities_status_v1_entity_incidents_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetIncidentsRequest) GetId() *v1.Identifier {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *GetIncidentsRequest) GetFetchUpstreamIncidents() bool {
	if x != nil {
		return x.FetchUpstreamIncidents
	}
	return false
}

// GetIncidentsResponse is the response message for the GetEntity method.
type GetIncidentsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Identifier of the entity.
	Id *v1.Identifier `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Open incident associated with the entity requested.
	EntityOpenIncidents []*EntityIncident `protobuf:"bytes,2,rep,name=entity_open_incidents,json=entityOpenIncidents,proto3" json:"entity_open_incidents,omitempty"`
	// Open incidents associated with the upstream entities if requested.
	UpstreamOpenIncidents []*EntityIncident `protobuf:"bytes,3,rep,name=upstream_open_incidents,json=upstreamOpenIncidents,proto3" json:"upstream_open_incidents,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *GetIncidentsResponse) Reset() {
	*x = GetIncidentsResponse{}
	mi := &file_synq_entities_status_v1_entity_incidents_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetIncidentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIncidentsResponse) ProtoMessage() {}

func (x *GetIncidentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_synq_entities_status_v1_entity_incidents_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIncidentsResponse.ProtoReflect.Descriptor instead.
func (*GetIncidentsResponse) Descriptor() ([]byte, []int) {
	return file_synq_entities_status_v1_entity_incidents_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetIncidentsResponse) GetId() *v1.Identifier {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *GetIncidentsResponse) GetEntityOpenIncidents() []*EntityIncident {
	if x != nil {
		return x.EntityOpenIncidents
	}
	return nil
}

func (x *GetIncidentsResponse) GetUpstreamOpenIncidents() []*EntityIncident {
	if x != nil {
		return x.UpstreamOpenIncidents
	}
	return nil
}

// BatchGetIncidentsRequest is the request message for the BatchGetIssues method.
type BatchGetIncidentsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Requests      []*GetIncidentsRequest `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchGetIncidentsRequest) Reset() {
	*x = BatchGetIncidentsRequest{}
	mi := &file_synq_entities_status_v1_entity_incidents_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchGetIncidentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchGetIncidentsRequest) ProtoMessage() {}

func (x *BatchGetIncidentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_synq_entities_status_v1_entity_incidents_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchGetIncidentsRequest.ProtoReflect.Descriptor instead.
func (*BatchGetIncidentsRequest) Descriptor() ([]byte, []int) {
	return file_synq_entities_status_v1_entity_incidents_service_proto_rawDescGZIP(), []int{2}
}

func (x *BatchGetIncidentsRequest) GetRequests() []*GetIncidentsRequest {
	if x != nil {
		return x.Requests
	}
	return nil
}

// BatchGetIncidentsResponse is the response message for the BatchGetIssues method.
type BatchGetIncidentsResponse struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Responses     []*GetIncidentsResponse `protobuf:"bytes,1,rep,name=responses,proto3" json:"responses,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchGetIncidentsResponse) Reset() {
	*x = BatchGetIncidentsResponse{}
	mi := &file_synq_entities_status_v1_entity_incidents_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchGetIncidentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchGetIncidentsResponse) ProtoMessage() {}

func (x *BatchGetIncidentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_synq_entities_status_v1_entity_incidents_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchGetIncidentsResponse.ProtoReflect.Descriptor instead.
func (*BatchGetIncidentsResponse) Descriptor() ([]byte, []int) {
	return file_synq_entities_status_v1_entity_incidents_service_proto_rawDescGZIP(), []int{3}
}

func (x *BatchGetIncidentsResponse) GetResponses() []*GetIncidentsResponse {
	if x != nil {
		return x.Responses
	}
	return nil
}

var File_synq_entities_status_v1_entity_incidents_service_proto protoreflect.FileDescriptor

var file_synq_entities_status_v1_entity_incidents_service_proto_rawDesc = string([]byte{
	0x0a, 0x36, 0x73, 0x79, 0x6e, 0x71, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x5f, 0x69, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x73, 0x79, 0x6e, 0x71, 0x2e, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x76,
	0x31, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e,
	0x73, 0x79, 0x6e, 0x71, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69,
	0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21,
	0x73, 0x79, 0x6e, 0x71, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2f, 0x76, 0x31,
	0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x21, 0x73, 0x79, 0x6e, 0x71, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x63, 0x6f, 0x70, 0x65,
	0x5f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x85, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x63, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x79, 0x6e, 0x71, 0x2e,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x38, 0x0a, 0x18, 0x66, 0x65, 0x74, 0x63, 0x68, 0x5f, 0x75, 0x70, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x66, 0x65, 0x74, 0x63, 0x68, 0x55, 0x70, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x49, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x8a, 0x02, 0x0a,
	0x14, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x79, 0x6e, 0x71, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x42,
	0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x5b, 0x0a, 0x15, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x69, 0x6e, 0x63, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x73, 0x79, 0x6e,
	0x71, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x63, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x52, 0x13, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4f, 0x70, 0x65, 0x6e, 0x49,
	0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x5f, 0x0a, 0x17, 0x75, 0x70, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x69, 0x6e, 0x63, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x73, 0x79, 0x6e, 0x71,
	0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x63, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x52, 0x15, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4f, 0x70, 0x65, 0x6e,
	0x49, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x6c, 0x0a, 0x18, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x50, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x73, 0x79, 0x6e, 0x71, 0x2e, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x08, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x22, 0x70, 0x0a, 0x19, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x47, 0x65, 0x74, 0x49, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x73, 0x79, 0x6e, 0x71, 0x2e, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x09,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x32, 0x94, 0x02, 0x0a, 0x16, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x74, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x63, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x73, 0x12, 0x2c, 0x2e, 0x73, 0x79, 0x6e, 0x71, 0x2e, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x49, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x73, 0x79, 0x6e, 0x71, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x49, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x07, 0xd2, 0xb5, 0x18, 0x03, 0x0a, 0x01, 0x28, 0x12, 0x83, 0x01, 0x0a, 0x11, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x73,
	0x12, 0x31, 0x2e, 0x73, 0x79, 0x6e, 0x71, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x2e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x47, 0x65, 0x74, 0x49, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x73, 0x79, 0x6e, 0x71, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x07, 0xd2, 0xb5, 0x18, 0x03, 0x0a, 0x01, 0x28,
	0x42, 0xe4, 0x01, 0x0a, 0x1b, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x79, 0x6e, 0x71, 0x2e, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x76, 0x31,
	0x42, 0x1b, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a,
	0x29, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x65, 0x74, 0x73,
	0x79, 0x6e, 0x71, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2f, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x53, 0x45, 0x53,
	0xaa, 0x02, 0x17, 0x53, 0x79, 0x6e, 0x71, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x17, 0x53, 0x79, 0x6e,
	0x71, 0x5c, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x5c, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x23, 0x53, 0x79, 0x6e, 0x71, 0x5c, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x5c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5c, 0x56, 0x31, 0x5c, 0x47,
	0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x1a, 0x53, 0x79, 0x6e,
	0x71, 0x3a, 0x3a, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x3a, 0x3a, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_synq_entities_status_v1_entity_incidents_service_proto_rawDescOnce sync.Once
	file_synq_entities_status_v1_entity_incidents_service_proto_rawDescData []byte
)

func file_synq_entities_status_v1_entity_incidents_service_proto_rawDescGZIP() []byte {
	file_synq_entities_status_v1_entity_incidents_service_proto_rawDescOnce.Do(func() {
		file_synq_entities_status_v1_entity_incidents_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_synq_entities_status_v1_entity_incidents_service_proto_rawDesc), len(file_synq_entities_status_v1_entity_incidents_service_proto_rawDesc)))
	})
	return file_synq_entities_status_v1_entity_incidents_service_proto_rawDescData
}

var file_synq_entities_status_v1_entity_incidents_service_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_synq_entities_status_v1_entity_incidents_service_proto_goTypes = []any{
	(*GetIncidentsRequest)(nil),       // 0: synq.entities.status.v1.GetIncidentsRequest
	(*GetIncidentsResponse)(nil),      // 1: synq.entities.status.v1.GetIncidentsResponse
	(*BatchGetIncidentsRequest)(nil),  // 2: synq.entities.status.v1.BatchGetIncidentsRequest
	(*BatchGetIncidentsResponse)(nil), // 3: synq.entities.status.v1.BatchGetIncidentsResponse
	(*v1.Identifier)(nil),             // 4: synq.entities.v1.Identifier
	(*EntityIncident)(nil),            // 5: synq.entities.status.v1.EntityIncident
}
var file_synq_entities_status_v1_entity_incidents_service_proto_depIdxs = []int32{
	4, // 0: synq.entities.status.v1.GetIncidentsRequest.id:type_name -> synq.entities.v1.Identifier
	4, // 1: synq.entities.status.v1.GetIncidentsResponse.id:type_name -> synq.entities.v1.Identifier
	5, // 2: synq.entities.status.v1.GetIncidentsResponse.entity_open_incidents:type_name -> synq.entities.status.v1.EntityIncident
	5, // 3: synq.entities.status.v1.GetIncidentsResponse.upstream_open_incidents:type_name -> synq.entities.status.v1.EntityIncident
	0, // 4: synq.entities.status.v1.BatchGetIncidentsRequest.requests:type_name -> synq.entities.status.v1.GetIncidentsRequest
	1, // 5: synq.entities.status.v1.BatchGetIncidentsResponse.responses:type_name -> synq.entities.status.v1.GetIncidentsResponse
	0, // 6: synq.entities.status.v1.EntityIncidentsService.GetIncidents:input_type -> synq.entities.status.v1.GetIncidentsRequest
	2, // 7: synq.entities.status.v1.EntityIncidentsService.BatchGetIncidents:input_type -> synq.entities.status.v1.BatchGetIncidentsRequest
	1, // 8: synq.entities.status.v1.EntityIncidentsService.GetIncidents:output_type -> synq.entities.status.v1.GetIncidentsResponse
	3, // 9: synq.entities.status.v1.EntityIncidentsService.BatchGetIncidents:output_type -> synq.entities.status.v1.BatchGetIncidentsResponse
	8, // [8:10] is the sub-list for method output_type
	6, // [6:8] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_synq_entities_status_v1_entity_incidents_service_proto_init() }
func file_synq_entities_status_v1_entity_incidents_service_proto_init() {
	if File_synq_entities_status_v1_entity_incidents_service_proto != nil {
		return
	}
	file_synq_entities_status_v1_entity_incidents_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_synq_entities_status_v1_entity_incidents_service_proto_rawDesc), len(file_synq_entities_status_v1_entity_incidents_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_synq_entities_status_v1_entity_incidents_service_proto_goTypes,
		DependencyIndexes: file_synq_entities_status_v1_entity_incidents_service_proto_depIdxs,
		MessageInfos:      file_synq_entities_status_v1_entity_incidents_service_proto_msgTypes,
	}.Build()
	File_synq_entities_status_v1_entity_incidents_service_proto = out.File
	file_synq_entities_status_v1_entity_incidents_service_proto_goTypes = nil
	file_synq_entities_status_v1_entity_incidents_service_proto_depIdxs = nil
}
