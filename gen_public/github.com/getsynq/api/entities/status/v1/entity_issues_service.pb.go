// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        (unknown)
// source: synq/entities/status/v1/entity_issues_service.proto

package v1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	v1 "github.com/getsynq/api/entities/v1"
	_ "github.com/getsynq/api/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// GetIssuesStatusRequest is the request message for the GetEntity method.
type GetIssuesStatusRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Identifier of the entity to get status for.
	Id *v1.Identifier `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Retrieve status of upstream entities.
	FetchUpstreamStatus bool `protobuf:"varint,2,opt,name=fetch_upstream_status,json=fetchUpstreamStatus,proto3" json:"fetch_upstream_status,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *GetIssuesStatusRequest) Reset() {
	*x = GetIssuesStatusRequest{}
	mi := &file_synq_entities_status_v1_entity_issues_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetIssuesStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIssuesStatusRequest) ProtoMessage() {}

func (x *GetIssuesStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_synq_entities_status_v1_entity_issues_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIssuesStatusRequest.ProtoReflect.Descriptor instead.
func (*GetIssuesStatusRequest) Descriptor() ([]byte, []int) {
	return file_synq_entities_status_v1_entity_issues_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetIssuesStatusRequest) GetId() *v1.Identifier {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *GetIssuesStatusRequest) GetFetchUpstreamStatus() bool {
	if x != nil {
		return x.FetchUpstreamStatus
	}
	return false
}

// GetIssuesStatusResponse is the response message for the GetEntity method.
type GetIssuesStatusResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Identifier of the entity.
	Id *v1.Identifier `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Status of the entity requested.
	EntityIssuesStatus  IssueStatus                            `protobuf:"varint,2,opt,name=entity_issues_status,json=entityIssuesStatus,proto3,enum=synq.entities.status.v1.IssueStatus" json:"entity_issues_status,omitempty"`
	EntityIssuesSummary *GetIssuesStatusResponse_IssuesSummary `protobuf:"bytes,3,opt,name=entity_issues_summary,json=entityIssuesSummary,proto3" json:"entity_issues_summary,omitempty"`
	// Optionally, the status of all upstream entities.
	UpstreamIssuesStatus  IssueStatus                            `protobuf:"varint,4,opt,name=upstream_issues_status,json=upstreamIssuesStatus,proto3,enum=synq.entities.status.v1.IssueStatus" json:"upstream_issues_status,omitempty"`
	UpstreamIssuesSummary *GetIssuesStatusResponse_IssuesSummary `protobuf:"bytes,5,opt,name=upstream_issues_summary,json=upstreamIssuesSummary,proto3" json:"upstream_issues_summary,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *GetIssuesStatusResponse) Reset() {
	*x = GetIssuesStatusResponse{}
	mi := &file_synq_entities_status_v1_entity_issues_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetIssuesStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIssuesStatusResponse) ProtoMessage() {}

func (x *GetIssuesStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_synq_entities_status_v1_entity_issues_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIssuesStatusResponse.ProtoReflect.Descriptor instead.
func (*GetIssuesStatusResponse) Descriptor() ([]byte, []int) {
	return file_synq_entities_status_v1_entity_issues_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetIssuesStatusResponse) GetId() *v1.Identifier {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *GetIssuesStatusResponse) GetEntityIssuesStatus() IssueStatus {
	if x != nil {
		return x.EntityIssuesStatus
	}
	return IssueStatus_ISSUE_STATUS_UNSPECIFIED
}

func (x *GetIssuesStatusResponse) GetEntityIssuesSummary() *GetIssuesStatusResponse_IssuesSummary {
	if x != nil {
		return x.EntityIssuesSummary
	}
	return nil
}

func (x *GetIssuesStatusResponse) GetUpstreamIssuesStatus() IssueStatus {
	if x != nil {
		return x.UpstreamIssuesStatus
	}
	return IssueStatus_ISSUE_STATUS_UNSPECIFIED
}

func (x *GetIssuesStatusResponse) GetUpstreamIssuesSummary() *GetIssuesStatusResponse_IssuesSummary {
	if x != nil {
		return x.UpstreamIssuesSummary
	}
	return nil
}

// BatchGetIssuesStatusRequest is the request message for the BatchGetIssues method.
type BatchGetIssuesStatusRequest struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Requests      []*GetIssuesStatusRequest `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchGetIssuesStatusRequest) Reset() {
	*x = BatchGetIssuesStatusRequest{}
	mi := &file_synq_entities_status_v1_entity_issues_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchGetIssuesStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchGetIssuesStatusRequest) ProtoMessage() {}

func (x *BatchGetIssuesStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_synq_entities_status_v1_entity_issues_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchGetIssuesStatusRequest.ProtoReflect.Descriptor instead.
func (*BatchGetIssuesStatusRequest) Descriptor() ([]byte, []int) {
	return file_synq_entities_status_v1_entity_issues_service_proto_rawDescGZIP(), []int{2}
}

func (x *BatchGetIssuesStatusRequest) GetRequests() []*GetIssuesStatusRequest {
	if x != nil {
		return x.Requests
	}
	return nil
}

// BatchGetIssuesStatusResponse is the response message for the BatchGetIssues method.
type BatchGetIssuesStatusResponse struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Responses     []*GetIssuesStatusResponse `protobuf:"bytes,1,rep,name=responses,proto3" json:"responses,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchGetIssuesStatusResponse) Reset() {
	*x = BatchGetIssuesStatusResponse{}
	mi := &file_synq_entities_status_v1_entity_issues_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchGetIssuesStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchGetIssuesStatusResponse) ProtoMessage() {}

func (x *BatchGetIssuesStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_synq_entities_status_v1_entity_issues_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchGetIssuesStatusResponse.ProtoReflect.Descriptor instead.
func (*BatchGetIssuesStatusResponse) Descriptor() ([]byte, []int) {
	return file_synq_entities_status_v1_entity_issues_service_proto_rawDescGZIP(), []int{3}
}

func (x *BatchGetIssuesStatusResponse) GetResponses() []*GetIssuesStatusResponse {
	if x != nil {
		return x.Responses
	}
	return nil
}

type GetIssuesStatusResponse_IssuesSummary struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Number of issues for the entity.
	TotalCount int32 `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	// Number of issues for the entity with status 'warn'.
	WarnCount int32 `protobuf:"varint,2,opt,name=warn_count,json=warnCount,proto3" json:"warn_count,omitempty"`
	// Number of issues for the entity with status 'error'.
	ErrorCount int32 `protobuf:"varint,3,opt,name=error_count,json=errorCount,proto3" json:"error_count,omitempty"`
	// Number of issues for the entity with status 'critical'.
	CriticalCount int32 `protobuf:"varint,4,opt,name=critical_count,json=criticalCount,proto3" json:"critical_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetIssuesStatusResponse_IssuesSummary) Reset() {
	*x = GetIssuesStatusResponse_IssuesSummary{}
	mi := &file_synq_entities_status_v1_entity_issues_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetIssuesStatusResponse_IssuesSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIssuesStatusResponse_IssuesSummary) ProtoMessage() {}

func (x *GetIssuesStatusResponse_IssuesSummary) ProtoReflect() protoreflect.Message {
	mi := &file_synq_entities_status_v1_entity_issues_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIssuesStatusResponse_IssuesSummary.ProtoReflect.Descriptor instead.
func (*GetIssuesStatusResponse_IssuesSummary) Descriptor() ([]byte, []int) {
	return file_synq_entities_status_v1_entity_issues_service_proto_rawDescGZIP(), []int{1, 0}
}

func (x *GetIssuesStatusResponse_IssuesSummary) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *GetIssuesStatusResponse_IssuesSummary) GetWarnCount() int32 {
	if x != nil {
		return x.WarnCount
	}
	return 0
}

func (x *GetIssuesStatusResponse_IssuesSummary) GetErrorCount() int32 {
	if x != nil {
		return x.ErrorCount
	}
	return 0
}

func (x *GetIssuesStatusResponse_IssuesSummary) GetCriticalCount() int32 {
	if x != nil {
		return x.CriticalCount
	}
	return 0
}

var File_synq_entities_status_v1_entity_issues_service_proto protoreflect.FileDescriptor

var file_synq_entities_status_v1_entity_issues_service_proto_rawDesc = string([]byte{
	0x0a, 0x33, 0x73, 0x79, 0x6e, 0x71, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x5f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x73, 0x79, 0x6e, 0x71, 0x2e, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x1b,
	0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2b, 0x73, 0x79, 0x6e,
	0x71, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x73, 0x73, 0x75,
	0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x73, 0x79, 0x6e, 0x71, 0x2f, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x73, 0x79, 0x6e,
	0x71, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x82,
	0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x73, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x79, 0x6e, 0x71, 0x2e, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x32, 0x0a, 0x15, 0x66, 0x65, 0x74, 0x63, 0x68, 0x5f, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13,
	0x66, 0x65, 0x74, 0x63, 0x68, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x89, 0x05, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65,
	0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x34, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x79,
	0x6e, 0x71, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01,
	0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x56, 0x0a, 0x14, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f,
	0x69, 0x73, 0x73, 0x75, 0x65, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x73, 0x79, 0x6e, 0x71, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x73,
	0x73, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x12, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x49, 0x73, 0x73, 0x75, 0x65, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x72, 0x0a,
	0x15, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x73, 0x5f, 0x73,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x73,
	0x79, 0x6e, 0x71, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x73,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49,
	0x73, 0x73, 0x75, 0x65, 0x73, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x13, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x49, 0x73, 0x73, 0x75, 0x65, 0x73, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x12, 0x5a, 0x0a, 0x16, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x73,
	0x73, 0x75, 0x65, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x24, 0x2e, 0x73, 0x79, 0x6e, 0x71, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x73, 0x73, 0x75,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x14, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x49, 0x73, 0x73, 0x75, 0x65, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x76, 0x0a,
	0x17, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x73,
	0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e,
	0x2e, 0x73, 0x79, 0x6e, 0x71, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x73, 0x73, 0x75,
	0x65, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x49, 0x73, 0x73, 0x75, 0x65, 0x73, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x15,
	0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x73, 0x73, 0x75, 0x65, 0x73, 0x53, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x1a, 0x97, 0x01, 0x0a, 0x0d, 0x49, 0x73, 0x73, 0x75, 0x65, 0x73,
	0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x77, 0x61, 0x72, 0x6e,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x77, 0x61,
	0x72, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x72, 0x69, 0x74,
	0x69, 0x63, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0d, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x72, 0x0a, 0x1b, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65,
	0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x53,
	0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2f, 0x2e, 0x73, 0x79, 0x6e, 0x71, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x2e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x73,
	0x73, 0x75, 0x65, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x73, 0x22, 0x76, 0x0a, 0x1c, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x49,
	0x73, 0x73, 0x75, 0x65, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x73, 0x79, 0x6e, 0x71, 0x2e, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01,
	0x52, 0x09, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x32, 0xa3, 0x02, 0x0a, 0x13,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x73, 0x73, 0x75, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x7d, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x73,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2f, 0x2e, 0x73, 0x79, 0x6e, 0x71, 0x2e, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x73, 0x79, 0x6e, 0x71, 0x2e, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x07, 0xd2, 0xb5, 0x18, 0x03, 0x0a,
	0x01, 0x28, 0x12, 0x8c, 0x01, 0x0a, 0x14, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x49,
	0x73, 0x73, 0x75, 0x65, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x34, 0x2e, 0x73, 0x79,
	0x6e, 0x71, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x49, 0x73,
	0x73, 0x75, 0x65, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x35, 0x2e, 0x73, 0x79, 0x6e, 0x71, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x47, 0x65, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x07, 0xd2, 0xb5, 0x18, 0x03, 0x0a, 0x01,
	0x28, 0x42, 0xe1, 0x01, 0x0a, 0x1b, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x79, 0x6e, 0x71, 0x2e, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x76,
	0x31, 0x42, 0x18, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x73, 0x73, 0x75, 0x65, 0x73, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x29, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x65, 0x74, 0x73, 0x79, 0x6e,
	0x71, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x2f, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x53, 0x45, 0x53, 0xaa, 0x02,
	0x17, 0x53, 0x79, 0x6e, 0x71, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x17, 0x53, 0x79, 0x6e, 0x71, 0x5c,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x5c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5c,
	0x56, 0x31, 0xe2, 0x02, 0x23, 0x53, 0x79, 0x6e, 0x71, 0x5c, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x5c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x1a, 0x53, 0x79, 0x6e, 0x71, 0x3a,
	0x3a, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x3a, 0x3a, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_synq_entities_status_v1_entity_issues_service_proto_rawDescOnce sync.Once
	file_synq_entities_status_v1_entity_issues_service_proto_rawDescData []byte
)

func file_synq_entities_status_v1_entity_issues_service_proto_rawDescGZIP() []byte {
	file_synq_entities_status_v1_entity_issues_service_proto_rawDescOnce.Do(func() {
		file_synq_entities_status_v1_entity_issues_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_synq_entities_status_v1_entity_issues_service_proto_rawDesc), len(file_synq_entities_status_v1_entity_issues_service_proto_rawDesc)))
	})
	return file_synq_entities_status_v1_entity_issues_service_proto_rawDescData
}

var file_synq_entities_status_v1_entity_issues_service_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_synq_entities_status_v1_entity_issues_service_proto_goTypes = []any{
	(*GetIssuesStatusRequest)(nil),                // 0: synq.entities.status.v1.GetIssuesStatusRequest
	(*GetIssuesStatusResponse)(nil),               // 1: synq.entities.status.v1.GetIssuesStatusResponse
	(*BatchGetIssuesStatusRequest)(nil),           // 2: synq.entities.status.v1.BatchGetIssuesStatusRequest
	(*BatchGetIssuesStatusResponse)(nil),          // 3: synq.entities.status.v1.BatchGetIssuesStatusResponse
	(*GetIssuesStatusResponse_IssuesSummary)(nil), // 4: synq.entities.status.v1.GetIssuesStatusResponse.IssuesSummary
	(*v1.Identifier)(nil),                         // 5: synq.entities.v1.Identifier
	(IssueStatus)(0),                              // 6: synq.entities.status.v1.IssueStatus
}
var file_synq_entities_status_v1_entity_issues_service_proto_depIdxs = []int32{
	5,  // 0: synq.entities.status.v1.GetIssuesStatusRequest.id:type_name -> synq.entities.v1.Identifier
	5,  // 1: synq.entities.status.v1.GetIssuesStatusResponse.id:type_name -> synq.entities.v1.Identifier
	6,  // 2: synq.entities.status.v1.GetIssuesStatusResponse.entity_issues_status:type_name -> synq.entities.status.v1.IssueStatus
	4,  // 3: synq.entities.status.v1.GetIssuesStatusResponse.entity_issues_summary:type_name -> synq.entities.status.v1.GetIssuesStatusResponse.IssuesSummary
	6,  // 4: synq.entities.status.v1.GetIssuesStatusResponse.upstream_issues_status:type_name -> synq.entities.status.v1.IssueStatus
	4,  // 5: synq.entities.status.v1.GetIssuesStatusResponse.upstream_issues_summary:type_name -> synq.entities.status.v1.GetIssuesStatusResponse.IssuesSummary
	0,  // 6: synq.entities.status.v1.BatchGetIssuesStatusRequest.requests:type_name -> synq.entities.status.v1.GetIssuesStatusRequest
	1,  // 7: synq.entities.status.v1.BatchGetIssuesStatusResponse.responses:type_name -> synq.entities.status.v1.GetIssuesStatusResponse
	0,  // 8: synq.entities.status.v1.EntityIssuesService.GetIssuesStatus:input_type -> synq.entities.status.v1.GetIssuesStatusRequest
	2,  // 9: synq.entities.status.v1.EntityIssuesService.BatchGetIssuesStatus:input_type -> synq.entities.status.v1.BatchGetIssuesStatusRequest
	1,  // 10: synq.entities.status.v1.EntityIssuesService.GetIssuesStatus:output_type -> synq.entities.status.v1.GetIssuesStatusResponse
	3,  // 11: synq.entities.status.v1.EntityIssuesService.BatchGetIssuesStatus:output_type -> synq.entities.status.v1.BatchGetIssuesStatusResponse
	10, // [10:12] is the sub-list for method output_type
	8,  // [8:10] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_synq_entities_status_v1_entity_issues_service_proto_init() }
func file_synq_entities_status_v1_entity_issues_service_proto_init() {
	if File_synq_entities_status_v1_entity_issues_service_proto != nil {
		return
	}
	file_synq_entities_status_v1_entity_issues_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_synq_entities_status_v1_entity_issues_service_proto_rawDesc), len(file_synq_entities_status_v1_entity_issues_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_synq_entities_status_v1_entity_issues_service_proto_goTypes,
		DependencyIndexes: file_synq_entities_status_v1_entity_issues_service_proto_depIdxs,
		MessageInfos:      file_synq_entities_status_v1_entity_issues_service_proto_msgTypes,
	}.Build()
	File_synq_entities_status_v1_entity_issues_service_proto = out.File
	file_synq_entities_status_v1_entity_issues_service_proto_goTypes = nil
	file_synq_entities_status_v1_entity_issues_service_proto_depIdxs = nil
}
