// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: synq/domains/v1/domains_service.proto

package v1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "github.com/getsynq/api/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UpsertRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	ParentId      *string                `protobuf:"bytes,4,opt,name=parent_id,json=parentId,proto3,oneof" json:"parent_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpsertRequest) Reset() {
	*x = UpsertRequest{}
	mi := &file_synq_domains_v1_domains_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpsertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertRequest) ProtoMessage() {}

func (x *UpsertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_synq_domains_v1_domains_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertRequest.ProtoReflect.Descriptor instead.
func (*UpsertRequest) Descriptor() ([]byte, []int) {
	return file_synq_domains_v1_domains_service_proto_rawDescGZIP(), []int{0}
}

func (x *UpsertRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpsertRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpsertRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpsertRequest) GetParentId() string {
	if x != nil && x.ParentId != nil {
		return *x.ParentId
	}
	return ""
}

type UpsertResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpsertResponse) Reset() {
	*x = UpsertResponse{}
	mi := &file_synq_domains_v1_domains_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpsertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertResponse) ProtoMessage() {}

func (x *UpsertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_synq_domains_v1_domains_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertResponse.ProtoReflect.Descriptor instead.
func (*UpsertResponse) Descriptor() ([]byte, []int) {
	return file_synq_domains_v1_domains_service_proto_rawDescGZIP(), []int{1}
}

type BatchGetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DomainIds     []string               `protobuf:"bytes,1,rep,name=domain_ids,json=domainIds,proto3" json:"domain_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchGetRequest) Reset() {
	*x = BatchGetRequest{}
	mi := &file_synq_domains_v1_domains_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchGetRequest) ProtoMessage() {}

func (x *BatchGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_synq_domains_v1_domains_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchGetRequest.ProtoReflect.Descriptor instead.
func (*BatchGetRequest) Descriptor() ([]byte, []int) {
	return file_synq_domains_v1_domains_service_proto_rawDescGZIP(), []int{2}
}

func (x *BatchGetRequest) GetDomainIds() []string {
	if x != nil {
		return x.DomainIds
	}
	return nil
}

type BatchGetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Domains       map[string]*Domain     `protobuf:"bytes,1,rep,name=domains,proto3" json:"domains,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchGetResponse) Reset() {
	*x = BatchGetResponse{}
	mi := &file_synq_domains_v1_domains_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchGetResponse) ProtoMessage() {}

func (x *BatchGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_synq_domains_v1_domains_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchGetResponse.ProtoReflect.Descriptor instead.
func (*BatchGetResponse) Descriptor() ([]byte, []int) {
	return file_synq_domains_v1_domains_service_proto_rawDescGZIP(), []int{3}
}

func (x *BatchGetResponse) GetDomains() map[string]*Domain {
	if x != nil {
		return x.Domains
	}
	return nil
}

type ListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ParentId      *string                `protobuf:"bytes,1,opt,name=parent_id,json=parentId,proto3,oneof" json:"parent_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRequest) Reset() {
	*x = ListRequest{}
	mi := &file_synq_domains_v1_domains_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRequest) ProtoMessage() {}

func (x *ListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_synq_domains_v1_domains_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRequest.ProtoReflect.Descriptor instead.
func (*ListRequest) Descriptor() ([]byte, []int) {
	return file_synq_domains_v1_domains_service_proto_rawDescGZIP(), []int{4}
}

func (x *ListRequest) GetParentId() string {
	if x != nil && x.ParentId != nil {
		return *x.ParentId
	}
	return ""
}

type ListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Domains       []*Domain              `protobuf:"bytes,1,rep,name=domains,proto3" json:"domains,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListResponse) Reset() {
	*x = ListResponse{}
	mi := &file_synq_domains_v1_domains_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListResponse) ProtoMessage() {}

func (x *ListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_synq_domains_v1_domains_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListResponse.ProtoReflect.Descriptor instead.
func (*ListResponse) Descriptor() ([]byte, []int) {
	return file_synq_domains_v1_domains_service_proto_rawDescGZIP(), []int{5}
}

func (x *ListResponse) GetDomains() []*Domain {
	if x != nil {
		return x.Domains
	}
	return nil
}

type DeleteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DomainId      string                 `protobuf:"bytes,1,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRequest) Reset() {
	*x = DeleteRequest{}
	mi := &file_synq_domains_v1_domains_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRequest) ProtoMessage() {}

func (x *DeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_synq_domains_v1_domains_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRequest.ProtoReflect.Descriptor instead.
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return file_synq_domains_v1_domains_service_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteRequest) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

type DeleteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteResponse) Reset() {
	*x = DeleteResponse{}
	mi := &file_synq_domains_v1_domains_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResponse) ProtoMessage() {}

func (x *DeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_synq_domains_v1_domains_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResponse.ProtoReflect.Descriptor instead.
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return file_synq_domains_v1_domains_service_proto_rawDescGZIP(), []int{7}
}

type FetchDomainWithSubDomainsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DomainId      string                 `protobuf:"bytes,1,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FetchDomainWithSubDomainsRequest) Reset() {
	*x = FetchDomainWithSubDomainsRequest{}
	mi := &file_synq_domains_v1_domains_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchDomainWithSubDomainsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchDomainWithSubDomainsRequest) ProtoMessage() {}

func (x *FetchDomainWithSubDomainsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_synq_domains_v1_domains_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchDomainWithSubDomainsRequest.ProtoReflect.Descriptor instead.
func (*FetchDomainWithSubDomainsRequest) Descriptor() ([]byte, []int) {
	return file_synq_domains_v1_domains_service_proto_rawDescGZIP(), []int{8}
}

func (x *FetchDomainWithSubDomainsRequest) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

type FetchDomainWithSubDomainsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Domains       map[string]*Domain     `protobuf:"bytes,1,rep,name=domains,proto3" json:"domains,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FetchDomainWithSubDomainsResponse) Reset() {
	*x = FetchDomainWithSubDomainsResponse{}
	mi := &file_synq_domains_v1_domains_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchDomainWithSubDomainsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchDomainWithSubDomainsResponse) ProtoMessage() {}

func (x *FetchDomainWithSubDomainsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_synq_domains_v1_domains_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchDomainWithSubDomainsResponse.ProtoReflect.Descriptor instead.
func (*FetchDomainWithSubDomainsResponse) Descriptor() ([]byte, []int) {
	return file_synq_domains_v1_domains_service_proto_rawDescGZIP(), []int{9}
}

func (x *FetchDomainWithSubDomainsResponse) GetDomains() map[string]*Domain {
	if x != nil {
		return x.Domains
	}
	return nil
}

type SetDefinitionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DomainId      string                 `protobuf:"bytes,1,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	Definition    *DomainDefinition      `protobuf:"bytes,2,opt,name=definition,proto3" json:"definition,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetDefinitionRequest) Reset() {
	*x = SetDefinitionRequest{}
	mi := &file_synq_domains_v1_domains_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetDefinitionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDefinitionRequest) ProtoMessage() {}

func (x *SetDefinitionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_synq_domains_v1_domains_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDefinitionRequest.ProtoReflect.Descriptor instead.
func (*SetDefinitionRequest) Descriptor() ([]byte, []int) {
	return file_synq_domains_v1_domains_service_proto_rawDescGZIP(), []int{10}
}

func (x *SetDefinitionRequest) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

func (x *SetDefinitionRequest) GetDefinition() *DomainDefinition {
	if x != nil {
		return x.Definition
	}
	return nil
}

type SetDefinitionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetDefinitionResponse) Reset() {
	*x = SetDefinitionResponse{}
	mi := &file_synq_domains_v1_domains_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetDefinitionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDefinitionResponse) ProtoMessage() {}

func (x *SetDefinitionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_synq_domains_v1_domains_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDefinitionResponse.ProtoReflect.Descriptor instead.
func (*SetDefinitionResponse) Descriptor() ([]byte, []int) {
	return file_synq_domains_v1_domains_service_proto_rawDescGZIP(), []int{11}
}

type AddDefinitionPartRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DomainId      string                 `protobuf:"bytes,1,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	Part          *DomainDefinition_Part `protobuf:"bytes,2,opt,name=part,proto3" json:"part,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddDefinitionPartRequest) Reset() {
	*x = AddDefinitionPartRequest{}
	mi := &file_synq_domains_v1_domains_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddDefinitionPartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDefinitionPartRequest) ProtoMessage() {}

func (x *AddDefinitionPartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_synq_domains_v1_domains_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddDefinitionPartRequest.ProtoReflect.Descriptor instead.
func (*AddDefinitionPartRequest) Descriptor() ([]byte, []int) {
	return file_synq_domains_v1_domains_service_proto_rawDescGZIP(), []int{12}
}

func (x *AddDefinitionPartRequest) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

func (x *AddDefinitionPartRequest) GetPart() *DomainDefinition_Part {
	if x != nil {
		return x.Part
	}
	return nil
}

type AddDefinitionPartResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddDefinitionPartResponse) Reset() {
	*x = AddDefinitionPartResponse{}
	mi := &file_synq_domains_v1_domains_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddDefinitionPartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDefinitionPartResponse) ProtoMessage() {}

func (x *AddDefinitionPartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_synq_domains_v1_domains_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddDefinitionPartResponse.ProtoReflect.Descriptor instead.
func (*AddDefinitionPartResponse) Descriptor() ([]byte, []int) {
	return file_synq_domains_v1_domains_service_proto_rawDescGZIP(), []int{13}
}

type RemoveDefinitionPartRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DomainId      string                 `protobuf:"bytes,1,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	PartId        string                 `protobuf:"bytes,2,opt,name=part_id,json=partId,proto3" json:"part_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveDefinitionPartRequest) Reset() {
	*x = RemoveDefinitionPartRequest{}
	mi := &file_synq_domains_v1_domains_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveDefinitionPartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveDefinitionPartRequest) ProtoMessage() {}

func (x *RemoveDefinitionPartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_synq_domains_v1_domains_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveDefinitionPartRequest.ProtoReflect.Descriptor instead.
func (*RemoveDefinitionPartRequest) Descriptor() ([]byte, []int) {
	return file_synq_domains_v1_domains_service_proto_rawDescGZIP(), []int{14}
}

func (x *RemoveDefinitionPartRequest) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

func (x *RemoveDefinitionPartRequest) GetPartId() string {
	if x != nil {
		return x.PartId
	}
	return ""
}

type RemoveDefinitionPartResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveDefinitionPartResponse) Reset() {
	*x = RemoveDefinitionPartResponse{}
	mi := &file_synq_domains_v1_domains_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveDefinitionPartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveDefinitionPartResponse) ProtoMessage() {}

func (x *RemoveDefinitionPartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_synq_domains_v1_domains_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveDefinitionPartResponse.ProtoReflect.Descriptor instead.
func (*RemoveDefinitionPartResponse) Descriptor() ([]byte, []int) {
	return file_synq_domains_v1_domains_service_proto_rawDescGZIP(), []int{15}
}

var File_synq_domains_v1_domains_service_proto protoreflect.FileDescriptor

var file_synq_domains_v1_domains_service_proto_rawDesc = string([]byte{
	0x0a, 0x25, 0x73, 0x79, 0x6e, 0x71, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x2f, 0x76,
	0x31, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x73, 0x79, 0x6e, 0x71, 0x2e, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x27, 0x73, 0x79, 0x6e, 0x71, 0x2f, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d,
	0x73, 0x79, 0x6e, 0x71, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x2f, 0x76, 0x31, 0x2f,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x73,
	0x79, 0x6e, 0x71, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x5f, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xa9, 0x01, 0x0a, 0x0d, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x20, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0c, 0xba, 0x48, 0x09, 0xc8, 0x01, 0x01, 0x72, 0x04, 0x10, 0x01, 0x18, 0x64, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xba, 0x48, 0x07, 0x72, 0x05,
	0x10, 0x00, 0x18, 0x90, 0x4e, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0x48, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x48,
	0x00, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0c,
	0x0a, 0x0a, 0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x22, 0x10, 0x0a, 0x0e,
	0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x30,
	0x0a, 0x0f, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x73,
	0x22, 0xb1, 0x01, 0x0a, 0x10, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x07, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x73, 0x79, 0x6e, 0x71, 0x2e, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x1a,
	0x53, 0x0a, 0x0c, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x2d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x73, 0x79, 0x6e, 0x71, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x47, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0x48, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01,
	0x48, 0x00, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42,
	0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x22, 0x41, 0x0a,
	0x0c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a,
	0x07, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x73, 0x79, 0x6e, 0x71, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x07, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73,
	0x22, 0x36, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x25, 0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0x48, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x08,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x22, 0x10, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3f, 0x0a, 0x20, 0x46, 0x65,
	0x74, 0x63, 0x68, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x53, 0x75, 0x62,
	0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x22, 0xd3, 0x01, 0x0a, 0x21,
	0x46, 0x65, 0x74, 0x63, 0x68, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x53,
	0x75, 0x62, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x59, 0x0a, 0x07, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x73, 0x79, 0x6e, 0x71, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x57, 0x69, 0x74, 0x68, 0x53, 0x75, 0x62, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x07, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x1a, 0x53, 0x0a, 0x0c,
	0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2d,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x73, 0x79, 0x6e, 0x71, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x80, 0x01, 0x0a, 0x14, 0x53, 0x65, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x09, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xba,
	0x48, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49,
	0x64, 0x12, 0x41, 0x0a, 0x0a, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73, 0x79, 0x6e, 0x71, 0x2e, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x17, 0x0a, 0x15, 0x53, 0x65, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x7d, 0x0a,
	0x18, 0x41, 0x64, 0x64, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61,
	0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x09, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0x48,
	0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64,
	0x12, 0x3a, 0x0a, 0x04, 0x70, 0x61, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x73, 0x79, 0x6e, 0x71, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x52, 0x04, 0x70, 0x61, 0x72, 0x74, 0x22, 0x1b, 0x0a, 0x19,
	0x41, 0x64, 0x64, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5d, 0x0a, 0x1b, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0x48, 0x05,
	0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x70, 0x61, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x70, 0x61, 0x72, 0x74, 0x49, 0x64, 0x22, 0x1e, 0x0a, 0x1c, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xd2, 0x06, 0x0a, 0x0e, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x53, 0x0a, 0x06, 0x55,
	0x70, 0x73, 0x65, 0x72, 0x74, 0x12, 0x1e, 0x2e, 0x73, 0x79, 0x6e, 0x71, 0x2e, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x79, 0x6e, 0x71, 0x2e, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x08, 0xd2, 0xb5, 0x18, 0x04, 0x0a, 0x02, 0xa0, 0x01,
	0x12, 0x59, 0x0a, 0x08, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x12, 0x20, 0x2e, 0x73,
	0x79, 0x6e, 0x71, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21,
	0x2e, 0x73, 0x79, 0x6e, 0x71, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x08, 0xd2, 0xb5, 0x18, 0x04, 0x0a, 0x02, 0xa1, 0x01, 0x12, 0x8c, 0x01, 0x0a, 0x19,
	0x46, 0x65, 0x74, 0x63, 0x68, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x53,
	0x75, 0x62, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x12, 0x31, 0x2e, 0x73, 0x79, 0x6e, 0x71,
	0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x65, 0x74, 0x63,
	0x68, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x53, 0x75, 0x62, 0x44, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x73,
	0x79, 0x6e, 0x71, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46,
	0x65, 0x74, 0x63, 0x68, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x53, 0x75,
	0x62, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x08, 0xd2, 0xb5, 0x18, 0x04, 0x0a, 0x02, 0xa1, 0x01, 0x12, 0x4d, 0x0a, 0x04, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x1c, 0x2e, 0x73, 0x79, 0x6e, 0x71, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1d, 0x2e, 0x73, 0x79, 0x6e, 0x71, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x08, 0xd2, 0xb5, 0x18, 0x04, 0x0a, 0x02, 0xa1, 0x01, 0x12, 0x53, 0x0a, 0x06, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x12, 0x1e, 0x2e, 0x73, 0x79, 0x6e, 0x71, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x79, 0x6e, 0x71, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x08, 0xd2, 0xb5, 0x18, 0x04, 0x0a, 0x02, 0xa0, 0x01, 0x12, 0x68,
	0x0a, 0x0d, 0x53, 0x65, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x25, 0x2e, 0x73, 0x79, 0x6e, 0x71, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x65, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x73, 0x79, 0x6e, 0x71, 0x2e, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x08,
	0xd2, 0xb5, 0x18, 0x04, 0x0a, 0x02, 0xa0, 0x01, 0x12, 0x74, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x12, 0x29, 0x2e,
	0x73, 0x79, 0x6e, 0x71, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x64, 0x64, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x73, 0x79, 0x6e, 0x71, 0x2e,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x08, 0xd2, 0xb5, 0x18, 0x04, 0x0a, 0x02, 0xa0, 0x01, 0x12, 0x7d,
	0x0a, 0x14, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x12, 0x2c, 0x2e, 0x73, 0x79, 0x6e, 0x71, 0x2e, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x73, 0x79, 0x6e, 0x71, 0x2e, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x08, 0xd2, 0xb5, 0x18, 0x04, 0x0a, 0x02, 0xa0, 0x01, 0x42, 0xab, 0x01,
	0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x79, 0x6e, 0x71, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x73, 0x2e, 0x76, 0x31, 0x42, 0x13, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x21, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x65, 0x74, 0x73, 0x79, 0x6e, 0x71,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x2f, 0x76, 0x31, 0xa2,
	0x02, 0x03, 0x53, 0x44, 0x58, 0xaa, 0x02, 0x0f, 0x53, 0x79, 0x6e, 0x71, 0x2e, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x73, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0f, 0x53, 0x79, 0x6e, 0x71, 0x5c, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1b, 0x53, 0x79, 0x6e, 0x71,
	0x5c, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x11, 0x53, 0x79, 0x6e, 0x71, 0x3a, 0x3a,
	0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
})

var (
	file_synq_domains_v1_domains_service_proto_rawDescOnce sync.Once
	file_synq_domains_v1_domains_service_proto_rawDescData []byte
)

func file_synq_domains_v1_domains_service_proto_rawDescGZIP() []byte {
	file_synq_domains_v1_domains_service_proto_rawDescOnce.Do(func() {
		file_synq_domains_v1_domains_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_synq_domains_v1_domains_service_proto_rawDesc), len(file_synq_domains_v1_domains_service_proto_rawDesc)))
	})
	return file_synq_domains_v1_domains_service_proto_rawDescData
}

var file_synq_domains_v1_domains_service_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_synq_domains_v1_domains_service_proto_goTypes = []any{
	(*UpsertRequest)(nil),                     // 0: synq.domains.v1.UpsertRequest
	(*UpsertResponse)(nil),                    // 1: synq.domains.v1.UpsertResponse
	(*BatchGetRequest)(nil),                   // 2: synq.domains.v1.BatchGetRequest
	(*BatchGetResponse)(nil),                  // 3: synq.domains.v1.BatchGetResponse
	(*ListRequest)(nil),                       // 4: synq.domains.v1.ListRequest
	(*ListResponse)(nil),                      // 5: synq.domains.v1.ListResponse
	(*DeleteRequest)(nil),                     // 6: synq.domains.v1.DeleteRequest
	(*DeleteResponse)(nil),                    // 7: synq.domains.v1.DeleteResponse
	(*FetchDomainWithSubDomainsRequest)(nil),  // 8: synq.domains.v1.FetchDomainWithSubDomainsRequest
	(*FetchDomainWithSubDomainsResponse)(nil), // 9: synq.domains.v1.FetchDomainWithSubDomainsResponse
	(*SetDefinitionRequest)(nil),              // 10: synq.domains.v1.SetDefinitionRequest
	(*SetDefinitionResponse)(nil),             // 11: synq.domains.v1.SetDefinitionResponse
	(*AddDefinitionPartRequest)(nil),          // 12: synq.domains.v1.AddDefinitionPartRequest
	(*AddDefinitionPartResponse)(nil),         // 13: synq.domains.v1.AddDefinitionPartResponse
	(*RemoveDefinitionPartRequest)(nil),       // 14: synq.domains.v1.RemoveDefinitionPartRequest
	(*RemoveDefinitionPartResponse)(nil),      // 15: synq.domains.v1.RemoveDefinitionPartResponse
	nil,                                       // 16: synq.domains.v1.BatchGetResponse.DomainsEntry
	nil,                                       // 17: synq.domains.v1.FetchDomainWithSubDomainsResponse.DomainsEntry
	(*Domain)(nil),                            // 18: synq.domains.v1.Domain
	(*DomainDefinition)(nil),                  // 19: synq.domains.v1.DomainDefinition
	(*DomainDefinition_Part)(nil),             // 20: synq.domains.v1.DomainDefinition.Part
}
var file_synq_domains_v1_domains_service_proto_depIdxs = []int32{
	16, // 0: synq.domains.v1.BatchGetResponse.domains:type_name -> synq.domains.v1.BatchGetResponse.DomainsEntry
	18, // 1: synq.domains.v1.ListResponse.domains:type_name -> synq.domains.v1.Domain
	17, // 2: synq.domains.v1.FetchDomainWithSubDomainsResponse.domains:type_name -> synq.domains.v1.FetchDomainWithSubDomainsResponse.DomainsEntry
	19, // 3: synq.domains.v1.SetDefinitionRequest.definition:type_name -> synq.domains.v1.DomainDefinition
	20, // 4: synq.domains.v1.AddDefinitionPartRequest.part:type_name -> synq.domains.v1.DomainDefinition.Part
	18, // 5: synq.domains.v1.BatchGetResponse.DomainsEntry.value:type_name -> synq.domains.v1.Domain
	18, // 6: synq.domains.v1.FetchDomainWithSubDomainsResponse.DomainsEntry.value:type_name -> synq.domains.v1.Domain
	0,  // 7: synq.domains.v1.DomainsService.Upsert:input_type -> synq.domains.v1.UpsertRequest
	2,  // 8: synq.domains.v1.DomainsService.BatchGet:input_type -> synq.domains.v1.BatchGetRequest
	8,  // 9: synq.domains.v1.DomainsService.FetchDomainWithSubDomains:input_type -> synq.domains.v1.FetchDomainWithSubDomainsRequest
	4,  // 10: synq.domains.v1.DomainsService.List:input_type -> synq.domains.v1.ListRequest
	6,  // 11: synq.domains.v1.DomainsService.Delete:input_type -> synq.domains.v1.DeleteRequest
	10, // 12: synq.domains.v1.DomainsService.SetDefinition:input_type -> synq.domains.v1.SetDefinitionRequest
	12, // 13: synq.domains.v1.DomainsService.AddDefinitionPart:input_type -> synq.domains.v1.AddDefinitionPartRequest
	14, // 14: synq.domains.v1.DomainsService.RemoveDefinitionPart:input_type -> synq.domains.v1.RemoveDefinitionPartRequest
	1,  // 15: synq.domains.v1.DomainsService.Upsert:output_type -> synq.domains.v1.UpsertResponse
	3,  // 16: synq.domains.v1.DomainsService.BatchGet:output_type -> synq.domains.v1.BatchGetResponse
	9,  // 17: synq.domains.v1.DomainsService.FetchDomainWithSubDomains:output_type -> synq.domains.v1.FetchDomainWithSubDomainsResponse
	5,  // 18: synq.domains.v1.DomainsService.List:output_type -> synq.domains.v1.ListResponse
	7,  // 19: synq.domains.v1.DomainsService.Delete:output_type -> synq.domains.v1.DeleteResponse
	11, // 20: synq.domains.v1.DomainsService.SetDefinition:output_type -> synq.domains.v1.SetDefinitionResponse
	13, // 21: synq.domains.v1.DomainsService.AddDefinitionPart:output_type -> synq.domains.v1.AddDefinitionPartResponse
	15, // 22: synq.domains.v1.DomainsService.RemoveDefinitionPart:output_type -> synq.domains.v1.RemoveDefinitionPartResponse
	15, // [15:23] is the sub-list for method output_type
	7,  // [7:15] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_synq_domains_v1_domains_service_proto_init() }
func file_synq_domains_v1_domains_service_proto_init() {
	if File_synq_domains_v1_domains_service_proto != nil {
		return
	}
	file_synq_domains_v1_domain_definition_proto_init()
	file_synq_domains_v1_domains_proto_init()
	file_synq_domains_v1_domains_service_proto_msgTypes[0].OneofWrappers = []any{}
	file_synq_domains_v1_domains_service_proto_msgTypes[4].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_synq_domains_v1_domains_service_proto_rawDesc), len(file_synq_domains_v1_domains_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_synq_domains_v1_domains_service_proto_goTypes,
		DependencyIndexes: file_synq_domains_v1_domains_service_proto_depIdxs,
		MessageInfos:      file_synq_domains_v1_domains_service_proto_msgTypes,
	}.Build()
	File_synq_domains_v1_domains_service_proto = out.File
	file_synq_domains_v1_domains_service_proto_goTypes = nil
	file_synq_domains_v1_domains_service_proto_depIdxs = nil
}
