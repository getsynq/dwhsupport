// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        (unknown)
// source: synq/issues/commands/v1/issues_command.proto

package v1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	v1 "github.com/getsynq/api/issues/issues/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Not to be used directly. Use the IssuesService instead when calling via API.
type IssuesCommand struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	Workspace string                 `protobuf:"bytes,1,opt,name=workspace,proto3" json:"workspace,omitempty"`
	// Types that are valid to be assigned to Action:
	//
	//	*IssuesCommand_MarkInvestigating
	//	*IssuesCommand_MarkFixed
	//	*IssuesCommand_MarkExpected
	//	*IssuesCommand_MarkNoActionNeeded
	//	*IssuesCommand_PostComment
	Action        isIssuesCommand_Action `protobuf_oneof:"action"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IssuesCommand) Reset() {
	*x = IssuesCommand{}
	mi := &file_synq_issues_commands_v1_issues_command_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IssuesCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IssuesCommand) ProtoMessage() {}

func (x *IssuesCommand) ProtoReflect() protoreflect.Message {
	mi := &file_synq_issues_commands_v1_issues_command_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IssuesCommand.ProtoReflect.Descriptor instead.
func (*IssuesCommand) Descriptor() ([]byte, []int) {
	return file_synq_issues_commands_v1_issues_command_proto_rawDescGZIP(), []int{0}
}

func (x *IssuesCommand) GetWorkspace() string {
	if x != nil {
		return x.Workspace
	}
	return ""
}

func (x *IssuesCommand) GetAction() isIssuesCommand_Action {
	if x != nil {
		return x.Action
	}
	return nil
}

func (x *IssuesCommand) GetMarkInvestigating() *v1.MarkInvestigatingRequest {
	if x != nil {
		if x, ok := x.Action.(*IssuesCommand_MarkInvestigating); ok {
			return x.MarkInvestigating
		}
	}
	return nil
}

func (x *IssuesCommand) GetMarkFixed() *v1.MarkFixedRequest {
	if x != nil {
		if x, ok := x.Action.(*IssuesCommand_MarkFixed); ok {
			return x.MarkFixed
		}
	}
	return nil
}

func (x *IssuesCommand) GetMarkExpected() *v1.MarkExpectedRequest {
	if x != nil {
		if x, ok := x.Action.(*IssuesCommand_MarkExpected); ok {
			return x.MarkExpected
		}
	}
	return nil
}

func (x *IssuesCommand) GetMarkNoActionNeeded() *v1.MarkNoActionNeededRequest {
	if x != nil {
		if x, ok := x.Action.(*IssuesCommand_MarkNoActionNeeded); ok {
			return x.MarkNoActionNeeded
		}
	}
	return nil
}

func (x *IssuesCommand) GetPostComment() *v1.PostCommentRequest {
	if x != nil {
		if x, ok := x.Action.(*IssuesCommand_PostComment); ok {
			return x.PostComment
		}
	}
	return nil
}

type isIssuesCommand_Action interface {
	isIssuesCommand_Action()
}

type IssuesCommand_MarkInvestigating struct {
	MarkInvestigating *v1.MarkInvestigatingRequest `protobuf:"bytes,10,opt,name=mark_investigating,json=markInvestigating,proto3,oneof"`
}

type IssuesCommand_MarkFixed struct {
	MarkFixed *v1.MarkFixedRequest `protobuf:"bytes,11,opt,name=mark_fixed,json=markFixed,proto3,oneof"`
}

type IssuesCommand_MarkExpected struct {
	MarkExpected *v1.MarkExpectedRequest `protobuf:"bytes,12,opt,name=mark_expected,json=markExpected,proto3,oneof"`
}

type IssuesCommand_MarkNoActionNeeded struct {
	MarkNoActionNeeded *v1.MarkNoActionNeededRequest `protobuf:"bytes,13,opt,name=mark_no_action_needed,json=markNoActionNeeded,proto3,oneof"`
}

type IssuesCommand_PostComment struct {
	PostComment *v1.PostCommentRequest `protobuf:"bytes,14,opt,name=post_comment,json=postComment,proto3,oneof"`
}

func (*IssuesCommand_MarkInvestigating) isIssuesCommand_Action() {}

func (*IssuesCommand_MarkFixed) isIssuesCommand_Action() {}

func (*IssuesCommand_MarkExpected) isIssuesCommand_Action() {}

func (*IssuesCommand_MarkNoActionNeeded) isIssuesCommand_Action() {}

func (*IssuesCommand_PostComment) isIssuesCommand_Action() {}

var File_synq_issues_commands_v1_issues_command_proto protoreflect.FileDescriptor

var file_synq_issues_commands_v1_issues_command_proto_rawDesc = string([]byte{
	0x0a, 0x2c, 0x73, 0x79, 0x6e, 0x71, 0x2f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x73, 0x2f, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x73,
	0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17,
	0x73, 0x79, 0x6e, 0x71, 0x2e, 0x69, 0x73, 0x73, 0x75, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2a, 0x73, 0x79, 0x6e, 0x71, 0x2f, 0x69, 0x73, 0x73, 0x75, 0x65,
	0x73, 0x2f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x73, 0x73, 0x75,
	0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xf5, 0x03, 0x0a, 0x0d, 0x49, 0x73, 0x73, 0x75, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x12, 0x24, 0x0a, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x09, 0x77,
	0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x60, 0x0a, 0x12, 0x6d, 0x61, 0x72, 0x6b,
	0x5f, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x69, 0x67, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x73, 0x79, 0x6e, 0x71, 0x2e, 0x69, 0x73, 0x73, 0x75,
	0x65, 0x73, 0x2e, 0x69, 0x73, 0x73, 0x75, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x72,
	0x6b, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x69, 0x67, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x11, 0x6d, 0x61, 0x72, 0x6b, 0x49, 0x6e, 0x76,
	0x65, 0x73, 0x74, 0x69, 0x67, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x48, 0x0a, 0x0a, 0x6d, 0x61,
	0x72, 0x6b, 0x5f, 0x66, 0x69, 0x78, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x73, 0x79, 0x6e, 0x71, 0x2e, 0x69, 0x73, 0x73, 0x75, 0x65, 0x73, 0x2e, 0x69, 0x73, 0x73,
	0x75, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x46, 0x69, 0x78, 0x65, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x09, 0x6d, 0x61, 0x72, 0x6b, 0x46,
	0x69, 0x78, 0x65, 0x64, 0x12, 0x51, 0x0a, 0x0d, 0x6d, 0x61, 0x72, 0x6b, 0x5f, 0x65, 0x78, 0x70,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x73, 0x79,
	0x6e, 0x71, 0x2e, 0x69, 0x73, 0x73, 0x75, 0x65, 0x73, 0x2e, 0x69, 0x73, 0x73, 0x75, 0x65, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x45, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x6d, 0x61, 0x72, 0x6b, 0x45,
	0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x65, 0x0a, 0x15, 0x6d, 0x61, 0x72, 0x6b, 0x5f,
	0x6e, 0x6f, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x65, 0x65, 0x64, 0x65, 0x64,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x73, 0x79, 0x6e, 0x71, 0x2e, 0x69, 0x73,
	0x73, 0x75, 0x65, 0x73, 0x2e, 0x69, 0x73, 0x73, 0x75, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x61, 0x72, 0x6b, 0x4e, 0x6f, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x65, 0x65, 0x64, 0x65,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x12, 0x6d, 0x61, 0x72, 0x6b,
	0x4e, 0x6f, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x65, 0x65, 0x64, 0x65, 0x64, 0x12, 0x4e,
	0x0a, 0x0c, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x73, 0x79, 0x6e, 0x71, 0x2e, 0x69, 0x73, 0x73, 0x75,
	0x65, 0x73, 0x2e, 0x69, 0x73, 0x73, 0x75, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73,
	0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48,
	0x00, 0x52, 0x0b, 0x70, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x08,
	0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0xdb, 0x01, 0x0a, 0x1b, 0x63, 0x6f, 0x6d,
	0x2e, 0x73, 0x79, 0x6e, 0x71, 0x2e, 0x69, 0x73, 0x73, 0x75, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x42, 0x12, 0x49, 0x73, 0x73, 0x75, 0x65, 0x73,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x29,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x65, 0x74, 0x73, 0x79,
	0x6e, 0x71, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x73, 0x2f, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2f, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x53, 0x49, 0x43, 0xaa,
	0x02, 0x17, 0x53, 0x79, 0x6e, 0x71, 0x2e, 0x49, 0x73, 0x73, 0x75, 0x65, 0x73, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x17, 0x53, 0x79, 0x6e, 0x71,
	0x5c, 0x49, 0x73, 0x73, 0x75, 0x65, 0x73, 0x5c, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73,
	0x5c, 0x56, 0x31, 0xe2, 0x02, 0x23, 0x53, 0x79, 0x6e, 0x71, 0x5c, 0x49, 0x73, 0x73, 0x75, 0x65,
	0x73, 0x5c, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50,
	0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x1a, 0x53, 0x79, 0x6e, 0x71,
	0x3a, 0x3a, 0x49, 0x73, 0x73, 0x75, 0x65, 0x73, 0x3a, 0x3a, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x73, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_synq_issues_commands_v1_issues_command_proto_rawDescOnce sync.Once
	file_synq_issues_commands_v1_issues_command_proto_rawDescData []byte
)

func file_synq_issues_commands_v1_issues_command_proto_rawDescGZIP() []byte {
	file_synq_issues_commands_v1_issues_command_proto_rawDescOnce.Do(func() {
		file_synq_issues_commands_v1_issues_command_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_synq_issues_commands_v1_issues_command_proto_rawDesc), len(file_synq_issues_commands_v1_issues_command_proto_rawDesc)))
	})
	return file_synq_issues_commands_v1_issues_command_proto_rawDescData
}

var file_synq_issues_commands_v1_issues_command_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_synq_issues_commands_v1_issues_command_proto_goTypes = []any{
	(*IssuesCommand)(nil),                // 0: synq.issues.commands.v1.IssuesCommand
	(*v1.MarkInvestigatingRequest)(nil),  // 1: synq.issues.issues.v1.MarkInvestigatingRequest
	(*v1.MarkFixedRequest)(nil),          // 2: synq.issues.issues.v1.MarkFixedRequest
	(*v1.MarkExpectedRequest)(nil),       // 3: synq.issues.issues.v1.MarkExpectedRequest
	(*v1.MarkNoActionNeededRequest)(nil), // 4: synq.issues.issues.v1.MarkNoActionNeededRequest
	(*v1.PostCommentRequest)(nil),        // 5: synq.issues.issues.v1.PostCommentRequest
}
var file_synq_issues_commands_v1_issues_command_proto_depIdxs = []int32{
	1, // 0: synq.issues.commands.v1.IssuesCommand.mark_investigating:type_name -> synq.issues.issues.v1.MarkInvestigatingRequest
	2, // 1: synq.issues.commands.v1.IssuesCommand.mark_fixed:type_name -> synq.issues.issues.v1.MarkFixedRequest
	3, // 2: synq.issues.commands.v1.IssuesCommand.mark_expected:type_name -> synq.issues.issues.v1.MarkExpectedRequest
	4, // 3: synq.issues.commands.v1.IssuesCommand.mark_no_action_needed:type_name -> synq.issues.issues.v1.MarkNoActionNeededRequest
	5, // 4: synq.issues.commands.v1.IssuesCommand.post_comment:type_name -> synq.issues.issues.v1.PostCommentRequest
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_synq_issues_commands_v1_issues_command_proto_init() }
func file_synq_issues_commands_v1_issues_command_proto_init() {
	if File_synq_issues_commands_v1_issues_command_proto != nil {
		return
	}
	file_synq_issues_commands_v1_issues_command_proto_msgTypes[0].OneofWrappers = []any{
		(*IssuesCommand_MarkInvestigating)(nil),
		(*IssuesCommand_MarkFixed)(nil),
		(*IssuesCommand_MarkExpected)(nil),
		(*IssuesCommand_MarkNoActionNeeded)(nil),
		(*IssuesCommand_PostComment)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_synq_issues_commands_v1_issues_command_proto_rawDesc), len(file_synq_issues_commands_v1_issues_command_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_synq_issues_commands_v1_issues_command_proto_goTypes,
		DependencyIndexes: file_synq_issues_commands_v1_issues_command_proto_depIdxs,
		MessageInfos:      file_synq_issues_commands_v1_issues_command_proto_msgTypes,
	}.Build()
	File_synq_issues_commands_v1_issues_command_proto = out.File
	file_synq_issues_commands_v1_issues_command_proto_goTypes = nil
	file_synq_issues_commands_v1_issues_command_proto_depIdxs = nil
}
