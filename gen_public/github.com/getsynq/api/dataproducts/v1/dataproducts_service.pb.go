// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        (unknown)
// source: synq/dataproducts/v1/dataproducts_service.proto

package v1

import (
	v1 "github.com/getsynq/api/entities/v1"
	_ "github.com/getsynq/api/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UpsertRequest struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Identifier    *v1.DataproductIdentifier `protobuf:"bytes,1,opt,name=identifier,proto3,oneof" json:"identifier,omitempty"`
	Title         string                    `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                    `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Folder        string                    `protobuf:"bytes,4,opt,name=folder,proto3" json:"folder,omitempty"`
	Priority      Dataproduct_Priority      `protobuf:"varint,5,opt,name=priority,proto3,enum=synq.dataproducts.v1.Dataproduct_Priority" json:"priority,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpsertRequest) Reset() {
	*x = UpsertRequest{}
	mi := &file_synq_dataproducts_v1_dataproducts_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpsertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertRequest) ProtoMessage() {}

func (x *UpsertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_synq_dataproducts_v1_dataproducts_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertRequest.ProtoReflect.Descriptor instead.
func (*UpsertRequest) Descriptor() ([]byte, []int) {
	return file_synq_dataproducts_v1_dataproducts_service_proto_rawDescGZIP(), []int{0}
}

func (x *UpsertRequest) GetIdentifier() *v1.DataproductIdentifier {
	if x != nil {
		return x.Identifier
	}
	return nil
}

func (x *UpsertRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpsertRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpsertRequest) GetFolder() string {
	if x != nil {
		return x.Folder
	}
	return ""
}

func (x *UpsertRequest) GetPriority() Dataproduct_Priority {
	if x != nil {
		return x.Priority
	}
	return Dataproduct_PRIORITY_UNSPECIFIED
}

type UpsertResponse struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Identifier    *v1.DataproductIdentifier `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"` // identifier of the updated or created dataproduct
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpsertResponse) Reset() {
	*x = UpsertResponse{}
	mi := &file_synq_dataproducts_v1_dataproducts_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpsertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertResponse) ProtoMessage() {}

func (x *UpsertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_synq_dataproducts_v1_dataproducts_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertResponse.ProtoReflect.Descriptor instead.
func (*UpsertResponse) Descriptor() ([]byte, []int) {
	return file_synq_dataproducts_v1_dataproducts_service_proto_rawDescGZIP(), []int{1}
}

func (x *UpsertResponse) GetIdentifier() *v1.DataproductIdentifier {
	if x != nil {
		return x.Identifier
	}
	return nil
}

type GetRequest struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Identifiers   []*v1.DataproductIdentifier `protobuf:"bytes,1,rep,name=identifiers,proto3" json:"identifiers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRequest) Reset() {
	*x = GetRequest{}
	mi := &file_synq_dataproducts_v1_dataproducts_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequest) ProtoMessage() {}

func (x *GetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_synq_dataproducts_v1_dataproducts_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequest.ProtoReflect.Descriptor instead.
func (*GetRequest) Descriptor() ([]byte, []int) {
	return file_synq_dataproducts_v1_dataproducts_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetRequest) GetIdentifiers() []*v1.DataproductIdentifier {
	if x != nil {
		return x.Identifiers
	}
	return nil
}

type GetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Products      []*Dataproduct         `protobuf:"bytes,1,rep,name=products,proto3" json:"products,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetResponse) Reset() {
	*x = GetResponse{}
	mi := &file_synq_dataproducts_v1_dataproducts_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResponse) ProtoMessage() {}

func (x *GetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_synq_dataproducts_v1_dataproducts_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResponse.ProtoReflect.Descriptor instead.
func (*GetResponse) Descriptor() ([]byte, []int) {
	return file_synq_dataproducts_v1_dataproducts_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetResponse) GetProducts() []*Dataproduct {
	if x != nil {
		return x.Products
	}
	return nil
}

type ListRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	IncludeDeleted bool                   `protobuf:"varint,1,opt,name=include_deleted,json=includeDeleted,proto3" json:"include_deleted,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ListRequest) Reset() {
	*x = ListRequest{}
	mi := &file_synq_dataproducts_v1_dataproducts_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRequest) ProtoMessage() {}

func (x *ListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_synq_dataproducts_v1_dataproducts_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRequest.ProtoReflect.Descriptor instead.
func (*ListRequest) Descriptor() ([]byte, []int) {
	return file_synq_dataproducts_v1_dataproducts_service_proto_rawDescGZIP(), []int{4}
}

func (x *ListRequest) GetIncludeDeleted() bool {
	if x != nil {
		return x.IncludeDeleted
	}
	return false
}

type ListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Products      []*Dataproduct         `protobuf:"bytes,1,rep,name=products,proto3" json:"products,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListResponse) Reset() {
	*x = ListResponse{}
	mi := &file_synq_dataproducts_v1_dataproducts_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListResponse) ProtoMessage() {}

func (x *ListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_synq_dataproducts_v1_dataproducts_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListResponse.ProtoReflect.Descriptor instead.
func (*ListResponse) Descriptor() ([]byte, []int) {
	return file_synq_dataproducts_v1_dataproducts_service_proto_rawDescGZIP(), []int{5}
}

func (x *ListResponse) GetProducts() []*Dataproduct {
	if x != nil {
		return x.Products
	}
	return nil
}

type DeleteRequest struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Identifier    *v1.DataproductIdentifier `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRequest) Reset() {
	*x = DeleteRequest{}
	mi := &file_synq_dataproducts_v1_dataproducts_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRequest) ProtoMessage() {}

func (x *DeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_synq_dataproducts_v1_dataproducts_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRequest.ProtoReflect.Descriptor instead.
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return file_synq_dataproducts_v1_dataproducts_service_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteRequest) GetIdentifier() *v1.DataproductIdentifier {
	if x != nil {
		return x.Identifier
	}
	return nil
}

type DeleteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteResponse) Reset() {
	*x = DeleteResponse{}
	mi := &file_synq_dataproducts_v1_dataproducts_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResponse) ProtoMessage() {}

func (x *DeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_synq_dataproducts_v1_dataproducts_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResponse.ProtoReflect.Descriptor instead.
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return file_synq_dataproducts_v1_dataproducts_service_proto_rawDescGZIP(), []int{7}
}

type SetDefinitionRequest struct {
	state             protoimpl.MessageState    `protogen:"open.v1"`
	ProductIdentifier *v1.DataproductIdentifier `protobuf:"bytes,1,opt,name=product_identifier,json=productIdentifier,proto3" json:"product_identifier,omitempty"`
	Definition        *DataproductDefinition    `protobuf:"bytes,2,opt,name=definition,proto3" json:"definition,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *SetDefinitionRequest) Reset() {
	*x = SetDefinitionRequest{}
	mi := &file_synq_dataproducts_v1_dataproducts_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetDefinitionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDefinitionRequest) ProtoMessage() {}

func (x *SetDefinitionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_synq_dataproducts_v1_dataproducts_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDefinitionRequest.ProtoReflect.Descriptor instead.
func (*SetDefinitionRequest) Descriptor() ([]byte, []int) {
	return file_synq_dataproducts_v1_dataproducts_service_proto_rawDescGZIP(), []int{8}
}

func (x *SetDefinitionRequest) GetProductIdentifier() *v1.DataproductIdentifier {
	if x != nil {
		return x.ProductIdentifier
	}
	return nil
}

func (x *SetDefinitionRequest) GetDefinition() *DataproductDefinition {
	if x != nil {
		return x.Definition
	}
	return nil
}

type SetDefinitionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetDefinitionResponse) Reset() {
	*x = SetDefinitionResponse{}
	mi := &file_synq_dataproducts_v1_dataproducts_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetDefinitionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDefinitionResponse) ProtoMessage() {}

func (x *SetDefinitionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_synq_dataproducts_v1_dataproducts_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDefinitionResponse.ProtoReflect.Descriptor instead.
func (*SetDefinitionResponse) Descriptor() ([]byte, []int) {
	return file_synq_dataproducts_v1_dataproducts_service_proto_rawDescGZIP(), []int{9}
}

type AddDefinitionPartRequest struct {
	state             protoimpl.MessageState      `protogen:"open.v1"`
	ProductIdentifier *v1.DataproductIdentifier   `protobuf:"bytes,1,opt,name=product_identifier,json=productIdentifier,proto3" json:"product_identifier,omitempty"`
	Part              *DataproductDefinition_Part `protobuf:"bytes,2,opt,name=part,proto3" json:"part,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *AddDefinitionPartRequest) Reset() {
	*x = AddDefinitionPartRequest{}
	mi := &file_synq_dataproducts_v1_dataproducts_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddDefinitionPartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDefinitionPartRequest) ProtoMessage() {}

func (x *AddDefinitionPartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_synq_dataproducts_v1_dataproducts_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddDefinitionPartRequest.ProtoReflect.Descriptor instead.
func (*AddDefinitionPartRequest) Descriptor() ([]byte, []int) {
	return file_synq_dataproducts_v1_dataproducts_service_proto_rawDescGZIP(), []int{10}
}

func (x *AddDefinitionPartRequest) GetProductIdentifier() *v1.DataproductIdentifier {
	if x != nil {
		return x.ProductIdentifier
	}
	return nil
}

func (x *AddDefinitionPartRequest) GetPart() *DataproductDefinition_Part {
	if x != nil {
		return x.Part
	}
	return nil
}

type AddDefinitionPartResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddDefinitionPartResponse) Reset() {
	*x = AddDefinitionPartResponse{}
	mi := &file_synq_dataproducts_v1_dataproducts_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddDefinitionPartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDefinitionPartResponse) ProtoMessage() {}

func (x *AddDefinitionPartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_synq_dataproducts_v1_dataproducts_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddDefinitionPartResponse.ProtoReflect.Descriptor instead.
func (*AddDefinitionPartResponse) Descriptor() ([]byte, []int) {
	return file_synq_dataproducts_v1_dataproducts_service_proto_rawDescGZIP(), []int{11}
}

type RemoveDefinitionPartRequest struct {
	state             protoimpl.MessageState    `protogen:"open.v1"`
	ProductIdentifier *v1.DataproductIdentifier `protobuf:"bytes,1,opt,name=product_identifier,json=productIdentifier,proto3" json:"product_identifier,omitempty"`
	PartId            string                    `protobuf:"bytes,2,opt,name=part_id,json=partId,proto3" json:"part_id,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *RemoveDefinitionPartRequest) Reset() {
	*x = RemoveDefinitionPartRequest{}
	mi := &file_synq_dataproducts_v1_dataproducts_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveDefinitionPartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveDefinitionPartRequest) ProtoMessage() {}

func (x *RemoveDefinitionPartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_synq_dataproducts_v1_dataproducts_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveDefinitionPartRequest.ProtoReflect.Descriptor instead.
func (*RemoveDefinitionPartRequest) Descriptor() ([]byte, []int) {
	return file_synq_dataproducts_v1_dataproducts_service_proto_rawDescGZIP(), []int{12}
}

func (x *RemoveDefinitionPartRequest) GetProductIdentifier() *v1.DataproductIdentifier {
	if x != nil {
		return x.ProductIdentifier
	}
	return nil
}

func (x *RemoveDefinitionPartRequest) GetPartId() string {
	if x != nil {
		return x.PartId
	}
	return ""
}

type RemoveDefinitionPartResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveDefinitionPartResponse) Reset() {
	*x = RemoveDefinitionPartResponse{}
	mi := &file_synq_dataproducts_v1_dataproducts_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveDefinitionPartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveDefinitionPartResponse) ProtoMessage() {}

func (x *RemoveDefinitionPartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_synq_dataproducts_v1_dataproducts_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveDefinitionPartResponse.ProtoReflect.Descriptor instead.
func (*RemoveDefinitionPartResponse) Descriptor() ([]byte, []int) {
	return file_synq_dataproducts_v1_dataproducts_service_proto_rawDescGZIP(), []int{13}
}

var File_synq_dataproducts_v1_dataproducts_service_proto protoreflect.FileDescriptor

var file_synq_dataproducts_v1_dataproducts_service_proto_rawDesc = string([]byte{
	0x0a, 0x2f, 0x73, 0x79, 0x6e, 0x71, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x14, 0x73, 0x79, 0x6e, 0x71, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x26, 0x73, 0x79, 0x6e, 0x71, 0x2f, 0x64, 0x61,
	0x74, 0x61, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x61,
	0x74, 0x61, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x31, 0x73, 0x79, 0x6e, 0x71, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x21, 0x73, 0x79, 0x6e, 0x71, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x73, 0x79, 0x6e, 0x71, 0x2f, 0x76, 0x31, 0x2f, 0x73,
	0x63, 0x6f, 0x70, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x84, 0x02, 0x0a, 0x0d, 0x55, 0x70, 0x73,
	0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4c, 0x0a, 0x0a, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x73, 0x79, 0x6e, 0x71, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x46, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f,
	0x72, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x73, 0x79, 0x6e,
	0x71, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x72,
	0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79,
	0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x22,
	0x59, 0x0a, 0x0e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x47, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x73, 0x79, 0x6e, 0x71, 0x2e, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x0a,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x22, 0x57, 0x0a, 0x0a, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x49, 0x0a, 0x0b, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x73, 0x79, 0x6e, 0x71, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x0b, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x73, 0x22, 0x4c, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3d, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73, 0x79, 0x6e, 0x71, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x73, 0x22, 0x36, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x27, 0x0a, 0x0f, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x6e, 0x63, 0x6c, 0x75,
	0x64, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x22, 0x4d, 0x0a, 0x0c, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x08, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73, 0x79,
	0x6e, 0x71, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x08,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x22, 0x58, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x47, 0x0a, 0x0a, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x73, 0x79, 0x6e, 0x71, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x22, 0x10, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0xbb, 0x01, 0x0a, 0x14, 0x53, 0x65, 0x74, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x56, 0x0a,
	0x12, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x73, 0x79, 0x6e, 0x71,
	0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x4b, 0x0a, 0x0a, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x73, 0x79, 0x6e, 0x71,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x17, 0x0a, 0x15, 0x53, 0x65, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xb8, 0x01, 0x0a, 0x18,
	0x41, 0x64, 0x64, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x56, 0x0a, 0x12, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x73, 0x79, 0x6e, 0x71, 0x2e, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x11, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x12, 0x44, 0x0a, 0x04, 0x70, 0x61, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30,
	0x2e, 0x73, 0x79, 0x6e, 0x71, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x72, 0x74,
	0x52, 0x04, 0x70, 0x61, 0x72, 0x74, 0x22, 0x1b, 0x0a, 0x19, 0x41, 0x64, 0x64, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x8e, 0x01, 0x0a, 0x1b, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x56, 0x0a, 0x12, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x73, 0x79, 0x6e, 0x71, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x70,
	0x61, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61,
	0x72, 0x74, 0x49, 0x64, 0x22, 0x1e, 0x0a, 0x1c, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x32, 0x80, 0x06, 0x0a, 0x13, 0x44, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5d, 0x0a, 0x06,
	0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x12, 0x23, 0x2e, 0x73, 0x79, 0x6e, 0x71, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70,
	0x73, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x73, 0x79,
	0x6e, 0x71, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x08, 0xd2, 0xb5, 0x18, 0x04, 0x0a, 0x02, 0x96, 0x01, 0x12, 0x54, 0x0a, 0x03, 0x47,
	0x65, 0x74, 0x12, 0x20, 0x2e, 0x73, 0x79, 0x6e, 0x71, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x73, 0x79, 0x6e, 0x71, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x08, 0xd2, 0xb5, 0x18, 0x04, 0x0a, 0x02, 0x97,
	0x01, 0x12, 0x57, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x21, 0x2e, 0x73, 0x79, 0x6e, 0x71,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73,
	0x79, 0x6e, 0x71, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x08, 0xd2, 0xb5, 0x18, 0x04, 0x0a, 0x02, 0x97, 0x01, 0x12, 0x5d, 0x0a, 0x06, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x12, 0x23, 0x2e, 0x73, 0x79, 0x6e, 0x71, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x73, 0x79, 0x6e, 0x71,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x08, 0xd2, 0xb5, 0x18, 0x04, 0x0a, 0x02, 0x96, 0x01, 0x12, 0x72, 0x0a, 0x0d, 0x53, 0x65, 0x74,
	0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x2e, 0x73, 0x79, 0x6e,
	0x71, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x65, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x73, 0x79, 0x6e, 0x71, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65,
	0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x08, 0xd2, 0xb5, 0x18, 0x04, 0x0a, 0x02, 0x96, 0x01, 0x12, 0x7e, 0x0a,
	0x11, 0x41, 0x64, 0x64, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61,
	0x72, 0x74, 0x12, 0x2e, 0x2e, 0x73, 0x79, 0x6e, 0x71, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x73, 0x79, 0x6e, 0x71, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x08, 0xd2, 0xb5, 0x18, 0x04, 0x0a, 0x02, 0x96, 0x01, 0x12, 0x87, 0x01,
	0x0a, 0x14, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x12, 0x31, 0x2e, 0x73, 0x79, 0x6e, 0x71, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61,
	0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x73, 0x79, 0x6e, 0x71,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x08, 0xd2,
	0xb5, 0x18, 0x04, 0x0a, 0x02, 0x96, 0x01, 0x42, 0xce, 0x01, 0x0a, 0x18, 0x63, 0x6f, 0x6d, 0x2e,
	0x73, 0x79, 0x6e, 0x71, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x73, 0x2e, 0x76, 0x31, 0x42, 0x18, 0x44, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01,
	0x5a, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x65, 0x74,
	0x73, 0x79, 0x6e, 0x71, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x73, 0x2f, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x53, 0x44, 0x58, 0xaa, 0x02,
	0x14, 0x53, 0x79, 0x6e, 0x71, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x73, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x14, 0x53, 0x79, 0x6e, 0x71, 0x5c, 0x44, 0x61, 0x74,
	0x61, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x20, 0x53,
	0x79, 0x6e, 0x71, 0x5c, 0x44, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73,
	0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea,
	0x02, 0x16, 0x53, 0x79, 0x6e, 0x71, 0x3a, 0x3a, 0x44, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x73, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_synq_dataproducts_v1_dataproducts_service_proto_rawDescOnce sync.Once
	file_synq_dataproducts_v1_dataproducts_service_proto_rawDescData []byte
)

func file_synq_dataproducts_v1_dataproducts_service_proto_rawDescGZIP() []byte {
	file_synq_dataproducts_v1_dataproducts_service_proto_rawDescOnce.Do(func() {
		file_synq_dataproducts_v1_dataproducts_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_synq_dataproducts_v1_dataproducts_service_proto_rawDesc), len(file_synq_dataproducts_v1_dataproducts_service_proto_rawDesc)))
	})
	return file_synq_dataproducts_v1_dataproducts_service_proto_rawDescData
}

var file_synq_dataproducts_v1_dataproducts_service_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_synq_dataproducts_v1_dataproducts_service_proto_goTypes = []any{
	(*UpsertRequest)(nil),                // 0: synq.dataproducts.v1.UpsertRequest
	(*UpsertResponse)(nil),               // 1: synq.dataproducts.v1.UpsertResponse
	(*GetRequest)(nil),                   // 2: synq.dataproducts.v1.GetRequest
	(*GetResponse)(nil),                  // 3: synq.dataproducts.v1.GetResponse
	(*ListRequest)(nil),                  // 4: synq.dataproducts.v1.ListRequest
	(*ListResponse)(nil),                 // 5: synq.dataproducts.v1.ListResponse
	(*DeleteRequest)(nil),                // 6: synq.dataproducts.v1.DeleteRequest
	(*DeleteResponse)(nil),               // 7: synq.dataproducts.v1.DeleteResponse
	(*SetDefinitionRequest)(nil),         // 8: synq.dataproducts.v1.SetDefinitionRequest
	(*SetDefinitionResponse)(nil),        // 9: synq.dataproducts.v1.SetDefinitionResponse
	(*AddDefinitionPartRequest)(nil),     // 10: synq.dataproducts.v1.AddDefinitionPartRequest
	(*AddDefinitionPartResponse)(nil),    // 11: synq.dataproducts.v1.AddDefinitionPartResponse
	(*RemoveDefinitionPartRequest)(nil),  // 12: synq.dataproducts.v1.RemoveDefinitionPartRequest
	(*RemoveDefinitionPartResponse)(nil), // 13: synq.dataproducts.v1.RemoveDefinitionPartResponse
	(*v1.DataproductIdentifier)(nil),     // 14: synq.entities.v1.DataproductIdentifier
	(Dataproduct_Priority)(0),            // 15: synq.dataproducts.v1.Dataproduct.Priority
	(*Dataproduct)(nil),                  // 16: synq.dataproducts.v1.Dataproduct
	(*DataproductDefinition)(nil),        // 17: synq.dataproducts.v1.DataproductDefinition
	(*DataproductDefinition_Part)(nil),   // 18: synq.dataproducts.v1.DataproductDefinition.Part
}
var file_synq_dataproducts_v1_dataproducts_service_proto_depIdxs = []int32{
	14, // 0: synq.dataproducts.v1.UpsertRequest.identifier:type_name -> synq.entities.v1.DataproductIdentifier
	15, // 1: synq.dataproducts.v1.UpsertRequest.priority:type_name -> synq.dataproducts.v1.Dataproduct.Priority
	14, // 2: synq.dataproducts.v1.UpsertResponse.identifier:type_name -> synq.entities.v1.DataproductIdentifier
	14, // 3: synq.dataproducts.v1.GetRequest.identifiers:type_name -> synq.entities.v1.DataproductIdentifier
	16, // 4: synq.dataproducts.v1.GetResponse.products:type_name -> synq.dataproducts.v1.Dataproduct
	16, // 5: synq.dataproducts.v1.ListResponse.products:type_name -> synq.dataproducts.v1.Dataproduct
	14, // 6: synq.dataproducts.v1.DeleteRequest.identifier:type_name -> synq.entities.v1.DataproductIdentifier
	14, // 7: synq.dataproducts.v1.SetDefinitionRequest.product_identifier:type_name -> synq.entities.v1.DataproductIdentifier
	17, // 8: synq.dataproducts.v1.SetDefinitionRequest.definition:type_name -> synq.dataproducts.v1.DataproductDefinition
	14, // 9: synq.dataproducts.v1.AddDefinitionPartRequest.product_identifier:type_name -> synq.entities.v1.DataproductIdentifier
	18, // 10: synq.dataproducts.v1.AddDefinitionPartRequest.part:type_name -> synq.dataproducts.v1.DataproductDefinition.Part
	14, // 11: synq.dataproducts.v1.RemoveDefinitionPartRequest.product_identifier:type_name -> synq.entities.v1.DataproductIdentifier
	0,  // 12: synq.dataproducts.v1.DataproductsService.Upsert:input_type -> synq.dataproducts.v1.UpsertRequest
	2,  // 13: synq.dataproducts.v1.DataproductsService.Get:input_type -> synq.dataproducts.v1.GetRequest
	4,  // 14: synq.dataproducts.v1.DataproductsService.List:input_type -> synq.dataproducts.v1.ListRequest
	6,  // 15: synq.dataproducts.v1.DataproductsService.Delete:input_type -> synq.dataproducts.v1.DeleteRequest
	8,  // 16: synq.dataproducts.v1.DataproductsService.SetDefinition:input_type -> synq.dataproducts.v1.SetDefinitionRequest
	10, // 17: synq.dataproducts.v1.DataproductsService.AddDefinitionPart:input_type -> synq.dataproducts.v1.AddDefinitionPartRequest
	12, // 18: synq.dataproducts.v1.DataproductsService.RemoveDefinitionPart:input_type -> synq.dataproducts.v1.RemoveDefinitionPartRequest
	1,  // 19: synq.dataproducts.v1.DataproductsService.Upsert:output_type -> synq.dataproducts.v1.UpsertResponse
	3,  // 20: synq.dataproducts.v1.DataproductsService.Get:output_type -> synq.dataproducts.v1.GetResponse
	5,  // 21: synq.dataproducts.v1.DataproductsService.List:output_type -> synq.dataproducts.v1.ListResponse
	7,  // 22: synq.dataproducts.v1.DataproductsService.Delete:output_type -> synq.dataproducts.v1.DeleteResponse
	9,  // 23: synq.dataproducts.v1.DataproductsService.SetDefinition:output_type -> synq.dataproducts.v1.SetDefinitionResponse
	11, // 24: synq.dataproducts.v1.DataproductsService.AddDefinitionPart:output_type -> synq.dataproducts.v1.AddDefinitionPartResponse
	13, // 25: synq.dataproducts.v1.DataproductsService.RemoveDefinitionPart:output_type -> synq.dataproducts.v1.RemoveDefinitionPartResponse
	19, // [19:26] is the sub-list for method output_type
	12, // [12:19] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_synq_dataproducts_v1_dataproducts_service_proto_init() }
func file_synq_dataproducts_v1_dataproducts_service_proto_init() {
	if File_synq_dataproducts_v1_dataproducts_service_proto != nil {
		return
	}
	file_synq_dataproducts_v1_dataproduct_proto_init()
	file_synq_dataproducts_v1_dataproduct_definition_proto_init()
	file_synq_dataproducts_v1_dataproducts_service_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_synq_dataproducts_v1_dataproducts_service_proto_rawDesc), len(file_synq_dataproducts_v1_dataproducts_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_synq_dataproducts_v1_dataproducts_service_proto_goTypes,
		DependencyIndexes: file_synq_dataproducts_v1_dataproducts_service_proto_depIdxs,
		MessageInfos:      file_synq_dataproducts_v1_dataproducts_service_proto_msgTypes,
	}.Build()
	File_synq_dataproducts_v1_dataproducts_service_proto = out.File
	file_synq_dataproducts_v1_dataproducts_service_proto_goTypes = nil
	file_synq_dataproducts_v1_dataproducts_service_proto_depIdxs = nil
}
