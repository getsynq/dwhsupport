// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: synq/platforms/v1/data_platforms.proto

package v1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// DataPlatformIdentifier is a unique reference to a data platform integrated with Synq.
type DataPlatformIdentifier struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Id:
	//
	//	*DataPlatformIdentifier_Unknown
	//	*DataPlatformIdentifier_Bigquery
	//	*DataPlatformIdentifier_Clickhouse
	//	*DataPlatformIdentifier_Snowflake
	//	*DataPlatformIdentifier_Redshift
	//	*DataPlatformIdentifier_Postgres
	//	*DataPlatformIdentifier_Mysql
	//	*DataPlatformIdentifier_Databricks
	Id            isDataPlatformIdentifier_Id `protobuf_oneof:"id"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DataPlatformIdentifier) Reset() {
	*x = DataPlatformIdentifier{}
	mi := &file_synq_platforms_v1_data_platforms_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataPlatformIdentifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataPlatformIdentifier) ProtoMessage() {}

func (x *DataPlatformIdentifier) ProtoReflect() protoreflect.Message {
	mi := &file_synq_platforms_v1_data_platforms_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataPlatformIdentifier.ProtoReflect.Descriptor instead.
func (*DataPlatformIdentifier) Descriptor() ([]byte, []int) {
	return file_synq_platforms_v1_data_platforms_proto_rawDescGZIP(), []int{0}
}

func (x *DataPlatformIdentifier) GetId() isDataPlatformIdentifier_Id {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *DataPlatformIdentifier) GetUnknown() *UnknownDataPlatform {
	if x != nil {
		if x, ok := x.Id.(*DataPlatformIdentifier_Unknown); ok {
			return x.Unknown
		}
	}
	return nil
}

func (x *DataPlatformIdentifier) GetBigquery() *BigqueryIdentifier {
	if x != nil {
		if x, ok := x.Id.(*DataPlatformIdentifier_Bigquery); ok {
			return x.Bigquery
		}
	}
	return nil
}

func (x *DataPlatformIdentifier) GetClickhouse() *ClickhouseIdentifier {
	if x != nil {
		if x, ok := x.Id.(*DataPlatformIdentifier_Clickhouse); ok {
			return x.Clickhouse
		}
	}
	return nil
}

func (x *DataPlatformIdentifier) GetSnowflake() *SnowflakeIdentifier {
	if x != nil {
		if x, ok := x.Id.(*DataPlatformIdentifier_Snowflake); ok {
			return x.Snowflake
		}
	}
	return nil
}

func (x *DataPlatformIdentifier) GetRedshift() *RedshiftIdentifier {
	if x != nil {
		if x, ok := x.Id.(*DataPlatformIdentifier_Redshift); ok {
			return x.Redshift
		}
	}
	return nil
}

func (x *DataPlatformIdentifier) GetPostgres() *PostgresIdentifier {
	if x != nil {
		if x, ok := x.Id.(*DataPlatformIdentifier_Postgres); ok {
			return x.Postgres
		}
	}
	return nil
}

func (x *DataPlatformIdentifier) GetMysql() *MysqlIdentifier {
	if x != nil {
		if x, ok := x.Id.(*DataPlatformIdentifier_Mysql); ok {
			return x.Mysql
		}
	}
	return nil
}

func (x *DataPlatformIdentifier) GetDatabricks() *DatabricksIdentifier {
	if x != nil {
		if x, ok := x.Id.(*DataPlatformIdentifier_Databricks); ok {
			return x.Databricks
		}
	}
	return nil
}

type isDataPlatformIdentifier_Id interface {
	isDataPlatformIdentifier_Id()
}

type DataPlatformIdentifier_Unknown struct {
	Unknown *UnknownDataPlatform `protobuf:"bytes,1,opt,name=unknown,proto3,oneof"`
}

type DataPlatformIdentifier_Bigquery struct {
	Bigquery *BigqueryIdentifier `protobuf:"bytes,2,opt,name=bigquery,proto3,oneof"`
}

type DataPlatformIdentifier_Clickhouse struct {
	Clickhouse *ClickhouseIdentifier `protobuf:"bytes,3,opt,name=clickhouse,proto3,oneof"`
}

type DataPlatformIdentifier_Snowflake struct {
	Snowflake *SnowflakeIdentifier `protobuf:"bytes,4,opt,name=snowflake,proto3,oneof"`
}

type DataPlatformIdentifier_Redshift struct {
	Redshift *RedshiftIdentifier `protobuf:"bytes,5,opt,name=redshift,proto3,oneof"`
}

type DataPlatformIdentifier_Postgres struct {
	Postgres *PostgresIdentifier `protobuf:"bytes,6,opt,name=postgres,proto3,oneof"`
}

type DataPlatformIdentifier_Mysql struct {
	Mysql *MysqlIdentifier `protobuf:"bytes,7,opt,name=mysql,proto3,oneof"`
}

type DataPlatformIdentifier_Databricks struct {
	Databricks *DatabricksIdentifier `protobuf:"bytes,8,opt,name=databricks,proto3,oneof"`
}

func (*DataPlatformIdentifier_Unknown) isDataPlatformIdentifier_Id() {}

func (*DataPlatformIdentifier_Bigquery) isDataPlatformIdentifier_Id() {}

func (*DataPlatformIdentifier_Clickhouse) isDataPlatformIdentifier_Id() {}

func (*DataPlatformIdentifier_Snowflake) isDataPlatformIdentifier_Id() {}

func (*DataPlatformIdentifier_Redshift) isDataPlatformIdentifier_Id() {}

func (*DataPlatformIdentifier_Postgres) isDataPlatformIdentifier_Id() {}

func (*DataPlatformIdentifier_Mysql) isDataPlatformIdentifier_Id() {}

func (*DataPlatformIdentifier_Databricks) isDataPlatformIdentifier_Id() {}

type UnknownDataPlatform struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnknownDataPlatform) Reset() {
	*x = UnknownDataPlatform{}
	mi := &file_synq_platforms_v1_data_platforms_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnknownDataPlatform) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnknownDataPlatform) ProtoMessage() {}

func (x *UnknownDataPlatform) ProtoReflect() protoreflect.Message {
	mi := &file_synq_platforms_v1_data_platforms_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnknownDataPlatform.ProtoReflect.Descriptor instead.
func (*UnknownDataPlatform) Descriptor() ([]byte, []int) {
	return file_synq_platforms_v1_data_platforms_proto_rawDescGZIP(), []int{1}
}

type BigqueryIdentifier struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// BigQuery project
	Project       string `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BigqueryIdentifier) Reset() {
	*x = BigqueryIdentifier{}
	mi := &file_synq_platforms_v1_data_platforms_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BigqueryIdentifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BigqueryIdentifier) ProtoMessage() {}

func (x *BigqueryIdentifier) ProtoReflect() protoreflect.Message {
	mi := &file_synq_platforms_v1_data_platforms_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BigqueryIdentifier.ProtoReflect.Descriptor instead.
func (*BigqueryIdentifier) Descriptor() ([]byte, []int) {
	return file_synq_platforms_v1_data_platforms_proto_rawDescGZIP(), []int{2}
}

func (x *BigqueryIdentifier) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

type ClickhouseIdentifier struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Clickhouse host inclusive of port
	Host string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	// Clickhouse database
	Schema        string `protobuf:"bytes,2,opt,name=schema,proto3" json:"schema,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClickhouseIdentifier) Reset() {
	*x = ClickhouseIdentifier{}
	mi := &file_synq_platforms_v1_data_platforms_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClickhouseIdentifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClickhouseIdentifier) ProtoMessage() {}

func (x *ClickhouseIdentifier) ProtoReflect() protoreflect.Message {
	mi := &file_synq_platforms_v1_data_platforms_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClickhouseIdentifier.ProtoReflect.Descriptor instead.
func (*ClickhouseIdentifier) Descriptor() ([]byte, []int) {
	return file_synq_platforms_v1_data_platforms_proto_rawDescGZIP(), []int{3}
}

func (x *ClickhouseIdentifier) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *ClickhouseIdentifier) GetSchema() string {
	if x != nil {
		return x.Schema
	}
	return ""
}

type SnowflakeIdentifier struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Snowflake account
	Account string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	// Snowflake database
	Database      string `protobuf:"bytes,2,opt,name=database,proto3" json:"database,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SnowflakeIdentifier) Reset() {
	*x = SnowflakeIdentifier{}
	mi := &file_synq_platforms_v1_data_platforms_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SnowflakeIdentifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnowflakeIdentifier) ProtoMessage() {}

func (x *SnowflakeIdentifier) ProtoReflect() protoreflect.Message {
	mi := &file_synq_platforms_v1_data_platforms_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnowflakeIdentifier.ProtoReflect.Descriptor instead.
func (*SnowflakeIdentifier) Descriptor() ([]byte, []int) {
	return file_synq_platforms_v1_data_platforms_proto_rawDescGZIP(), []int{4}
}

func (x *SnowflakeIdentifier) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *SnowflakeIdentifier) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

type RedshiftIdentifier struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Redshift cluster
	Cluster string `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	// Redshift database
	Database      string `protobuf:"bytes,2,opt,name=database,proto3" json:"database,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RedshiftIdentifier) Reset() {
	*x = RedshiftIdentifier{}
	mi := &file_synq_platforms_v1_data_platforms_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RedshiftIdentifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedshiftIdentifier) ProtoMessage() {}

func (x *RedshiftIdentifier) ProtoReflect() protoreflect.Message {
	mi := &file_synq_platforms_v1_data_platforms_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedshiftIdentifier.ProtoReflect.Descriptor instead.
func (*RedshiftIdentifier) Descriptor() ([]byte, []int) {
	return file_synq_platforms_v1_data_platforms_proto_rawDescGZIP(), []int{5}
}

func (x *RedshiftIdentifier) GetCluster() string {
	if x != nil {
		return x.Cluster
	}
	return ""
}

func (x *RedshiftIdentifier) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

type PostgresIdentifier struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Postgres host inclusive of port
	Host string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	// Postgres database
	Database      string `protobuf:"bytes,2,opt,name=database,proto3" json:"database,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PostgresIdentifier) Reset() {
	*x = PostgresIdentifier{}
	mi := &file_synq_platforms_v1_data_platforms_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PostgresIdentifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostgresIdentifier) ProtoMessage() {}

func (x *PostgresIdentifier) ProtoReflect() protoreflect.Message {
	mi := &file_synq_platforms_v1_data_platforms_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostgresIdentifier.ProtoReflect.Descriptor instead.
func (*PostgresIdentifier) Descriptor() ([]byte, []int) {
	return file_synq_platforms_v1_data_platforms_proto_rawDescGZIP(), []int{6}
}

func (x *PostgresIdentifier) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *PostgresIdentifier) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

type MysqlIdentifier struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Mysql host inclusive of port
	Host          string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MysqlIdentifier) Reset() {
	*x = MysqlIdentifier{}
	mi := &file_synq_platforms_v1_data_platforms_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MysqlIdentifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MysqlIdentifier) ProtoMessage() {}

func (x *MysqlIdentifier) ProtoReflect() protoreflect.Message {
	mi := &file_synq_platforms_v1_data_platforms_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MysqlIdentifier.ProtoReflect.Descriptor instead.
func (*MysqlIdentifier) Descriptor() ([]byte, []int) {
	return file_synq_platforms_v1_data_platforms_proto_rawDescGZIP(), []int{7}
}

func (x *MysqlIdentifier) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

type DatabricksIdentifier struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// URl of the databricks workspace
	Workspace     string `protobuf:"bytes,1,opt,name=workspace,proto3" json:"workspace,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DatabricksIdentifier) Reset() {
	*x = DatabricksIdentifier{}
	mi := &file_synq_platforms_v1_data_platforms_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DatabricksIdentifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabricksIdentifier) ProtoMessage() {}

func (x *DatabricksIdentifier) ProtoReflect() protoreflect.Message {
	mi := &file_synq_platforms_v1_data_platforms_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabricksIdentifier.ProtoReflect.Descriptor instead.
func (*DatabricksIdentifier) Descriptor() ([]byte, []int) {
	return file_synq_platforms_v1_data_platforms_proto_rawDescGZIP(), []int{8}
}

func (x *DatabricksIdentifier) GetWorkspace() string {
	if x != nil {
		return x.Workspace
	}
	return ""
}

var File_synq_platforms_v1_data_platforms_proto protoreflect.FileDescriptor

var file_synq_platforms_v1_data_platforms_proto_rawDesc = string([]byte{
	0x0a, 0x26, 0x73, 0x79, 0x6e, 0x71, 0x2f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x73,
	0x2f, 0x76, 0x31, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x73, 0x79, 0x6e, 0x71, 0x2e, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x62, 0x75, 0x66,
	0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd2, 0x04, 0x0a, 0x16, 0x44, 0x61, 0x74,
	0x61, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x12, 0x42, 0x0a, 0x07, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x73, 0x79, 0x6e, 0x71, 0x2e, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e,
	0x44, 0x61, 0x74, 0x61, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x48, 0x00, 0x52, 0x07,
	0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x12, 0x43, 0x0a, 0x08, 0x62, 0x69, 0x67, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x79, 0x6e, 0x71,
	0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69,
	0x67, 0x71, 0x75, 0x65, 0x72, 0x79, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x48, 0x00, 0x52, 0x08, 0x62, 0x69, 0x67, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x49, 0x0a, 0x0a,
	0x63, 0x6c, 0x69, 0x63, 0x6b, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x73, 0x79, 0x6e, 0x71, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x6c, 0x69,
	0x63, 0x6b, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x09, 0x73, 0x6e, 0x6f, 0x77, 0x66,
	0x6c, 0x61, 0x6b, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x73, 0x79, 0x6e,
	0x71, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x6e, 0x6f, 0x77, 0x66, 0x6c, 0x61, 0x6b, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x48, 0x00, 0x52, 0x09, 0x73, 0x6e, 0x6f, 0x77, 0x66, 0x6c, 0x61, 0x6b, 0x65, 0x12,
	0x43, 0x0a, 0x08, 0x72, 0x65, 0x64, 0x73, 0x68, 0x69, 0x66, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x73, 0x79, 0x6e, 0x71, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x64, 0x73, 0x68, 0x69, 0x66, 0x74, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x48, 0x00, 0x52, 0x08, 0x72, 0x65, 0x64, 0x73,
	0x68, 0x69, 0x66, 0x74, 0x12, 0x43, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x79, 0x6e, 0x71, 0x2e, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x67,
	0x72, 0x65, 0x73, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x48, 0x00, 0x52,
	0x08, 0x70, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x12, 0x3a, 0x0a, 0x05, 0x6d, 0x79, 0x73,
	0x71, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x79, 0x6e, 0x71, 0x2e,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x79, 0x73,
	0x71, 0x6c, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x48, 0x00, 0x52, 0x05,
	0x6d, 0x79, 0x73, 0x71, 0x6c, 0x12, 0x49, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x62, 0x72, 0x69,
	0x63, 0x6b, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x73, 0x79, 0x6e, 0x71,
	0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x62, 0x72, 0x69, 0x63, 0x6b, 0x73, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x48, 0x00, 0x52, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x62, 0x72, 0x69, 0x63, 0x6b, 0x73,
	0x42, 0x0b, 0x0a, 0x02, 0x69, 0x64, 0x12, 0x05, 0xba, 0x48, 0x02, 0x08, 0x01, 0x22, 0x15, 0x0a,
	0x13, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x22, 0x36, 0x0a, 0x12, 0x42, 0x69, 0x67, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x07, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xba, 0x48, 0x03,
	0xc8, 0x01, 0x01, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x52, 0x0a, 0x14,
	0x43, 0x6c, 0x69, 0x63, 0x6b, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74,
	0x12, 0x1e, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x22, 0x5b, 0x0a, 0x13, 0x53, 0x6e, 0x6f, 0x77, 0x66, 0x6c, 0x61, 0x6b, 0x65, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01,
	0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x08, 0x64, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xba, 0x48, 0x03,
	0xc8, 0x01, 0x01, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x22, 0x5a, 0x0a,
	0x12, 0x52, 0x65, 0x64, 0x73, 0x68, 0x69, 0x66, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x07, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52,
	0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x22, 0x54, 0x0a, 0x12, 0x50, 0x6f, 0x73,
	0x74, 0x67, 0x72, 0x65, 0x73, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12,
	0x1a, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xba,
	0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x08, 0x64,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xba,
	0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x22,
	0x2d, 0x0a, 0x0f, 0x4d, 0x79, 0x73, 0x71, 0x6c, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x12, 0x1a, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x22, 0x3c,
	0x0a, 0x14, 0x44, 0x61, 0x74, 0x61, 0x62, 0x72, 0x69, 0x63, 0x6b, 0x73, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01,
	0x01, 0x52, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x42, 0xb6, 0x01, 0x0a,
	0x15, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x79, 0x6e, 0x71, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x42, 0x12, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x23, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x65, 0x74, 0x73, 0x79, 0x6e, 0x71,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x73, 0x2f, 0x76,
	0x31, 0xa2, 0x02, 0x03, 0x53, 0x50, 0x58, 0xaa, 0x02, 0x11, 0x53, 0x79, 0x6e, 0x71, 0x2e, 0x50,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x73, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x11, 0x53, 0x79,
	0x6e, 0x71, 0x5c, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x73, 0x5c, 0x56, 0x31, 0xe2,
	0x02, 0x1d, 0x53, 0x79, 0x6e, 0x71, 0x5c, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x73,
	0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea,
	0x02, 0x13, 0x53, 0x79, 0x6e, 0x71, 0x3a, 0x3a, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x73, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_synq_platforms_v1_data_platforms_proto_rawDescOnce sync.Once
	file_synq_platforms_v1_data_platforms_proto_rawDescData []byte
)

func file_synq_platforms_v1_data_platforms_proto_rawDescGZIP() []byte {
	file_synq_platforms_v1_data_platforms_proto_rawDescOnce.Do(func() {
		file_synq_platforms_v1_data_platforms_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_synq_platforms_v1_data_platforms_proto_rawDesc), len(file_synq_platforms_v1_data_platforms_proto_rawDesc)))
	})
	return file_synq_platforms_v1_data_platforms_proto_rawDescData
}

var file_synq_platforms_v1_data_platforms_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_synq_platforms_v1_data_platforms_proto_goTypes = []any{
	(*DataPlatformIdentifier)(nil), // 0: synq.platforms.v1.DataPlatformIdentifier
	(*UnknownDataPlatform)(nil),    // 1: synq.platforms.v1.UnknownDataPlatform
	(*BigqueryIdentifier)(nil),     // 2: synq.platforms.v1.BigqueryIdentifier
	(*ClickhouseIdentifier)(nil),   // 3: synq.platforms.v1.ClickhouseIdentifier
	(*SnowflakeIdentifier)(nil),    // 4: synq.platforms.v1.SnowflakeIdentifier
	(*RedshiftIdentifier)(nil),     // 5: synq.platforms.v1.RedshiftIdentifier
	(*PostgresIdentifier)(nil),     // 6: synq.platforms.v1.PostgresIdentifier
	(*MysqlIdentifier)(nil),        // 7: synq.platforms.v1.MysqlIdentifier
	(*DatabricksIdentifier)(nil),   // 8: synq.platforms.v1.DatabricksIdentifier
}
var file_synq_platforms_v1_data_platforms_proto_depIdxs = []int32{
	1, // 0: synq.platforms.v1.DataPlatformIdentifier.unknown:type_name -> synq.platforms.v1.UnknownDataPlatform
	2, // 1: synq.platforms.v1.DataPlatformIdentifier.bigquery:type_name -> synq.platforms.v1.BigqueryIdentifier
	3, // 2: synq.platforms.v1.DataPlatformIdentifier.clickhouse:type_name -> synq.platforms.v1.ClickhouseIdentifier
	4, // 3: synq.platforms.v1.DataPlatformIdentifier.snowflake:type_name -> synq.platforms.v1.SnowflakeIdentifier
	5, // 4: synq.platforms.v1.DataPlatformIdentifier.redshift:type_name -> synq.platforms.v1.RedshiftIdentifier
	6, // 5: synq.platforms.v1.DataPlatformIdentifier.postgres:type_name -> synq.platforms.v1.PostgresIdentifier
	7, // 6: synq.platforms.v1.DataPlatformIdentifier.mysql:type_name -> synq.platforms.v1.MysqlIdentifier
	8, // 7: synq.platforms.v1.DataPlatformIdentifier.databricks:type_name -> synq.platforms.v1.DatabricksIdentifier
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_synq_platforms_v1_data_platforms_proto_init() }
func file_synq_platforms_v1_data_platforms_proto_init() {
	if File_synq_platforms_v1_data_platforms_proto != nil {
		return
	}
	file_synq_platforms_v1_data_platforms_proto_msgTypes[0].OneofWrappers = []any{
		(*DataPlatformIdentifier_Unknown)(nil),
		(*DataPlatformIdentifier_Bigquery)(nil),
		(*DataPlatformIdentifier_Clickhouse)(nil),
		(*DataPlatformIdentifier_Snowflake)(nil),
		(*DataPlatformIdentifier_Redshift)(nil),
		(*DataPlatformIdentifier_Postgres)(nil),
		(*DataPlatformIdentifier_Mysql)(nil),
		(*DataPlatformIdentifier_Databricks)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_synq_platforms_v1_data_platforms_proto_rawDesc), len(file_synq_platforms_v1_data_platforms_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_synq_platforms_v1_data_platforms_proto_goTypes,
		DependencyIndexes: file_synq_platforms_v1_data_platforms_proto_depIdxs,
		MessageInfos:      file_synq_platforms_v1_data_platforms_proto_msgTypes,
	}.Build()
	File_synq_platforms_v1_data_platforms_proto = out.File
	file_synq_platforms_v1_data_platforms_proto_goTypes = nil
	file_synq_platforms_v1_data_platforms_proto_depIdxs = nil
}
