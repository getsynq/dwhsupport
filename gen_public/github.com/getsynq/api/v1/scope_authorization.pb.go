// Generated by dev-tools; DO NOT EDIT.
// Modify or add scopes in proto/core/permissions/v1/scopes.proto
// Modify template at dev-tools/contracts/templates/scope_authorization.proto.tpl

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        (unknown)
// source: synq/v1/scope_authorization.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Scope int32

const (
	Scope_SCOPE_UNSPECIFIED              Scope = 0
	Scope_SCOPE_ISSUES_EDIT              Scope = 10
	Scope_SCOPE_ISSUES_READ              Scope = 11
	Scope_SCOPE_ENTITY_EDIT              Scope = 30
	Scope_SCOPE_ENTITY_READ              Scope = 31
	Scope_SCOPE_ENTITY_TYPE_EDIT         Scope = 32
	Scope_SCOPE_ENTITY_TYPE_READ         Scope = 33
	Scope_SCOPE_LINEAGE_EDIT             Scope = 34
	Scope_SCOPE_LINEAGE_READ             Scope = 35
	Scope_SCOPE_STATUS_READ              Scope = 40
	Scope_SCOPE_INGEST_DBT               Scope = 41
	Scope_SCOPE_INGEST_SQLMESH           Scope = 42
	Scope_SCOPE_DATACHECKS_SQLTESTS_EDIT Scope = 50
	Scope_SCOPE_DATACHECKS_SQLTESTS_READ Scope = 51
	Scope_SCOPE_EXECUTION_EDIT           Scope = 60
	Scope_SCOPE_EXECUTION_LOG_EDIT       Scope = 61
	Scope_SCOPE_EXECUTION_READ           Scope = 62
	Scope_SCOPE_HOOK                     Scope = 70
	Scope_SCOPE_USER_READ                Scope = 91
	Scope_SCOPE_USER_ASSIGN              Scope = 92
	Scope_SCOPE_DATAPRODUCT_EDIT         Scope = 150
	Scope_SCOPE_DATAPRODUCT_READ         Scope = 151
	Scope_SCOPE_DOMAIN_EDIT              Scope = 160
	Scope_SCOPE_DOMAIN_READ              Scope = 161
)

// Enum value maps for Scope.
var (
	Scope_name = map[int32]string{
		0:   "SCOPE_UNSPECIFIED",
		10:  "SCOPE_ISSUES_EDIT",
		11:  "SCOPE_ISSUES_READ",
		30:  "SCOPE_ENTITY_EDIT",
		31:  "SCOPE_ENTITY_READ",
		32:  "SCOPE_ENTITY_TYPE_EDIT",
		33:  "SCOPE_ENTITY_TYPE_READ",
		34:  "SCOPE_LINEAGE_EDIT",
		35:  "SCOPE_LINEAGE_READ",
		40:  "SCOPE_STATUS_READ",
		41:  "SCOPE_INGEST_DBT",
		42:  "SCOPE_INGEST_SQLMESH",
		50:  "SCOPE_DATACHECKS_SQLTESTS_EDIT",
		51:  "SCOPE_DATACHECKS_SQLTESTS_READ",
		60:  "SCOPE_EXECUTION_EDIT",
		61:  "SCOPE_EXECUTION_LOG_EDIT",
		62:  "SCOPE_EXECUTION_READ",
		70:  "SCOPE_HOOK",
		91:  "SCOPE_USER_READ",
		92:  "SCOPE_USER_ASSIGN",
		150: "SCOPE_DATAPRODUCT_EDIT",
		151: "SCOPE_DATAPRODUCT_READ",
		160: "SCOPE_DOMAIN_EDIT",
		161: "SCOPE_DOMAIN_READ",
	}
	Scope_value = map[string]int32{
		"SCOPE_UNSPECIFIED":              0,
		"SCOPE_ISSUES_EDIT":              10,
		"SCOPE_ISSUES_READ":              11,
		"SCOPE_ENTITY_EDIT":              30,
		"SCOPE_ENTITY_READ":              31,
		"SCOPE_ENTITY_TYPE_EDIT":         32,
		"SCOPE_ENTITY_TYPE_READ":         33,
		"SCOPE_LINEAGE_EDIT":             34,
		"SCOPE_LINEAGE_READ":             35,
		"SCOPE_STATUS_READ":              40,
		"SCOPE_INGEST_DBT":               41,
		"SCOPE_INGEST_SQLMESH":           42,
		"SCOPE_DATACHECKS_SQLTESTS_EDIT": 50,
		"SCOPE_DATACHECKS_SQLTESTS_READ": 51,
		"SCOPE_EXECUTION_EDIT":           60,
		"SCOPE_EXECUTION_LOG_EDIT":       61,
		"SCOPE_EXECUTION_READ":           62,
		"SCOPE_HOOK":                     70,
		"SCOPE_USER_READ":                91,
		"SCOPE_USER_ASSIGN":              92,
		"SCOPE_DATAPRODUCT_EDIT":         150,
		"SCOPE_DATAPRODUCT_READ":         151,
		"SCOPE_DOMAIN_EDIT":              160,
		"SCOPE_DOMAIN_READ":              161,
	}
)

func (x Scope) Enum() *Scope {
	p := new(Scope)
	*p = x
	return p
}

func (x Scope) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Scope) Descriptor() protoreflect.EnumDescriptor {
	return file_synq_v1_scope_authorization_proto_enumTypes[0].Descriptor()
}

func (Scope) Type() protoreflect.EnumType {
	return &file_synq_v1_scope_authorization_proto_enumTypes[0]
}

func (x Scope) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Scope.Descriptor instead.
func (Scope) EnumDescriptor() ([]byte, []int) {
	return file_synq_v1_scope_authorization_proto_rawDescGZIP(), []int{0}
}

type ScopeAuthorization struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Scopes        []Scope                `protobuf:"varint,1,rep,packed,name=scopes,proto3,enum=synq.v1.Scope" json:"scopes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScopeAuthorization) Reset() {
	*x = ScopeAuthorization{}
	mi := &file_synq_v1_scope_authorization_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScopeAuthorization) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScopeAuthorization) ProtoMessage() {}

func (x *ScopeAuthorization) ProtoReflect() protoreflect.Message {
	mi := &file_synq_v1_scope_authorization_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScopeAuthorization.ProtoReflect.Descriptor instead.
func (*ScopeAuthorization) Descriptor() ([]byte, []int) {
	return file_synq_v1_scope_authorization_proto_rawDescGZIP(), []int{0}
}

func (x *ScopeAuthorization) GetScopes() []Scope {
	if x != nil {
		return x.Scopes
	}
	return nil
}

var file_synq_v1_scope_authorization_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.MethodOptions)(nil),
		ExtensionType: (*ScopeAuthorization)(nil),
		Field:         50010,
		Name:          "synq.v1.scope_authorization",
		Tag:           "bytes,50010,opt,name=scope_authorization",
		Filename:      "synq/v1/scope_authorization.proto",
	},
}

// Extension fields to descriptorpb.MethodOptions.
var (
	// optional synq.v1.ScopeAuthorization scope_authorization = 50010;
	E_ScopeAuthorization = &file_synq_v1_scope_authorization_proto_extTypes[0]
)

var File_synq_v1_scope_authorization_proto protoreflect.FileDescriptor

var file_synq_v1_scope_authorization_proto_rawDesc = string([]byte{
	0x0a, 0x21, 0x73, 0x79, 0x6e, 0x71, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x5f,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x07, 0x73, 0x79, 0x6e, 0x71, 0x2e, 0x76, 0x31, 0x1a, 0x20, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3c,
	0x0a, 0x12, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x06, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x73, 0x79, 0x6e, 0x71, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x63, 0x6f, 0x70, 0x65, 0x52, 0x06, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x2a, 0xe9, 0x04, 0x0a,
	0x05, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x43, 0x4f, 0x50, 0x45, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x15, 0x0a,
	0x11, 0x53, 0x43, 0x4f, 0x50, 0x45, 0x5f, 0x49, 0x53, 0x53, 0x55, 0x45, 0x53, 0x5f, 0x45, 0x44,
	0x49, 0x54, 0x10, 0x0a, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x43, 0x4f, 0x50, 0x45, 0x5f, 0x49, 0x53,
	0x53, 0x55, 0x45, 0x53, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x10, 0x0b, 0x12, 0x15, 0x0a, 0x11, 0x53,
	0x43, 0x4f, 0x50, 0x45, 0x5f, 0x45, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f, 0x45, 0x44, 0x49, 0x54,
	0x10, 0x1e, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x43, 0x4f, 0x50, 0x45, 0x5f, 0x45, 0x4e, 0x54, 0x49,
	0x54, 0x59, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x10, 0x1f, 0x12, 0x1a, 0x0a, 0x16, 0x53, 0x43, 0x4f,
	0x50, 0x45, 0x5f, 0x45, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45,
	0x44, 0x49, 0x54, 0x10, 0x20, 0x12, 0x1a, 0x0a, 0x16, 0x53, 0x43, 0x4f, 0x50, 0x45, 0x5f, 0x45,
	0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x10,
	0x21, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x43, 0x4f, 0x50, 0x45, 0x5f, 0x4c, 0x49, 0x4e, 0x45, 0x41,
	0x47, 0x45, 0x5f, 0x45, 0x44, 0x49, 0x54, 0x10, 0x22, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x43, 0x4f,
	0x50, 0x45, 0x5f, 0x4c, 0x49, 0x4e, 0x45, 0x41, 0x47, 0x45, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x10,
	0x23, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x43, 0x4f, 0x50, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x10, 0x28, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x43, 0x4f, 0x50,
	0x45, 0x5f, 0x49, 0x4e, 0x47, 0x45, 0x53, 0x54, 0x5f, 0x44, 0x42, 0x54, 0x10, 0x29, 0x12, 0x18,
	0x0a, 0x14, 0x53, 0x43, 0x4f, 0x50, 0x45, 0x5f, 0x49, 0x4e, 0x47, 0x45, 0x53, 0x54, 0x5f, 0x53,
	0x51, 0x4c, 0x4d, 0x45, 0x53, 0x48, 0x10, 0x2a, 0x12, 0x22, 0x0a, 0x1e, 0x53, 0x43, 0x4f, 0x50,
	0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x43, 0x48, 0x45, 0x43, 0x4b, 0x53, 0x5f, 0x53, 0x51, 0x4c,
	0x54, 0x45, 0x53, 0x54, 0x53, 0x5f, 0x45, 0x44, 0x49, 0x54, 0x10, 0x32, 0x12, 0x22, 0x0a, 0x1e,
	0x53, 0x43, 0x4f, 0x50, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x43, 0x48, 0x45, 0x43, 0x4b, 0x53,
	0x5f, 0x53, 0x51, 0x4c, 0x54, 0x45, 0x53, 0x54, 0x53, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x10, 0x33,
	0x12, 0x18, 0x0a, 0x14, 0x53, 0x43, 0x4f, 0x50, 0x45, 0x5f, 0x45, 0x58, 0x45, 0x43, 0x55, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x45, 0x44, 0x49, 0x54, 0x10, 0x3c, 0x12, 0x1c, 0x0a, 0x18, 0x53, 0x43,
	0x4f, 0x50, 0x45, 0x5f, 0x45, 0x58, 0x45, 0x43, 0x55, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4c, 0x4f,
	0x47, 0x5f, 0x45, 0x44, 0x49, 0x54, 0x10, 0x3d, 0x12, 0x18, 0x0a, 0x14, 0x53, 0x43, 0x4f, 0x50,
	0x45, 0x5f, 0x45, 0x58, 0x45, 0x43, 0x55, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x41, 0x44,
	0x10, 0x3e, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x43, 0x4f, 0x50, 0x45, 0x5f, 0x48, 0x4f, 0x4f, 0x4b,
	0x10, 0x46, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x43, 0x4f, 0x50, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52,
	0x5f, 0x52, 0x45, 0x41, 0x44, 0x10, 0x5b, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x43, 0x4f, 0x50, 0x45,
	0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x41, 0x53, 0x53, 0x49, 0x47, 0x4e, 0x10, 0x5c, 0x12, 0x1b,
	0x0a, 0x16, 0x53, 0x43, 0x4f, 0x50, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x50, 0x52, 0x4f, 0x44,
	0x55, 0x43, 0x54, 0x5f, 0x45, 0x44, 0x49, 0x54, 0x10, 0x96, 0x01, 0x12, 0x1b, 0x0a, 0x16, 0x53,
	0x43, 0x4f, 0x50, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54,
	0x5f, 0x52, 0x45, 0x41, 0x44, 0x10, 0x97, 0x01, 0x12, 0x16, 0x0a, 0x11, 0x53, 0x43, 0x4f, 0x50,
	0x45, 0x5f, 0x44, 0x4f, 0x4d, 0x41, 0x49, 0x4e, 0x5f, 0x45, 0x44, 0x49, 0x54, 0x10, 0xa0, 0x01,
	0x12, 0x16, 0x0a, 0x11, 0x53, 0x43, 0x4f, 0x50, 0x45, 0x5f, 0x44, 0x4f, 0x4d, 0x41, 0x49, 0x4e,
	0x5f, 0x52, 0x45, 0x41, 0x44, 0x10, 0xa1, 0x01, 0x3a, 0x6e, 0x0a, 0x13, 0x73, 0x63, 0x6f, 0x70,
	0x65, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0xda, 0x86, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x79, 0x6e, 0x71, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x12, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x41, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x7e, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x2e,
	0x73, 0x79, 0x6e, 0x71, 0x2e, 0x76, 0x31, 0x42, 0x17, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x41, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x50, 0x01, 0x5a, 0x19, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67,
	0x65, 0x74, 0x73, 0x79, 0x6e, 0x71, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0xa2, 0x02, 0x03,
	0x53, 0x58, 0x58, 0xaa, 0x02, 0x07, 0x53, 0x79, 0x6e, 0x71, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x07,
	0x53, 0x79, 0x6e, 0x71, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x13, 0x53, 0x79, 0x6e, 0x71, 0x5c, 0x56,
	0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x08,
	0x53, 0x79, 0x6e, 0x71, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_synq_v1_scope_authorization_proto_rawDescOnce sync.Once
	file_synq_v1_scope_authorization_proto_rawDescData []byte
)

func file_synq_v1_scope_authorization_proto_rawDescGZIP() []byte {
	file_synq_v1_scope_authorization_proto_rawDescOnce.Do(func() {
		file_synq_v1_scope_authorization_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_synq_v1_scope_authorization_proto_rawDesc), len(file_synq_v1_scope_authorization_proto_rawDesc)))
	})
	return file_synq_v1_scope_authorization_proto_rawDescData
}

var file_synq_v1_scope_authorization_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_synq_v1_scope_authorization_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_synq_v1_scope_authorization_proto_goTypes = []any{
	(Scope)(0),                         // 0: synq.v1.Scope
	(*ScopeAuthorization)(nil),         // 1: synq.v1.ScopeAuthorization
	(*descriptorpb.MethodOptions)(nil), // 2: google.protobuf.MethodOptions
}
var file_synq_v1_scope_authorization_proto_depIdxs = []int32{
	0, // 0: synq.v1.ScopeAuthorization.scopes:type_name -> synq.v1.Scope
	2, // 1: synq.v1.scope_authorization:extendee -> google.protobuf.MethodOptions
	1, // 2: synq.v1.scope_authorization:type_name -> synq.v1.ScopeAuthorization
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	2, // [2:3] is the sub-list for extension type_name
	1, // [1:2] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_synq_v1_scope_authorization_proto_init() }
func file_synq_v1_scope_authorization_proto_init() {
	if File_synq_v1_scope_authorization_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_synq_v1_scope_authorization_proto_rawDesc), len(file_synq_v1_scope_authorization_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 1,
			NumServices:   0,
		},
		GoTypes:           file_synq_v1_scope_authorization_proto_goTypes,
		DependencyIndexes: file_synq_v1_scope_authorization_proto_depIdxs,
		EnumInfos:         file_synq_v1_scope_authorization_proto_enumTypes,
		MessageInfos:      file_synq_v1_scope_authorization_proto_msgTypes,
		ExtensionInfos:    file_synq_v1_scope_authorization_proto_extTypes,
	}.Build()
	File_synq_v1_scope_authorization_proto = out.File
	file_synq_v1_scope_authorization_proto_goTypes = nil
	file_synq_v1_scope_authorization_proto_depIdxs = nil
}
