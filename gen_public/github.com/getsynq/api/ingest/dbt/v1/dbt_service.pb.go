// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        (unknown)
// source: synq/ingest/dbt/v1/dbt_service.proto

package v1

import (
	v1 "github.com/getsynq/api/ingest/git/v1"
	_ "github.com/getsynq/api/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// https://docs.getdbt.com/reference/artifacts/dbt-artifacts
type DbtArtifact struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Artifact:
	//
	//	*DbtArtifact_ManifestJson
	//	*DbtArtifact_RunResultsJson
	//	*DbtArtifact_CatalogJson
	//	*DbtArtifact_SourcesJson
	//	*DbtArtifact_SemanticManifestJson
	Artifact      isDbtArtifact_Artifact `protobuf_oneof:"artifact"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DbtArtifact) Reset() {
	*x = DbtArtifact{}
	mi := &file_synq_ingest_dbt_v1_dbt_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DbtArtifact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DbtArtifact) ProtoMessage() {}

func (x *DbtArtifact) ProtoReflect() protoreflect.Message {
	mi := &file_synq_ingest_dbt_v1_dbt_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DbtArtifact.ProtoReflect.Descriptor instead.
func (*DbtArtifact) Descriptor() ([]byte, []int) {
	return file_synq_ingest_dbt_v1_dbt_service_proto_rawDescGZIP(), []int{0}
}

func (x *DbtArtifact) GetArtifact() isDbtArtifact_Artifact {
	if x != nil {
		return x.Artifact
	}
	return nil
}

func (x *DbtArtifact) GetManifestJson() []byte {
	if x != nil {
		if x, ok := x.Artifact.(*DbtArtifact_ManifestJson); ok {
			return x.ManifestJson
		}
	}
	return nil
}

func (x *DbtArtifact) GetRunResultsJson() []byte {
	if x != nil {
		if x, ok := x.Artifact.(*DbtArtifact_RunResultsJson); ok {
			return x.RunResultsJson
		}
	}
	return nil
}

func (x *DbtArtifact) GetCatalogJson() []byte {
	if x != nil {
		if x, ok := x.Artifact.(*DbtArtifact_CatalogJson); ok {
			return x.CatalogJson
		}
	}
	return nil
}

func (x *DbtArtifact) GetSourcesJson() []byte {
	if x != nil {
		if x, ok := x.Artifact.(*DbtArtifact_SourcesJson); ok {
			return x.SourcesJson
		}
	}
	return nil
}

func (x *DbtArtifact) GetSemanticManifestJson() []byte {
	if x != nil {
		if x, ok := x.Artifact.(*DbtArtifact_SemanticManifestJson); ok {
			return x.SemanticManifestJson
		}
	}
	return nil
}

type isDbtArtifact_Artifact interface {
	isDbtArtifact_Artifact()
}

type DbtArtifact_ManifestJson struct {
	ManifestJson []byte `protobuf:"bytes,1,opt,name=manifest_json,json=manifestJson,proto3,oneof"`
}

type DbtArtifact_RunResultsJson struct {
	RunResultsJson []byte `protobuf:"bytes,2,opt,name=run_results_json,json=runResultsJson,proto3,oneof"`
}

type DbtArtifact_CatalogJson struct {
	CatalogJson []byte `protobuf:"bytes,3,opt,name=catalog_json,json=catalogJson,proto3,oneof"`
}

type DbtArtifact_SourcesJson struct {
	SourcesJson []byte `protobuf:"bytes,4,opt,name=sources_json,json=sourcesJson,proto3,oneof"`
}

type DbtArtifact_SemanticManifestJson struct {
	SemanticManifestJson []byte `protobuf:"bytes,5,opt,name=semantic_manifest_json,json=semanticManifestJson,proto3,oneof"`
}

func (*DbtArtifact_ManifestJson) isDbtArtifact_Artifact() {}

func (*DbtArtifact_RunResultsJson) isDbtArtifact_Artifact() {}

func (*DbtArtifact_CatalogJson) isDbtArtifact_Artifact() {}

func (*DbtArtifact_SourcesJson) isDbtArtifact_Artifact() {}

func (*DbtArtifact_SemanticManifestJson) isDbtArtifact_Artifact() {}

type IngestInvocationRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Arguments passed to the dbt executable
	Args []string `protobuf:"bytes,1,rep,name=args,proto3" json:"args,omitempty"`
	// Exit code of the dbt command
	ExitCode int32 `protobuf:"varint,2,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`
	// Standard output log of the dbt command
	StdOut []byte `protobuf:"bytes,3,opt,name=std_out,json=stdOut,proto3" json:"std_out,omitempty"`
	// Standard error log of the dbt command
	StdErr []byte `protobuf:"bytes,4,opt,name=std_err,json=stdErr,proto3" json:"std_err,omitempty"`
	// Environment variables collected during execution
	EnvironmentVars map[string]string `protobuf:"bytes,5,rep,name=environment_vars,json=environmentVars,proto3" json:"environment_vars,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Artifacts generated by the dbt command
	Artifacts []*DbtArtifact `protobuf:"bytes,6,rep,name=artifacts,proto3" json:"artifacts,omitempty"`
	// Version of the uploader tool
	UploaderVersion string `protobuf:"bytes,7,opt,name=uploader_version,json=uploaderVersion,proto3" json:"uploader_version,omitempty"`
	// Build time of the uploader tool
	UploaderBuildTime string `protobuf:"bytes,8,opt,name=uploader_build_time,json=uploaderBuildTime,proto3" json:"uploader_build_time,omitempty"`
	// Git context of the project
	GitContext    *v1.GitContext `protobuf:"bytes,11,opt,name=git_context,json=gitContext,proto3" json:"git_context,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IngestInvocationRequest) Reset() {
	*x = IngestInvocationRequest{}
	mi := &file_synq_ingest_dbt_v1_dbt_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IngestInvocationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IngestInvocationRequest) ProtoMessage() {}

func (x *IngestInvocationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_synq_ingest_dbt_v1_dbt_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IngestInvocationRequest.ProtoReflect.Descriptor instead.
func (*IngestInvocationRequest) Descriptor() ([]byte, []int) {
	return file_synq_ingest_dbt_v1_dbt_service_proto_rawDescGZIP(), []int{1}
}

func (x *IngestInvocationRequest) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *IngestInvocationRequest) GetExitCode() int32 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

func (x *IngestInvocationRequest) GetStdOut() []byte {
	if x != nil {
		return x.StdOut
	}
	return nil
}

func (x *IngestInvocationRequest) GetStdErr() []byte {
	if x != nil {
		return x.StdErr
	}
	return nil
}

func (x *IngestInvocationRequest) GetEnvironmentVars() map[string]string {
	if x != nil {
		return x.EnvironmentVars
	}
	return nil
}

func (x *IngestInvocationRequest) GetArtifacts() []*DbtArtifact {
	if x != nil {
		return x.Artifacts
	}
	return nil
}

func (x *IngestInvocationRequest) GetUploaderVersion() string {
	if x != nil {
		return x.UploaderVersion
	}
	return ""
}

func (x *IngestInvocationRequest) GetUploaderBuildTime() string {
	if x != nil {
		return x.UploaderBuildTime
	}
	return ""
}

func (x *IngestInvocationRequest) GetGitContext() *v1.GitContext {
	if x != nil {
		return x.GitContext
	}
	return nil
}

type IngestInvocationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IngestInvocationResponse) Reset() {
	*x = IngestInvocationResponse{}
	mi := &file_synq_ingest_dbt_v1_dbt_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IngestInvocationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IngestInvocationResponse) ProtoMessage() {}

func (x *IngestInvocationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_synq_ingest_dbt_v1_dbt_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IngestInvocationResponse.ProtoReflect.Descriptor instead.
func (*IngestInvocationResponse) Descriptor() ([]byte, []int) {
	return file_synq_ingest_dbt_v1_dbt_service_proto_rawDescGZIP(), []int{2}
}

var File_synq_ingest_dbt_v1_dbt_service_proto protoreflect.FileDescriptor

var file_synq_ingest_dbt_v1_dbt_service_proto_rawDesc = string([]byte{
	0x0a, 0x24, 0x73, 0x79, 0x6e, 0x71, 0x2f, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x2f, 0x64, 0x62,
	0x74, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x62, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x73, 0x79, 0x6e, 0x71, 0x2e, 0x69, 0x6e, 0x67,
	0x65, 0x73, 0x74, 0x2e, 0x64, 0x62, 0x74, 0x2e, 0x76, 0x31, 0x1a, 0x24, 0x73, 0x79, 0x6e, 0x71,
	0x2f, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x2f, 0x67, 0x69, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x67,
	0x69, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x21, 0x73, 0x79, 0x6e, 0x71, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x5f,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xee, 0x01, 0x0a, 0x0b, 0x44, 0x62, 0x74, 0x41, 0x72, 0x74, 0x69, 0x66,
	0x61, 0x63, 0x74, 0x12, 0x25, 0x0a, 0x0d, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x5f,
	0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x0c, 0x6d, 0x61,
	0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x4a, 0x73, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x75,
	0x6e, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x0e, 0x72, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x4a, 0x73, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0c, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f,
	0x67, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x0b,
	0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x4a, 0x73, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0c, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0c, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x4a, 0x73, 0x6f, 0x6e,
	0x12, 0x36, 0x0a, 0x16, 0x73, 0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x5f, 0x6d, 0x61, 0x6e,
	0x69, 0x66, 0x65, 0x73, 0x74, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c,
	0x48, 0x00, 0x52, 0x14, 0x73, 0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x4d, 0x61, 0x6e, 0x69,
	0x66, 0x65, 0x73, 0x74, 0x4a, 0x73, 0x6f, 0x6e, 0x42, 0x0a, 0x0a, 0x08, 0x61, 0x72, 0x74, 0x69,
	0x66, 0x61, 0x63, 0x74, 0x22, 0x88, 0x04, 0x0a, 0x17, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x49,
	0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04,
	0x61, 0x72, 0x67, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x78, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x65, 0x78, 0x69, 0x74, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x74, 0x64, 0x5f, 0x6f, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x06, 0x73, 0x74, 0x64, 0x4f, 0x75, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x74,
	0x64, 0x5f, 0x65, 0x72, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x74, 0x64,
	0x45, 0x72, 0x72, 0x12, 0x6b, 0x0a, 0x10, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x76, 0x61, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x40, 0x2e,
	0x73, 0x79, 0x6e, 0x71, 0x2e, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x64, 0x62, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x0f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x72, 0x73,
	0x12, 0x3d, 0x0a, 0x09, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x79, 0x6e, 0x71, 0x2e, 0x69, 0x6e, 0x67, 0x65, 0x73,
	0x74, 0x2e, 0x64, 0x62, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x62, 0x74, 0x41, 0x72, 0x74, 0x69,
	0x66, 0x61, 0x63, 0x74, 0x52, 0x09, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x12,
	0x29, 0x0a, 0x10, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x75, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x13, 0x75, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65,
	0x72, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3f, 0x0a, 0x0b, 0x67, 0x69,
	0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x73, 0x79, 0x6e, 0x71, 0x2e, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x67, 0x69,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52,
	0x0a, 0x67, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x1a, 0x42, 0x0a, 0x14, 0x45,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x72, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x1a, 0x0a, 0x18, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x84, 0x01, 0x0a, 0x0a,
	0x44, 0x62, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x76, 0x0a, 0x10, 0x49, 0x6e,
	0x67, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b,
	0x2e, 0x73, 0x79, 0x6e, 0x71, 0x2e, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x64, 0x62, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x73, 0x79,
	0x6e, 0x71, 0x2e, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x64, 0x62, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x07, 0xd2, 0xb5, 0x18, 0x03, 0x0a,
	0x01, 0x29, 0x42, 0xba, 0x01, 0x0a, 0x16, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x79, 0x6e, 0x71, 0x2e,
	0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x64, 0x62, 0x74, 0x2e, 0x76, 0x31, 0x42, 0x0f, 0x44,
	0x62, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01,
	0x5a, 0x24, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x65, 0x74,
	0x73, 0x79, 0x6e, 0x71, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x2f,
	0x64, 0x62, 0x74, 0x2f, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x53, 0x49, 0x44, 0xaa, 0x02, 0x12, 0x53,
	0x79, 0x6e, 0x71, 0x2e, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x44, 0x62, 0x74, 0x2e, 0x56,
	0x31, 0xca, 0x02, 0x12, 0x53, 0x79, 0x6e, 0x71, 0x5c, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x5c,
	0x44, 0x62, 0x74, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1e, 0x53, 0x79, 0x6e, 0x71, 0x5c, 0x49, 0x6e,
	0x67, 0x65, 0x73, 0x74, 0x5c, 0x44, 0x62, 0x74, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x15, 0x53, 0x79, 0x6e, 0x71, 0x3a, 0x3a,
	0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x3a, 0x3a, 0x44, 0x62, 0x74, 0x3a, 0x3a, 0x56, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_synq_ingest_dbt_v1_dbt_service_proto_rawDescOnce sync.Once
	file_synq_ingest_dbt_v1_dbt_service_proto_rawDescData []byte
)

func file_synq_ingest_dbt_v1_dbt_service_proto_rawDescGZIP() []byte {
	file_synq_ingest_dbt_v1_dbt_service_proto_rawDescOnce.Do(func() {
		file_synq_ingest_dbt_v1_dbt_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_synq_ingest_dbt_v1_dbt_service_proto_rawDesc), len(file_synq_ingest_dbt_v1_dbt_service_proto_rawDesc)))
	})
	return file_synq_ingest_dbt_v1_dbt_service_proto_rawDescData
}

var file_synq_ingest_dbt_v1_dbt_service_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_synq_ingest_dbt_v1_dbt_service_proto_goTypes = []any{
	(*DbtArtifact)(nil),              // 0: synq.ingest.dbt.v1.DbtArtifact
	(*IngestInvocationRequest)(nil),  // 1: synq.ingest.dbt.v1.IngestInvocationRequest
	(*IngestInvocationResponse)(nil), // 2: synq.ingest.dbt.v1.IngestInvocationResponse
	nil,                              // 3: synq.ingest.dbt.v1.IngestInvocationRequest.EnvironmentVarsEntry
	(*v1.GitContext)(nil),            // 4: synq.ingest.git.v1.GitContext
}
var file_synq_ingest_dbt_v1_dbt_service_proto_depIdxs = []int32{
	3, // 0: synq.ingest.dbt.v1.IngestInvocationRequest.environment_vars:type_name -> synq.ingest.dbt.v1.IngestInvocationRequest.EnvironmentVarsEntry
	0, // 1: synq.ingest.dbt.v1.IngestInvocationRequest.artifacts:type_name -> synq.ingest.dbt.v1.DbtArtifact
	4, // 2: synq.ingest.dbt.v1.IngestInvocationRequest.git_context:type_name -> synq.ingest.git.v1.GitContext
	1, // 3: synq.ingest.dbt.v1.DbtService.IngestInvocation:input_type -> synq.ingest.dbt.v1.IngestInvocationRequest
	2, // 4: synq.ingest.dbt.v1.DbtService.IngestInvocation:output_type -> synq.ingest.dbt.v1.IngestInvocationResponse
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_synq_ingest_dbt_v1_dbt_service_proto_init() }
func file_synq_ingest_dbt_v1_dbt_service_proto_init() {
	if File_synq_ingest_dbt_v1_dbt_service_proto != nil {
		return
	}
	file_synq_ingest_dbt_v1_dbt_service_proto_msgTypes[0].OneofWrappers = []any{
		(*DbtArtifact_ManifestJson)(nil),
		(*DbtArtifact_RunResultsJson)(nil),
		(*DbtArtifact_CatalogJson)(nil),
		(*DbtArtifact_SourcesJson)(nil),
		(*DbtArtifact_SemanticManifestJson)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_synq_ingest_dbt_v1_dbt_service_proto_rawDesc), len(file_synq_ingest_dbt_v1_dbt_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_synq_ingest_dbt_v1_dbt_service_proto_goTypes,
		DependencyIndexes: file_synq_ingest_dbt_v1_dbt_service_proto_depIdxs,
		MessageInfos:      file_synq_ingest_dbt_v1_dbt_service_proto_msgTypes,
	}.Build()
	File_synq_ingest_dbt_v1_dbt_service_proto = out.File
	file_synq_ingest_dbt_v1_dbt_service_proto_goTypes = nil
	file_synq_ingest_dbt_v1_dbt_service_proto_depIdxs = nil
}
