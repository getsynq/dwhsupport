// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             (unknown)
// source: synq/ingest/dwh/v1/dwh_service.proto

package v1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	DwhService_IngestObjectInformation_FullMethodName = "/synq.ingest.dwh.v1.DwhService/IngestObjectInformation"
	DwhService_IngestSqlDefinitions_FullMethodName    = "/synq.ingest.dwh.v1.DwhService/IngestSqlDefinitions"
	DwhService_IngestSchemas_FullMethodName           = "/synq.ingest.dwh.v1.DwhService/IngestSchemas"
	DwhService_IngestObjectMetrics_FullMethodName     = "/synq.ingest.dwh.v1.DwhService/IngestObjectMetrics"
)

// DwhServiceClient is the client API for DwhService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type DwhServiceClient interface {
	IngestObjectInformation(ctx context.Context, in *IngestObjectInformationRequest, opts ...grpc.CallOption) (*IngestObjectInformationResponse, error)
	IngestSqlDefinitions(ctx context.Context, in *IngestSqlDefinitionsRequest, opts ...grpc.CallOption) (*IngestSqlDefinitionsResponse, error)
	IngestSchemas(ctx context.Context, in *IngestSchemasRequest, opts ...grpc.CallOption) (*IngestSchemasResponse, error)
	IngestObjectMetrics(ctx context.Context, in *IngestObjectMetricsRequest, opts ...grpc.CallOption) (*IngestObjectMetricsResponse, error)
}

type dwhServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewDwhServiceClient(cc grpc.ClientConnInterface) DwhServiceClient {
	return &dwhServiceClient{cc}
}

func (c *dwhServiceClient) IngestObjectInformation(ctx context.Context, in *IngestObjectInformationRequest, opts ...grpc.CallOption) (*IngestObjectInformationResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(IngestObjectInformationResponse)
	err := c.cc.Invoke(ctx, DwhService_IngestObjectInformation_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dwhServiceClient) IngestSqlDefinitions(ctx context.Context, in *IngestSqlDefinitionsRequest, opts ...grpc.CallOption) (*IngestSqlDefinitionsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(IngestSqlDefinitionsResponse)
	err := c.cc.Invoke(ctx, DwhService_IngestSqlDefinitions_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dwhServiceClient) IngestSchemas(ctx context.Context, in *IngestSchemasRequest, opts ...grpc.CallOption) (*IngestSchemasResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(IngestSchemasResponse)
	err := c.cc.Invoke(ctx, DwhService_IngestSchemas_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dwhServiceClient) IngestObjectMetrics(ctx context.Context, in *IngestObjectMetricsRequest, opts ...grpc.CallOption) (*IngestObjectMetricsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(IngestObjectMetricsResponse)
	err := c.cc.Invoke(ctx, DwhService_IngestObjectMetrics_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DwhServiceServer is the server API for DwhService service.
// All implementations must embed UnimplementedDwhServiceServer
// for forward compatibility.
type DwhServiceServer interface {
	IngestObjectInformation(context.Context, *IngestObjectInformationRequest) (*IngestObjectInformationResponse, error)
	IngestSqlDefinitions(context.Context, *IngestSqlDefinitionsRequest) (*IngestSqlDefinitionsResponse, error)
	IngestSchemas(context.Context, *IngestSchemasRequest) (*IngestSchemasResponse, error)
	IngestObjectMetrics(context.Context, *IngestObjectMetricsRequest) (*IngestObjectMetricsResponse, error)
	mustEmbedUnimplementedDwhServiceServer()
}

// UnimplementedDwhServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedDwhServiceServer struct{}

func (UnimplementedDwhServiceServer) IngestObjectInformation(context.Context, *IngestObjectInformationRequest) (*IngestObjectInformationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IngestObjectInformation not implemented")
}
func (UnimplementedDwhServiceServer) IngestSqlDefinitions(context.Context, *IngestSqlDefinitionsRequest) (*IngestSqlDefinitionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IngestSqlDefinitions not implemented")
}
func (UnimplementedDwhServiceServer) IngestSchemas(context.Context, *IngestSchemasRequest) (*IngestSchemasResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IngestSchemas not implemented")
}
func (UnimplementedDwhServiceServer) IngestObjectMetrics(context.Context, *IngestObjectMetricsRequest) (*IngestObjectMetricsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IngestObjectMetrics not implemented")
}
func (UnimplementedDwhServiceServer) mustEmbedUnimplementedDwhServiceServer() {}
func (UnimplementedDwhServiceServer) testEmbeddedByValue()                    {}

// UnsafeDwhServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to DwhServiceServer will
// result in compilation errors.
type UnsafeDwhServiceServer interface {
	mustEmbedUnimplementedDwhServiceServer()
}

func RegisterDwhServiceServer(s grpc.ServiceRegistrar, srv DwhServiceServer) {
	// If the following call pancis, it indicates UnimplementedDwhServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&DwhService_ServiceDesc, srv)
}

func _DwhService_IngestObjectInformation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IngestObjectInformationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DwhServiceServer).IngestObjectInformation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DwhService_IngestObjectInformation_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DwhServiceServer).IngestObjectInformation(ctx, req.(*IngestObjectInformationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DwhService_IngestSqlDefinitions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IngestSqlDefinitionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DwhServiceServer).IngestSqlDefinitions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DwhService_IngestSqlDefinitions_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DwhServiceServer).IngestSqlDefinitions(ctx, req.(*IngestSqlDefinitionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DwhService_IngestSchemas_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IngestSchemasRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DwhServiceServer).IngestSchemas(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DwhService_IngestSchemas_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DwhServiceServer).IngestSchemas(ctx, req.(*IngestSchemasRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DwhService_IngestObjectMetrics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IngestObjectMetricsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DwhServiceServer).IngestObjectMetrics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DwhService_IngestObjectMetrics_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DwhServiceServer).IngestObjectMetrics(ctx, req.(*IngestObjectMetricsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// DwhService_ServiceDesc is the grpc.ServiceDesc for DwhService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var DwhService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "synq.ingest.dwh.v1.DwhService",
	HandlerType: (*DwhServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "IngestObjectInformation",
			Handler:    _DwhService_IngestObjectInformation_Handler,
		},
		{
			MethodName: "IngestSqlDefinitions",
			Handler:    _DwhService_IngestSqlDefinitions_Handler,
		},
		{
			MethodName: "IngestSchemas",
			Handler:    _DwhService_IngestSchemas_Handler,
		},
		{
			MethodName: "IngestObjectMetrics",
			Handler:    _DwhService_IngestObjectMetrics_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "synq/ingest/dwh/v1/dwh_service.proto",
}
