// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        (unknown)
// source: synq/ingest/sqlmesh/v1/sqlmesh_service.proto

package v1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	v1 "github.com/getsynq/api/ingest/git/v1"
	_ "github.com/getsynq/api/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type IngestMetadataRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Data from /api/meta
	ApiMeta []byte `protobuf:"bytes,1,opt,name=api_meta,json=apiMeta,proto3" json:"api_meta,omitempty"`
	// Data from /api/models
	Models []byte `protobuf:"bytes,2,opt,name=models,proto3" json:"models,omitempty"`
	// Data from /api/models/{model_id}
	ModelDetails map[string][]byte `protobuf:"bytes,3,rep,name=model_details,json=modelDetails,proto3" json:"model_details,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Data from /api/lineage/{model_id}
	ModelLineage map[string][]byte `protobuf:"bytes,4,rep,name=model_lineage,json=modelLineage,proto3" json:"model_lineage,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Data from /api/files
	Files []byte `protobuf:"bytes,5,opt,name=files,proto3" json:"files,omitempty"`
	// Data from /api/file/{file_path}
	FileContent map[string][]byte `protobuf:"bytes,10,rep,name=file_content,json=fileContent,proto3" json:"file_content,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Data from /api/environments
	Environments []byte `protobuf:"bytes,6,opt,name=environments,proto3" json:"environments,omitempty"`
	// Version of the uploader tool
	UploaderVersion string `protobuf:"bytes,7,opt,name=uploader_version,json=uploaderVersion,proto3" json:"uploader_version,omitempty"`
	// Build time of the uploader tool
	UploaderBuildTime string `protobuf:"bytes,8,opt,name=uploader_build_time,json=uploaderBuildTime,proto3" json:"uploader_build_time,omitempty"`
	// Time at which state was collected
	StateAt *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=state_at,json=stateAt,proto3" json:"state_at,omitempty"`
	// Git context of the project
	GitContext    *v1.GitContext `protobuf:"bytes,11,opt,name=git_context,json=gitContext,proto3" json:"git_context,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IngestMetadataRequest) Reset() {
	*x = IngestMetadataRequest{}
	mi := &file_synq_ingest_sqlmesh_v1_sqlmesh_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IngestMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IngestMetadataRequest) ProtoMessage() {}

func (x *IngestMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_synq_ingest_sqlmesh_v1_sqlmesh_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IngestMetadataRequest.ProtoReflect.Descriptor instead.
func (*IngestMetadataRequest) Descriptor() ([]byte, []int) {
	return file_synq_ingest_sqlmesh_v1_sqlmesh_service_proto_rawDescGZIP(), []int{0}
}

func (x *IngestMetadataRequest) GetApiMeta() []byte {
	if x != nil {
		return x.ApiMeta
	}
	return nil
}

func (x *IngestMetadataRequest) GetModels() []byte {
	if x != nil {
		return x.Models
	}
	return nil
}

func (x *IngestMetadataRequest) GetModelDetails() map[string][]byte {
	if x != nil {
		return x.ModelDetails
	}
	return nil
}

func (x *IngestMetadataRequest) GetModelLineage() map[string][]byte {
	if x != nil {
		return x.ModelLineage
	}
	return nil
}

func (x *IngestMetadataRequest) GetFiles() []byte {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *IngestMetadataRequest) GetFileContent() map[string][]byte {
	if x != nil {
		return x.FileContent
	}
	return nil
}

func (x *IngestMetadataRequest) GetEnvironments() []byte {
	if x != nil {
		return x.Environments
	}
	return nil
}

func (x *IngestMetadataRequest) GetUploaderVersion() string {
	if x != nil {
		return x.UploaderVersion
	}
	return ""
}

func (x *IngestMetadataRequest) GetUploaderBuildTime() string {
	if x != nil {
		return x.UploaderBuildTime
	}
	return ""
}

func (x *IngestMetadataRequest) GetStateAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StateAt
	}
	return nil
}

func (x *IngestMetadataRequest) GetGitContext() *v1.GitContext {
	if x != nil {
		return x.GitContext
	}
	return nil
}

type IngestMetadataResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IngestMetadataResponse) Reset() {
	*x = IngestMetadataResponse{}
	mi := &file_synq_ingest_sqlmesh_v1_sqlmesh_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IngestMetadataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IngestMetadataResponse) ProtoMessage() {}

func (x *IngestMetadataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_synq_ingest_sqlmesh_v1_sqlmesh_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IngestMetadataResponse.ProtoReflect.Descriptor instead.
func (*IngestMetadataResponse) Descriptor() ([]byte, []int) {
	return file_synq_ingest_sqlmesh_v1_sqlmesh_service_proto_rawDescGZIP(), []int{1}
}

type IngestExecutionRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Command passed to the sqlmesh tool
	Command []string `protobuf:"bytes,1,rep,name=command,proto3" json:"command,omitempty"`
	// Exit code of the sqlmesh command
	ExitCode int32 `protobuf:"varint,2,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`
	// Standard output log of the SqlMesh command
	StdOut []byte `protobuf:"bytes,3,opt,name=std_out,json=stdOut,proto3" json:"std_out,omitempty"`
	// Standard error log of the SqlMesh command
	StdErr []byte `protobuf:"bytes,4,opt,name=std_err,json=stdErr,proto3" json:"std_err,omitempty"`
	// Environment variables collected during execution
	EnvironmentVars map[string]string `protobuf:"bytes,5,rep,name=environment_vars,json=environmentVars,proto3" json:"environment_vars,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Version of the uploader tool
	UploaderVersion string `protobuf:"bytes,7,opt,name=uploader_version,json=uploaderVersion,proto3" json:"uploader_version,omitempty"`
	// Build time of the uploader tool
	UploaderBuildTime string `protobuf:"bytes,8,opt,name=uploader_build_time,json=uploaderBuildTime,proto3" json:"uploader_build_time,omitempty"`
	// Time at which the execution started
	StartedAt *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	// Time at which the execution finished
	FinishedAt *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=finished_at,json=finishedAt,proto3" json:"finished_at,omitempty"`
	// Git context of the project
	GitContext    *v1.GitContext `protobuf:"bytes,11,opt,name=git_context,json=gitContext,proto3" json:"git_context,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IngestExecutionRequest) Reset() {
	*x = IngestExecutionRequest{}
	mi := &file_synq_ingest_sqlmesh_v1_sqlmesh_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IngestExecutionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IngestExecutionRequest) ProtoMessage() {}

func (x *IngestExecutionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_synq_ingest_sqlmesh_v1_sqlmesh_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IngestExecutionRequest.ProtoReflect.Descriptor instead.
func (*IngestExecutionRequest) Descriptor() ([]byte, []int) {
	return file_synq_ingest_sqlmesh_v1_sqlmesh_service_proto_rawDescGZIP(), []int{2}
}

func (x *IngestExecutionRequest) GetCommand() []string {
	if x != nil {
		return x.Command
	}
	return nil
}

func (x *IngestExecutionRequest) GetExitCode() int32 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

func (x *IngestExecutionRequest) GetStdOut() []byte {
	if x != nil {
		return x.StdOut
	}
	return nil
}

func (x *IngestExecutionRequest) GetStdErr() []byte {
	if x != nil {
		return x.StdErr
	}
	return nil
}

func (x *IngestExecutionRequest) GetEnvironmentVars() map[string]string {
	if x != nil {
		return x.EnvironmentVars
	}
	return nil
}

func (x *IngestExecutionRequest) GetUploaderVersion() string {
	if x != nil {
		return x.UploaderVersion
	}
	return ""
}

func (x *IngestExecutionRequest) GetUploaderBuildTime() string {
	if x != nil {
		return x.UploaderBuildTime
	}
	return ""
}

func (x *IngestExecutionRequest) GetStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

func (x *IngestExecutionRequest) GetFinishedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.FinishedAt
	}
	return nil
}

func (x *IngestExecutionRequest) GetGitContext() *v1.GitContext {
	if x != nil {
		return x.GitContext
	}
	return nil
}

type IngestExecutionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IngestExecutionResponse) Reset() {
	*x = IngestExecutionResponse{}
	mi := &file_synq_ingest_sqlmesh_v1_sqlmesh_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IngestExecutionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IngestExecutionResponse) ProtoMessage() {}

func (x *IngestExecutionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_synq_ingest_sqlmesh_v1_sqlmesh_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IngestExecutionResponse.ProtoReflect.Descriptor instead.
func (*IngestExecutionResponse) Descriptor() ([]byte, []int) {
	return file_synq_ingest_sqlmesh_v1_sqlmesh_service_proto_rawDescGZIP(), []int{3}
}

var File_synq_ingest_sqlmesh_v1_sqlmesh_service_proto protoreflect.FileDescriptor

var file_synq_ingest_sqlmesh_v1_sqlmesh_service_proto_rawDesc = string([]byte{
	0x0a, 0x2c, 0x73, 0x79, 0x6e, 0x71, 0x2f, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x2f, 0x73, 0x71,
	0x6c, 0x6d, 0x65, 0x73, 0x68, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x71, 0x6c, 0x6d, 0x65, 0x73, 0x68,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16,
	0x73, 0x79, 0x6e, 0x71, 0x2e, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x73, 0x71, 0x6c, 0x6d,
	0x65, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x73, 0x79, 0x6e, 0x71, 0x2f, 0x69, 0x6e, 0x67, 0x65, 0x73,
	0x74, 0x2f, 0x67, 0x69, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x73, 0x79, 0x6e, 0x71,
	0x2f, 0x76, 0x31, 0x2f, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xdd, 0x06,
	0x0a, 0x15, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x70, 0x69, 0x5f, 0x6d,
	0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x61, 0x70, 0x69, 0x4d, 0x65,
	0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x12, 0x64, 0x0a, 0x0d, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x3f, 0x2e, 0x73, 0x79, 0x6e, 0x71, 0x2e, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x2e,
	0x73, 0x71, 0x6c, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x67, 0x65, 0x73,
	0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x0c, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x12, 0x64, 0x0a, 0x0d, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x61, 0x67,
	0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x73, 0x79, 0x6e, 0x71, 0x2e, 0x69,
	0x6e, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x73, 0x71, 0x6c, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x76, 0x31,
	0x2e, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4c, 0x69, 0x6e, 0x65,
	0x61, 0x67, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x4c,
	0x69, 0x6e, 0x65, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x61, 0x0a, 0x0c,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x73, 0x79, 0x6e, 0x71, 0x2e, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74,
	0x2e, 0x73, 0x71, 0x6c, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x67, 0x65,
	0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12,
	0x22, 0x0a, 0x0c, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x5f,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x75,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2e,
	0x0a, 0x13, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x75, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x65, 0x72, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x4a,
	0x0a, 0x08, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x13, 0xba, 0x48,
	0x10, 0xc8, 0x01, 0x01, 0xb2, 0x01, 0x0a, 0x38, 0x01, 0x2a, 0x06, 0x08, 0x80, 0xb3, 0xbe, 0x8e,
	0x06, 0x52, 0x07, 0x73, 0x74, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x3f, 0x0a, 0x0b, 0x67, 0x69,
	0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x73, 0x79, 0x6e, 0x71, 0x2e, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x67, 0x69,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52,
	0x0a, 0x67, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x1a, 0x3f, 0x0a, 0x11, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3f, 0x0a, 0x11,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4c, 0x69, 0x6e, 0x65, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3e, 0x0a,
	0x10, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x18, 0x0a,
	0x16, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xf7, 0x05, 0x0a, 0x16, 0x49, 0x6e, 0x67, 0x65,
	0x73, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x65, 0x78, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x65, 0x78, 0x69, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x74, 0x64,
	0x5f, 0x6f, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x74, 0x64, 0x4f,
	0x75, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x74, 0x64, 0x5f, 0x65, 0x72, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x74, 0x64, 0x45, 0x72, 0x72, 0x12, 0x6e, 0x0a, 0x10, 0x65,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x61, 0x72, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x73, 0x79, 0x6e, 0x71, 0x2e, 0x69, 0x6e, 0x67,
	0x65, 0x73, 0x74, 0x2e, 0x73, 0x71, 0x6c, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x49,
	0x6e, 0x67, 0x65, 0x73, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x56, 0x61, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f, 0x65, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x72, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x75,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x13, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x65, 0x72, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x11, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x42, 0x75, 0x69,
	0x6c, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x4e, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x13, 0xba, 0x48, 0x10, 0xc8, 0x01, 0x01, 0xb2, 0x01,
	0x0a, 0x38, 0x01, 0x2a, 0x06, 0x08, 0x80, 0xb3, 0xbe, 0x8e, 0x06, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x45, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x08, 0xba, 0x48, 0x05, 0xb2, 0x01, 0x02, 0x38,
	0x01, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3f, 0x0a,
	0x0b, 0x67, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x79, 0x6e, 0x71, 0x2e, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74,
	0x2e, 0x67, 0x69, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x52, 0x0a, 0x67, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x1a, 0x42,
	0x0a, 0x14, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x72,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x3a, 0x8c, 0x01, 0xba, 0x48, 0x88, 0x01, 0x1a, 0x85, 0x01, 0x0a, 0x24, 0x69, 0x6e,
	0x67, 0x65, 0x73, 0x74, 0x5f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x12, 0x38, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x20, 0x61, 0x74, 0x20,
	0x6d, 0x75, 0x73, 0x74, 0x20, 0x62, 0x65, 0x20, 0x67, 0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x20,
	0x74, 0x68, 0x61, 0x6e, 0x20, 0x6f, 0x72, 0x20, 0x65, 0x71, 0x75, 0x61, 0x6c, 0x20, 0x74, 0x6f,
	0x20, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x20, 0x61, 0x74, 0x2e, 0x1a, 0x23, 0x74, 0x68,
	0x69, 0x73, 0x2e, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x20, 0x3e,
	0x3d, 0x20, 0x74, 0x68, 0x69, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x22, 0x19, 0x0a, 0x17, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x87, 0x02, 0x0a,
	0x0e, 0x53, 0x71, 0x6c, 0x4d, 0x65, 0x73, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x78, 0x0a, 0x0e, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x2d, 0x2e, 0x73, 0x79, 0x6e, 0x71, 0x2e, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x2e,
	0x73, 0x71, 0x6c, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x67, 0x65, 0x73,
	0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2e, 0x2e, 0x73, 0x79, 0x6e, 0x71, 0x2e, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x73,
	0x71, 0x6c, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x07, 0xd2, 0xb5, 0x18, 0x03, 0x0a, 0x01, 0x2a, 0x12, 0x7b, 0x0a, 0x0f, 0x49, 0x6e, 0x67,
	0x65, 0x73, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x2e, 0x73,
	0x79, 0x6e, 0x71, 0x2e, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x73, 0x71, 0x6c, 0x6d, 0x65,
	0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x73,
	0x79, 0x6e, 0x71, 0x2e, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x73, 0x71, 0x6c, 0x6d, 0x65,
	0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x07, 0xd2,
	0xb5, 0x18, 0x03, 0x0a, 0x01, 0x2a, 0x42, 0xd6, 0x01, 0x0a, 0x1a, 0x63, 0x6f, 0x6d, 0x2e, 0x73,
	0x79, 0x6e, 0x71, 0x2e, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x73, 0x71, 0x6c, 0x6d, 0x65,
	0x73, 0x68, 0x2e, 0x76, 0x31, 0x42, 0x13, 0x53, 0x71, 0x6c, 0x6d, 0x65, 0x73, 0x68, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x28, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x65, 0x74, 0x73, 0x79, 0x6e, 0x71,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x2f, 0x73, 0x71, 0x6c, 0x6d,
	0x65, 0x73, 0x68, 0x2f, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x53, 0x49, 0x53, 0xaa, 0x02, 0x16, 0x53,
	0x79, 0x6e, 0x71, 0x2e, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x71, 0x6c, 0x6d, 0x65,
	0x73, 0x68, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x16, 0x53, 0x79, 0x6e, 0x71, 0x5c, 0x49, 0x6e, 0x67,
	0x65, 0x73, 0x74, 0x5c, 0x53, 0x71, 0x6c, 0x6d, 0x65, 0x73, 0x68, 0x5c, 0x56, 0x31, 0xe2, 0x02,
	0x22, 0x53, 0x79, 0x6e, 0x71, 0x5c, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x5c, 0x53, 0x71, 0x6c,
	0x6d, 0x65, 0x73, 0x68, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0xea, 0x02, 0x19, 0x53, 0x79, 0x6e, 0x71, 0x3a, 0x3a, 0x49, 0x6e, 0x67, 0x65,
	0x73, 0x74, 0x3a, 0x3a, 0x53, 0x71, 0x6c, 0x6d, 0x65, 0x73, 0x68, 0x3a, 0x3a, 0x56, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_synq_ingest_sqlmesh_v1_sqlmesh_service_proto_rawDescOnce sync.Once
	file_synq_ingest_sqlmesh_v1_sqlmesh_service_proto_rawDescData []byte
)

func file_synq_ingest_sqlmesh_v1_sqlmesh_service_proto_rawDescGZIP() []byte {
	file_synq_ingest_sqlmesh_v1_sqlmesh_service_proto_rawDescOnce.Do(func() {
		file_synq_ingest_sqlmesh_v1_sqlmesh_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_synq_ingest_sqlmesh_v1_sqlmesh_service_proto_rawDesc), len(file_synq_ingest_sqlmesh_v1_sqlmesh_service_proto_rawDesc)))
	})
	return file_synq_ingest_sqlmesh_v1_sqlmesh_service_proto_rawDescData
}

var file_synq_ingest_sqlmesh_v1_sqlmesh_service_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_synq_ingest_sqlmesh_v1_sqlmesh_service_proto_goTypes = []any{
	(*IngestMetadataRequest)(nil),   // 0: synq.ingest.sqlmesh.v1.IngestMetadataRequest
	(*IngestMetadataResponse)(nil),  // 1: synq.ingest.sqlmesh.v1.IngestMetadataResponse
	(*IngestExecutionRequest)(nil),  // 2: synq.ingest.sqlmesh.v1.IngestExecutionRequest
	(*IngestExecutionResponse)(nil), // 3: synq.ingest.sqlmesh.v1.IngestExecutionResponse
	nil,                             // 4: synq.ingest.sqlmesh.v1.IngestMetadataRequest.ModelDetailsEntry
	nil,                             // 5: synq.ingest.sqlmesh.v1.IngestMetadataRequest.ModelLineageEntry
	nil,                             // 6: synq.ingest.sqlmesh.v1.IngestMetadataRequest.FileContentEntry
	nil,                             // 7: synq.ingest.sqlmesh.v1.IngestExecutionRequest.EnvironmentVarsEntry
	(*timestamppb.Timestamp)(nil),   // 8: google.protobuf.Timestamp
	(*v1.GitContext)(nil),           // 9: synq.ingest.git.v1.GitContext
}
var file_synq_ingest_sqlmesh_v1_sqlmesh_service_proto_depIdxs = []int32{
	4,  // 0: synq.ingest.sqlmesh.v1.IngestMetadataRequest.model_details:type_name -> synq.ingest.sqlmesh.v1.IngestMetadataRequest.ModelDetailsEntry
	5,  // 1: synq.ingest.sqlmesh.v1.IngestMetadataRequest.model_lineage:type_name -> synq.ingest.sqlmesh.v1.IngestMetadataRequest.ModelLineageEntry
	6,  // 2: synq.ingest.sqlmesh.v1.IngestMetadataRequest.file_content:type_name -> synq.ingest.sqlmesh.v1.IngestMetadataRequest.FileContentEntry
	8,  // 3: synq.ingest.sqlmesh.v1.IngestMetadataRequest.state_at:type_name -> google.protobuf.Timestamp
	9,  // 4: synq.ingest.sqlmesh.v1.IngestMetadataRequest.git_context:type_name -> synq.ingest.git.v1.GitContext
	7,  // 5: synq.ingest.sqlmesh.v1.IngestExecutionRequest.environment_vars:type_name -> synq.ingest.sqlmesh.v1.IngestExecutionRequest.EnvironmentVarsEntry
	8,  // 6: synq.ingest.sqlmesh.v1.IngestExecutionRequest.started_at:type_name -> google.protobuf.Timestamp
	8,  // 7: synq.ingest.sqlmesh.v1.IngestExecutionRequest.finished_at:type_name -> google.protobuf.Timestamp
	9,  // 8: synq.ingest.sqlmesh.v1.IngestExecutionRequest.git_context:type_name -> synq.ingest.git.v1.GitContext
	0,  // 9: synq.ingest.sqlmesh.v1.SqlMeshService.IngestMetadata:input_type -> synq.ingest.sqlmesh.v1.IngestMetadataRequest
	2,  // 10: synq.ingest.sqlmesh.v1.SqlMeshService.IngestExecution:input_type -> synq.ingest.sqlmesh.v1.IngestExecutionRequest
	1,  // 11: synq.ingest.sqlmesh.v1.SqlMeshService.IngestMetadata:output_type -> synq.ingest.sqlmesh.v1.IngestMetadataResponse
	3,  // 12: synq.ingest.sqlmesh.v1.SqlMeshService.IngestExecution:output_type -> synq.ingest.sqlmesh.v1.IngestExecutionResponse
	11, // [11:13] is the sub-list for method output_type
	9,  // [9:11] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_synq_ingest_sqlmesh_v1_sqlmesh_service_proto_init() }
func file_synq_ingest_sqlmesh_v1_sqlmesh_service_proto_init() {
	if File_synq_ingest_sqlmesh_v1_sqlmesh_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_synq_ingest_sqlmesh_v1_sqlmesh_service_proto_rawDesc), len(file_synq_ingest_sqlmesh_v1_sqlmesh_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_synq_ingest_sqlmesh_v1_sqlmesh_service_proto_goTypes,
		DependencyIndexes: file_synq_ingest_sqlmesh_v1_sqlmesh_service_proto_depIdxs,
		MessageInfos:      file_synq_ingest_sqlmesh_v1_sqlmesh_service_proto_msgTypes,
	}.Build()
	File_synq_ingest_sqlmesh_v1_sqlmesh_service_proto = out.File
	file_synq_ingest_sqlmesh_v1_sqlmesh_service_proto_goTypes = nil
	file_synq_ingest_sqlmesh_v1_sqlmesh_service_proto_depIdxs = nil
}
